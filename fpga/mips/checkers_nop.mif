DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00000000000000000000000000000000; -- nop

0001 : 00000000000000000000000000000000; -- nop

0002 : 00000000000000000000000000000000; -- nop

0003 : 00000000000000000000000000000000; -- nop

0004 : 00000000000000000000000000000000; -- nop

0005 : 00000000000000000000000000000000; -- nop

0006 : 00000000000000000000000000000000; -- nop

0007 : 00000000000000000000000000000000; -- nop

0008 : 00000000000000000000000000000000; -- nop

0009 : 00101111010000000000111111111111; -- 	addi $sp, $zero, 4095	# Move stack pointer to end of stack (for our FPGA processor)

0010 : 00000000000000000000000000000000; -- nop

0011 : 00000000000000000000000000000000; -- nop

0012 : 00101100100000000000000000000001; -- 	addi $s2, $zero, 1		# Stack word size (4 for MARS, 1 for our processor)

0013 : 00000000000000000000000000000000; -- nop

0014 : 00000000000000000000000000000000; -- nop

0015 : 00101100110000000000000000000000; -- 	addi $s3, $zero, 0		# Previously seen op code ready flag starts at 0

0016 : 00000000000000000000000000000000; -- nop

0017 : 00000000000000000000000000000000; -- nop

0018 : 00000000000000000000000000000000; -- nop

0019 : 00000000000000000000000000000000; -- nop

0020 : 00000000000000000000000000000000; -- nop

0021 : 00000000000000000000000000000000; -- nop

0022 : 00101100011110100000000000000000; -- 	addi $s1, $sp, 0		# Save board start location to $s1

0023 : 00000000000000000000000000000000; -- nop

0024 : 00000000000000000000000000000000; -- nop

0025 : 00101111011110111111111111100000; -- 	addi $sp, $sp, -32		# Reserve 32 words on stack for board

0026 : 00000000000000000000000000000000; -- nop

0027 : 00000000000000000000000000000000; -- nop

0028 : 00000000000000000000000000000000; -- nop

0029 : 00000000000000000000000000000000; -- nop

0030 : 00011000000000000000000000100110; -- 	jal reset_game			# Reset game	

0031 : 00000000000000000000000000000000; -- nop

0032 : 00000000000000000000000000000000; -- nop

0033 : 00001000000000000000000011011101; -- 	j game_loop				# Jump to game loop after setting up

0034 : 00000000000000000000000000000000; -- nop

0035 : 00000000000000000000000000000000; -- nop

0036 : 00000000000000000000000000000000; -- nop

0037 : 00000000000000000000000000000000; -- nop

0038 : 00000000000000000000000000000000; -- nop

0039 : 00000000000000000000000000000000; -- nop

0040 : 00000000000000000000000000000000; -- nop

0041 : 00000000000000000000000000000000; -- nop

0042 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0043 : 00000000000000000000000000000000; -- nop

0044 : 00000000000000000000000000000000; -- nop

0045 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0046 : 00000000000000000000000000000000; -- nop

0047 : 00000000000000000000000000000000; -- nop

0048 : 00000000000000000000000000000000; -- nop

0049 : 00000000000000000000000000000000; -- nop

0050 : 00011000000000000000000001001001; -- 	jal	init_board

0051 : 00000000000000000000000000000000; -- nop

0052 : 00000000000000000000000000000000; -- nop

0053 : 00101100000000000000000000000001; -- 	addi $s0, $0, 1			# Put player 1 in player register

0054 : 00000000000000000000000000000000; -- nop

0055 : 00000000000000000000000000000000; -- nop

0056 : 00000000000000000000000000000000; -- nop

0057 : 00000000000000000000000000000000; -- nop

0058 : 00000000000000000000000000000000; -- nop

0059 : 00000000000000000000000000000000; -- nop

0060 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0061 : 00000000000000000000000000000000; -- nop

0062 : 00000000000000000000000000000000; -- nop

0063 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0064 : 00000000000000000000000000000000; -- nop

0065 : 00000000000000000000000000000000; -- nop

0066 : 00000000000000000000000000000000; -- nop

0067 : 00000000000000000000000000000000; -- nop

0068 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0069 : 00000000000000000000000000000000; -- nop

0070 : 00000000000000000000000000000000; -- nop

0071 : 00000000000000000000000000000000; -- nop

0072 : 00000000000000000000000000000000; -- nop

0073 : 00000000000000000000000000000000; -- nop

0074 : 00000000000000000000000000000000; -- nop

0075 : 00000000000000000000000000000000; -- nop

0076 : 00000000000000000000000000000000; -- nop

0077 : 00000000000000000000000000000000; -- nop

0078 : 00000000000000000000000000000000; -- nop

0079 : 00000000000000000000000000000000; -- nop

0080 : 00000000000000000000000000000000; -- nop

0081 : 00000000000000000000000000000000; -- nop

0082 : 00000000000000000000000000000000; -- nop

0083 : 00000000000000000000000000000000; -- nop

0084 : 00000000000000000000000000000000; -- nop

0085 : 00000000000000000000000000000000; -- nop

0086 : 00000000000000000000000000000000; -- nop

0087 : 00000000000000000000000000000000; -- nop

0088 : 00000000000000000000000000000000; -- nop

0089 : 00000000000000000000000000000000; -- nop

0090 : 00000000000000000000000000000000; -- nop

0091 : 00000000000000000000000000000000; -- nop

0092 : 00000000000000000000000000000000; -- nop

0093 : 00000000000000000000000000000000; -- nop

0094 : 00000000000000000000000000000000; -- nop

0095 : 00000000000000000000000000000000; -- nop

0096 : 00000000000000000000000000000000; -- nop

0097 : 00000000000000000000000000000000; -- nop

0098 : 00000000000000000000000000000000; -- nop

0099 : 00000000000000000000000000000000; -- nop

0100 : 00000000000000000000000000000000; -- nop

0101 : 00000000000000000000000000000000; -- nop

0102 : 00000000000000000000000000000000; -- nop

0103 : 00000000000000000000000000000000; -- nop

0104 : 00000000000000000000000000000000; -- nop

0105 : 00000000000000000000000000000000; -- nop

0106 : 00000000000000000000000000000000; -- nop

0107 : 00000000000000000000000000000000; -- nop

0108 : 00000000000000000000000000000000; -- nop

0109 : 00000000000000000000000000000000; -- nop

0110 : 00000000000000000000000000000000; -- nop

0111 : 00000000000000000000000000000000; -- nop

0112 : 00000000000000000000000000000000; -- nop

0113 : 00000000000000000000000000000000; -- nop

0114 : 00000000000000000000000000000000; -- nop

0115 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0116 : 00000000000000000000000000000000; -- nop

0117 : 00000000000000000000000000000000; -- nop

0118 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0119 : 00000000000000000000000000000000; -- nop

0120 : 00000000000000000000000000000000; -- nop

0121 : 00000000000000000000000000000000; -- nop

0122 : 00000000000000000000000000000000; -- nop

0123 : 00000000000000000000000000000000; -- nop

0124 : 00000000000000000000000000000000; -- nop

0125 : 00101010001000100000000000000000; -- 	addi $t0, $s1, 0		# Board position in stack

0126 : 00000000000000000000000000000000; -- nop

0127 : 00000000000000000000000000000000; -- nop

0128 : 00000000000000000000000000000000; -- nop

0129 : 00000000000000000000000000000000; -- nop

0130 : 00000000000000000000000000000000; -- nop

0131 : 00000000000000000000000000000000; -- nop

0132 : 00101010010000000000000000000001; -- 	addi $t1, $zero, 1		# Checker type = player 1

0133 : 00000000000000000000000000000000; -- nop

0134 : 00000000000000000000000000000000; -- nop

0135 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0136 : 00000000000000000000000000000000; -- nop

0137 : 00000000000000000000000000000000; -- nop

0138 : 00101010110000000000000000001100; -- 	addi $t3, $zero, 12		# Number of checkers = 12

0139 : 00000000000000000000000000000000; -- nop

0140 : 00000000000000000000000000000000; -- nop

0141 : 00011000000000000000000010111001; -- 	jal init_loop			# Loop to place checkers

0142 : 00000000000000000000000000000000; -- nop

0143 : 00000000000000000000000000000000; -- nop

0144 : 00000000000000000000000000000000; -- nop

0145 : 00000000000000000000000000000000; -- nop

0146 : 00000000000000000000000000000000; -- nop

0147 : 00000000000000000000000000000000; -- nop

0148 : 00101010010000000000000000000000; -- 	addi $t1, $zero, 0		# Checker type = blank

0149 : 00000000000000000000000000000000; -- nop

0150 : 00000000000000000000000000000000; -- nop

0151 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0152 : 00000000000000000000000000000000; -- nop

0153 : 00000000000000000000000000000000; -- nop

0154 : 00101010110000000000000000001000; -- 	addi $t3, $zero, 8		# Number of checkers = 8

0155 : 00000000000000000000000000000000; -- nop

0156 : 00000000000000000000000000000000; -- nop

0157 : 00011000000000000000000010111001; -- 	jal init_loop			# Loop to place checkers

0158 : 00000000000000000000000000000000; -- nop

0159 : 00000000000000000000000000000000; -- nop

0160 : 00000000000000000000000000000000; -- nop

0161 : 00000000000000000000000000000000; -- nop

0162 : 00000000000000000000000000000000; -- nop

0163 : 00000000000000000000000000000000; -- nop

0164 : 00101010010000000000000000000010; -- 	addi $t1, $zero, 2		# Checker type = player 2

0165 : 00000000000000000000000000000000; -- nop

0166 : 00000000000000000000000000000000; -- nop

0167 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0168 : 00000000000000000000000000000000; -- nop

0169 : 00000000000000000000000000000000; -- nop

0170 : 00101010110000000000000000001100; -- 	addi $t3, $zero, 12		# Number of checkers = 12

0171 : 00000000000000000000000000000000; -- nop

0172 : 00000000000000000000000000000000; -- nop

0173 : 00011000000000000000000010111001; -- 	jal init_loop			# Loop to place checkers

0174 : 00000000000000000000000000000000; -- nop

0175 : 00000000000000000000000000000000; -- nop

0176 : 00000000000000000000000000000000; -- nop

0177 : 00000000000000000000000000000000; -- nop

0178 : 00001000000000000000000011001100; -- 	j finish_init			# Board initialized, jump to end of function

0179 : 00000000000000000000000000000000; -- nop

0180 : 00000000000000000000000000000000; -- nop

0181 : 00000000000000000000000000000000; -- nop

0182 : 00000000000000000000000000000000; -- nop

0183 : 00000000000000000000000000000000; -- nop

0184 : 00000000000000000000000000000000; -- nop

0185 : 00000000000000000000000000000000; -- nop

0186 : 00000000000000000000000000000000; -- nop

0187 : 00111010010100000000000000000000; -- 	sw $t1, 0($t0)			# [$t0+0] = $t1 (save checker in dmem board)

0188 : 00000000000000000000000000000000; -- nop

0189 : 00000000000000000000000000000000; -- nop

0190 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0191 : 00000000000000000000000000000000; -- nop

0192 : 00000000000000000000000000000000; -- nop

0193 : 00101010100101000000000000000001; -- 	addi $t2, $t2, 1		# Increment counter

0194 : 00000000000000000000000000000000; -- nop

0195 : 00000000000000000000000000000000; -- nop

0196 : 00110010100101111111111111110100; -- 	blt $t2, $t3, init_loop	# Keep looping while counter < num checkers

0197 : 00000000000000000000000000000000; -- nop

0198 : 00000000000000000000000000000000; -- nop

0199 : 00100111110000000000000000000000; -- 	jr $ra					# Go back for next checker type

0200 : 00000000000000000000000000000000; -- nop

0201 : 00000000000000000000000000000000; -- nop

0202 : 00000000000000000000000000000000; -- nop

0203 : 00000000000000000000000000000000; -- nop

0204 : 00000000000000000000000000000000; -- nop

0205 : 00000000000000000000000000000000; -- nop

0206 : 00000000000000000000000000000000; -- nop

0207 : 00000000000000000000000000000000; -- nop

0208 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0209 : 00000000000000000000000000000000; -- nop

0210 : 00000000000000000000000000000000; -- nop

0211 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0212 : 00000000000000000000000000000000; -- nop

0213 : 00000000000000000000000000000000; -- nop

0214 : 00000000000000000000000000000000; -- nop

0215 : 00000000000000000000000000000000; -- nop

0216 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0217 : 00000000000000000000000000000000; -- nop

0218 : 00000000000000000000000000000000; -- nop

0219 : 00000000000000000000000000000000; -- nop

0220 : 00000000000000000000000000000000; -- nop

0221 : 00000000000000000000000000000000; -- nop

0222 : 00000000000000000000000000000000; -- nop

0223 : 00000000000000000000000000000000; -- nop

0224 : 00000000000000000000000000000000; -- nop

0225 : 00000000000000000000000000000000; -- nop

0226 : 00000000000000000000000000000000; -- nop

0227 : 00000000000000000000000000000000; -- nop

0228 : 00000000000000000000000000000000; -- nop

0229 : 00000000000000000000000000000000; -- nop

0230 : 00000000000000000000000000000000; -- nop

0231 : 00000000000000000000000000000000; -- nop

0232 : 00000000000000000000000000000000; -- nop

0233 : 00000000000000000000000000000000; -- nop

0234 : 00000000000000000000000000000000; -- nop

0235 : 00000000000000000000000000000000; -- nop

0236 : 00000000000000000000000000000000; -- nop

0237 : 00000000000000000000000000000000; -- nop

0238 : 00000000000000000000000000000000; -- nop

0239 : 00000000000000000000000000000000; -- nop

0240 : 00000000000000000000000000000000; -- nop

0241 : 00000000000000000000000000000000; -- nop

0242 : 00000000000000000000000000000000; -- nop

0243 : 00000000000000000000000000000000; -- nop

0244 : 00000000000000000000000000000000; -- nop

0245 : 00000000000000000000000000000000; -- nop

0246 : 00000000000000000000000000000000; -- nop

0247 : 00000000000000000000000000000000; -- nop

0248 : 00000000000000000000000000000000; -- nop

0249 : 00000000000000000000000000000000; -- nop

0250 : 00000000000000000000000000000000; -- nop

0251 : 00000000000000000000000000000000; -- nop

0252 : 00000000000000000000000000000000; -- nop

0253 : 00000000000000000000000000000000; -- nop

0254 : 00000000000000000000000000000000; -- nop

0255 : 00000000000000000000000000000000; -- nop

0256 : 00000000000000000000000000000000; -- nop

0257 : 00000000000000000000000000000000; -- nop

0258 : 00000000000000000000000000000000; -- nop

0259 : 00000000000000000000000000000000; -- nop

0260 : 00000000000000000000000000000000; -- nop

0261 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for anding

0262 : 00000000000000000000000000000000; -- nop

0263 : 00000000000000000000000000000000; -- nop

0264 : 00000010001101101000000000001000; -- 	and $t0, $27, $t0		# $t0 = 1 iff least significant bit in $27 is 1

0265 : 00000000000000000000000000000000; -- nop

0266 : 00000000000000000000000000000000; -- nop

0267 : 00000000000000000000000000000000; -- nop

0268 : 00000000000000000000000000000000; -- nop

0269 : 00000000000000000000000000000000; -- nop

0270 : 00000000000000000000000000000000; -- nop

0271 : 00010100110100000000000000000111; -- 	bne $s3, $t0, new_data	# Branch if flag set for new op code

0272 : 00000000000000000000000000000000; -- nop

0273 : 00000000000000000000000000000000; -- nop

0274 : 00001000000000000000000011011101; -- 	j game_loop				# Loop again if no new data found

0275 : 00000000000000000000000000000000; -- nop

0276 : 00000000000000000000000000000000; -- nop

0277 : 00000000000000000000000000000000; -- nop

0278 : 00000000000000000000000000000000; -- nop

0279 : 00000000000000000000000000000000; -- nop

0280 : 00000000000000000000000000000000; -- nop

0281 : 00101010011101000000000000000000; -- 	addi $t1, $26, 0		# $t1 = $26 - data that accompanies op code

0282 : 00000000000000000000000000000000; -- nop

0283 : 00000000000000000000000000000000; -- nop

0284 : 00101100110100000000000000000000; -- 	addi $s3, $t0, 0		# Set $s3 to previously seen op code ready flag

0285 : 00000000000000000000000000000000; -- nop

0286 : 00000000000000000000000000000000; -- nop

0287 : 00000010001101100000000010010100; -- 	sra $t0, $27, 1			# $t0 = 4-bit op code

0288 : 00000000000000000000000000000000; -- nop

0289 : 00000000000000000000000000000000; -- nop

0290 : 00000000000000000000000000000000; -- nop

0291 : 00000000000000000000000000000000; -- nop

0292 : 00010010000000000000000011001110; -- 	bne $t0, $zero, not_move# Branch if op code != 0, i.e. not a move

0293 : 00000000000000000000000000000000; -- nop

0294 : 00000000000000000000000000000000; -- nop

0295 : 00000000000000000000000000000000; -- nop

0296 : 00000000000000000000000000000000; -- nop

0297 : 00000000000000000000000000000000; -- nop

0298 : 00000000000000000000000000000000; -- nop

0299 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = board position in memory

0300 : 00000000000000000000000000000000; -- nop

0301 : 00000000000000000000000000000000; -- nop

0302 : 00101010100000000000000000011111; -- 	addi $t2, $zero, 31		# $t2 = 31 = 11111, "and" with data to get space

0303 : 00000000000000000000000000000000; -- nop

0304 : 00000000000000000000000000000000; -- nop

0305 : 00000000000000000000000000000000; -- nop

0306 : 00000000000000000000000000000000; -- nop

0307 : 00000001100100101010000000001000; -- 	and $a2, $t1, $t2		# $a2 = space_to

0308 : 00000000000000000000000000000000; -- nop

0309 : 00000000000000000000000000000000; -- nop

0310 : 00000010010100100000001010010100; -- 	sra $t1, $t1, 5			# Shift data right to get space_from

0311 : 00000000000000000000000000000000; -- nop

0312 : 00000000000000000000000000000000; -- nop

0313 : 00000001010100101010000000001000; -- 	and $a1, $t1, $t2		# $a1 = space_from

0314 : 00000000000000000000000000000000; -- nop

0315 : 00000000000000000000000000000000; -- nop

0316 : 00000010010100100000001010010100; -- 	sra $t1, $t1, 5			# Shift data right to get space_jumped

0317 : 00000000000000000000000000000000; -- nop

0318 : 00000000000000000000000000000000; -- nop

0319 : 00000001110100101010000000001000; -- 	and $a3, $t1, $t2		# $a3 = space_jumped

0320 : 00000000000000000000000000000000; -- nop

0321 : 00000000000000000000000000000000; -- nop

0322 : 00000000000000000000000000000000; -- nop

0323 : 00000000000000000000000000000000; -- nop

0324 : 00000000000000000000000000000000; -- nop

0325 : 00000000000000000000000000000000; -- nop

0326 : 00000000000000000000000000000000; -- nop

0327 : 00000000000000000000000000000000; -- nop

0328 : 00000000000000000000000000000000; -- nop

0329 : 00000000000000000000000000000000; -- nop

0330 : 00000000000000000000000000000000; -- nop

0331 : 00000000000000000000000000000000; -- nop

0332 : 00000000000000000000000000000000; -- nop

0333 : 00000000000000000000000000000000; -- nop

0334 : 00000000000000000000000000000000; -- nop

0335 : 00000000000000000000000000000000; -- nop

0336 : 00000000000000000000000000000000; -- nop

0337 : 00000000000000000000000000000000; -- nop

0338 : 00000000000000000000000000000000; -- nop

0339 : 00000000000000000000000000000000; -- nop

0340 : 00011000000000000000001001100010; -- 	jal make_move			# Update board state to reflect new move

0341 : 00000000000000000000000000000000; -- nop

0342 : 00000000000000000000000000000000; -- nop

0343 : 00000000000000000000000000000000; -- nop

0344 : 00000000000000000000000000000000; -- nop

0345 : 00000000000000000000000000000000; -- nop

0346 : 00000000000000000000000000000000; -- nop

0347 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = board position in memory

0348 : 00000000000000000000000000000000; -- nop

0349 : 00000000000000000000000000000000; -- nop

0350 : 00011000000000000000001100111010; -- 	jal check_win			# Check if one of the players has won

0351 : 00000000000000000000000000000000; -- nop

0352 : 00000000000000000000000000000000; -- nop

0353 : 00010000100000000000000011010001; -- 	bne $v0, $zero, win		# If check_win result is not 0, someone won!

0354 : 00000000000000000000000000000000; -- nop

0355 : 00000000000000000000000000000000; -- nop

0356 : 00000000000000000000000000000000; -- nop

0357 : 00000000000000000000000000000000; -- nop

0358 : 00000000000000000000000000000000; -- nop

0359 : 00000000000000000000000000000000; -- nop

0360 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for checking player

0361 : 00000000000000000000000000000000; -- nop

0362 : 00000000000000000000000000000000; -- nop

0363 : 00010100000100000000000000001000; -- 	bne $s0, $t0, to_p1		# If $s0 != 1, branch because current player is 2

0364 : 00000000000000000000000000000000; -- nop

0365 : 00000000000000000000000000000000; -- nop

0366 : 00101100000000000000000000000010; -- 	addi $s0, $zero, 2		# Change to player 2

0367 : 00000000000000000000000000000000; -- nop

0368 : 00000000000000000000000000000000; -- nop

0369 : 00001000000000000000000101111001; -- 	j done_changing_player

0370 : 00000000000000000000000000000000; -- nop

0371 : 00000000000000000000000000000000; -- nop

0372 : 00000000000000000000000000000000; -- nop

0373 : 00000000000000000000000000000000; -- nop

0374 : 00101100000000000000000000000001; -- 	addi $s0, $zero, 1		# Change to player 1

0375 : 00000000000000000000000000000000; -- nop

0376 : 00000000000000000000000000000000; -- nop

0377 : 00000000000000000000000000000000; -- nop

0378 : 00000000000000000000000000000000; -- nop

0379 : 00000000000000000000000000000000; -- nop

0380 : 00000000000000000000000000000000; -- nop

0381 : 00011000000000000000010010011010; -- 	jal find_move			# Find a move to make

0382 : 00000000000000000000000000000000; -- nop

0383 : 00000000000000000000000000000000; -- nop

0384 : 00000000000000000000000000000000; -- nop

0385 : 00000000000000000000000000000000; -- nop

0386 : 00000000000000000000000000000000; -- nop

0387 : 00000000000000000000000000000000; -- nop

0388 : 00101001000001000000000000000000; -- 	addi $a0, $v0, 0		# Put space_from in $a0

0389 : 00000000000000000000000000000000; -- nop

0390 : 00000000000000000000000000000000; -- nop

0391 : 00101001010001100000000000000000; -- 	addi $a1, $v1, 0		# Put space_to in $a1

0392 : 00000000000000000000000000000000; -- nop

0393 : 00000000000000000000000000000000; -- nop

0394 : 00011000000000000000001111101010; -- 	jal move_to_7sd			# Convert move into seven-segment display

0395 : 00000000000000000000000000000000; -- nop

0396 : 00000000000000000000000000000000; -- nop

0397 : 00101111000001000000000000000000; -- 	addi $28, $v0, 0		# Put final value into $28 for display

0398 : 00000000000000000000000000000000; -- nop

0399 : 00000000000000000000000000000000; -- nop

0400 : 00000000000000000000000000000000; -- nop

0401 : 00000000000000000000000000000000; -- nop

0402 : 00000000000000000000000000000000; -- nop

0403 : 00000000000000000000000000000000; -- nop

0404 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0405 : 00000000000000000000000000000000; -- nop

0406 : 00000000000000000000000000000000; -- nop

0407 : 00010100000100000000000000011010; -- 	bne $s0, $t0, not_p1

0408 : 00000000000000000000000000000000; -- nop

0409 : 00000000000000000000000000000000; -- nop

0410 : 00101111000000000000000000010010; -- 	addi $28, $zero, 18		# 18 for U

0411 : 00000000000000000000000000000000; -- nop

0412 : 00000000000000000000000000000000; -- nop

0413 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0414 : 00000000000000000000000000000000; -- nop

0415 : 00000000000000000000000000000000; -- nop

0416 : 00101111001110000000000000010011; -- 	addi $28, $28, 19		# 19 for blank

0417 : 00000000000000000000000000000000; -- nop

0418 : 00000000000000000000000000000000; -- nop

0419 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0420 : 00000000000000000000000000000000; -- nop

0421 : 00000000000000000000000000000000; -- nop

0422 : 00101111001110000000000000010000; -- 	addi $28, $28, 16		# 16 for G

0423 : 00000000000000000000000000000000; -- nop

0424 : 00000000000000000000000000000000; -- nop

0425 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0426 : 00000000000000000000000000000000; -- nop

0427 : 00000000000000000000000000000000; -- nop

0428 : 00101111001110000000000000000000; -- 	addi $28, $28, 0		# 0 for O

0429 : 00000000000000000000000000000000; -- nop

0430 : 00000000000000000000000000000000; -- nop

0431 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0432 : 00000000000000000000000000000000; -- nop

0433 : 00000000000000000000000000000000; -- nop

0434 : 00000000000000000000000000000000; -- nop

0435 : 00000000000000000000000000000000; -- nop

0436 : 00000000000000000000000000000000; -- nop

0437 : 00000000000000000000000000000000; -- nop

0438 : 00000000000000000000000000000000; -- nop

0439 : 00000000000000000000000000000000; -- nop

0440 : 00000000000000000000000000000000; -- nop

0441 : 00000000000000000000000000000000; -- nop

0442 : 00000000000000000000000000000000; -- nop

0443 : 00000000000000000000000000000000; -- nop

0444 : 00000000000000000000000000000000; -- nop

0445 : 00000000000000000000000000000000; -- nop

0446 : 00000000000000000000000000000000; -- nop

0447 : 00000000000000000000000000000000; -- nop

0448 : 00000000000000000000000000000000; -- nop

0449 : 00000000000000000000000000000000; -- nop

0450 : 00000000000000000000000000000000; -- nop

0451 : 00000000000000000000000000000000; -- nop

0452 : 00000000000000000000000000000000; -- nop

0453 : 00000000000000000000000000000000; -- nop

0454 : 00000000000000000000000000000000; -- nop

0455 : 00000000000000000000000000000000; -- nop

0456 : 00000000000000000000000000000000; -- nop

0457 : 00000000000000000000000000000000; -- nop

0458 : 00000000000000000000000000000000; -- nop

0459 : 00000000000000000000000000000000; -- nop

0460 : 00000000000000000000000000000000; -- nop

0461 : 00000000000000000000000000000000; -- nop

0462 : 00000000000000000000000000000000; -- nop

0463 : 00000000000000000000000000000000; -- nop

0464 : 00000000000000000000000000000000; -- nop

0465 : 00000000000000000000000000000000; -- nop

0466 : 00000000000000000000000000000000; -- nop

0467 : 00000000000000000000000000000000; -- nop

0468 : 00000000000000000000000000000000; -- nop

0469 : 00000000000000000000000000000000; -- nop

0470 : 00000000000000000000000000000000; -- nop

0471 : 00000000000000000000000000000000; -- nop

0472 : 00000000000000000000000000000000; -- nop

0473 : 00000000000000000000000000000000; -- nop

0474 : 00000000000000000000000000000000; -- nop

0475 : 00000000000000000000000000000000; -- nop

0476 : 00000000000000000000000000000000; -- nop

0477 : 00000000000000000000000000000000; -- nop

0478 : 00000000000000000000000000000000; -- nop

0479 : 00000000000000000000000000000000; -- nop

0480 : 00000000000000000000000000000000; -- nop

0481 : 00000000000000000000000000000000; -- nop

0482 : 00000000000000000000000000000000; -- nop

0483 : 00000000000000000000000000000000; -- nop

0484 : 00000000000000000000000000000000; -- nop

0485 : 00000000000000000000000000000000; -- nop

0486 : 00000000000000000000000000000000; -- nop

0487 : 00000000000000000000000000000000; -- nop

0488 : 00000000000000000000000000000000; -- nop

0489 : 00000000000000000000000000000000; -- nop

0490 : 00000000000000000000000000000000; -- nop

0491 : 00000000000000000000000000000000; -- nop

0492 : 00000000000000000000000000000000; -- nop

0493 : 00000000000000000000000000000000; -- nop

0494 : 00001000000000000000000011011101; -- 	j game_loop

0495 : 00000000000000000000000000000000; -- nop

0496 : 00000000000000000000000000000000; -- nop

0497 : 00000000000000000000000000000000; -- nop

0498 : 00000000000000000000000000000000; -- nop

0499 : 00000000000000000000000000000000; -- nop

0500 : 00000000000000000000000000000000; -- nop

0501 : 00000000000000000000000000000000; -- nop

0502 : 00000000000000000000000000000000; -- nop

0503 : 00101010100000000000000000000001; -- 	addi $t2, $zero, 1		# $t2 = 1 for comparison

0504 : 00000000000000000000000000000000; -- nop

0505 : 00000000000000000000000000000000; -- nop

0506 : 00010010000101000000000000100101; -- 	bne $t0, $t2, not_reset	# Branch if op code != 1, i.e. not reset

0507 : 00000000000000000000000000000000; -- nop

0508 : 00000000000000000000000000000000; -- nop

0509 : 00000000000000000000000000000000; -- nop

0510 : 00000000000000000000000000000000; -- nop

0511 : 00011000000000000000000000100110; -- 	jal reset_game

0512 : 00000000000000000000000000000000; -- nop

0513 : 00000000000000000000000000000000; -- nop

0514 : 00000000000000000000000000000000; -- nop

0515 : 00000000000000000000000000000000; -- nop

0516 : 00000000000000000000000000000000; -- nop

0517 : 00000000000000000000000000000000; -- nop

0518 : 00101111000000000000000000001100; -- 	addi $28, $zero, 12		# 12 for C

0519 : 00000000000000000000000000000000; -- nop

0520 : 00000000000000000000000000000000; -- nop

0521 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0522 : 00000000000000000000000000000000; -- nop

0523 : 00000000000000000000000000000000; -- nop

0524 : 00101111001110000000000000010001; -- 	addi $28, $28, 17		# 17 for H

0525 : 00000000000000000000000000000000; -- nop

0526 : 00000000000000000000000000000000; -- nop

0527 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0528 : 00000000000000000000000000000000; -- nop

0529 : 00000000000000000000000000000000; -- nop

0530 : 00101111001110000000000000001110; -- 	addi $28, $28, 14		# 14 for E

0531 : 00000000000000000000000000000000; -- nop

0532 : 00000000000000000000000000000000; -- nop

0533 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0534 : 00000000000000000000000000000000; -- nop

0535 : 00000000000000000000000000000000; -- nop

0536 : 00101111001110000000000000001100; -- 	addi $28, $28, 12		# 12 for C

0537 : 00000000000000000000000000000000; -- nop

0538 : 00000000000000000000000000000000; -- nop

0539 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0540 : 00000000000000000000000000000000; -- nop

0541 : 00000000000000000000000000000000; -- nop

0542 : 00000000000000000000000000000000; -- nop

0543 : 00000000000000000000000000000000; -- nop

0544 : 00000000000000000000000000000000; -- nop

0545 : 00000000000000000000000000000000; -- nop

0546 : 00000000000000000000000000000000; -- nop

0547 : 00000000000000000000000000000000; -- nop

0548 : 00000000000000000000000000000000; -- nop

0549 : 00000000000000000000000000000000; -- nop

0550 : 00000000000000000000000000000000; -- nop

0551 : 00000000000000000000000000000000; -- nop

0552 : 00000000000000000000000000000000; -- nop

0553 : 00000000000000000000000000000000; -- nop

0554 : 00000000000000000000000000000000; -- nop

0555 : 00000000000000000000000000000000; -- nop

0556 : 00000000000000000000000000000000; -- nop

0557 : 00000000000000000000000000000000; -- nop

0558 : 00001000000000000000000011011101; -- 	j game_loop

0559 : 00000000000000000000000000000000; -- nop

0560 : 00000000000000000000000000000000; -- nop

0561 : 00000000000000000000000000000000; -- nop

0562 : 00000000000000000000000000000000; -- nop

0563 : 00000000000000000000000000000000; -- nop

0564 : 00000000000000000000000000000000; -- nop

0565 : 00000000000000000000000000000000; -- nop

0566 : 00000000000000000000000000000000; -- nop

0567 : 00000000000000000000000000000000; -- nop

0568 : 00000000000000000000000000000000; -- nop

0569 : 00101111000001000000000000000000; -- 	addi $28, $v0, 0

0570 : 00000000000000000000000000000000; -- nop

0571 : 00000000000000000000000000000000; -- nop

0572 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0573 : 00000000000000000000000000000000; -- nop

0574 : 00000000000000000000000000000000; -- nop

0575 : 00000000000000000000000000000000; -- nop

0576 : 00000000000000000000000000000000; -- nop

0577 : 00001000000000000000000011011101; -- 	j game_loop

0578 : 00000000000000000000000000000000; -- nop

0579 : 00000000000000000000000000000000; -- nop

0580 : 00000000000000000000000000000000; -- nop

0581 : 00000000000000000000000000000000; -- nop

0582 : 00000000000000000000000000000000; -- nop

0583 : 00000000000000000000000000000000; -- nop

0584 : 00000000000000000000000000000000; -- nop

0585 : 00000000000000000000000000000000; -- nop

0586 : 00000000000000000000000000000000; -- nop

0587 : 00000000000000000000000000000000; -- nop

0588 : 00000000000000000000000000000000; -- nop

0589 : 00000000000000000000000000000000; -- nop

0590 : 00000000000000000000000000000000; -- nop

0591 : 00000000000000000000000000000000; -- nop

0592 : 00000000000000000000000000000000; -- nop

0593 : 00000000000000000000000000000000; -- nop

0594 : 00000000000000000000000000000000; -- nop

0595 : 00000000000000000000000000000000; -- nop

0596 : 00000000000000000000000000000000; -- nop

0597 : 00000000000000000000000000000000; -- nop

0598 : 00000000000000000000000000000000; -- nop

0599 : 00000000000000000000000000000000; -- nop

0600 : 00000000000000000000000000000000; -- nop

0601 : 00000000000000000000000000000000; -- nop

0602 : 00000000000000000000000000000000; -- nop

0603 : 00000000000000000000000000000000; -- nop

0604 : 00000000000000000000000000000000; -- nop

0605 : 00000000000000000000000000000000; -- nop

0606 : 00000000000000000000000000000000; -- nop

0607 : 00000000000000000000000000000000; -- nop

0608 : 00000000000000000000000000000000; -- nop

0609 : 00000000000000000000000000000000; -- nop

0610 : 00000000000000000000000000000000; -- nop

0611 : 00000000000000000000000000000000; -- nop

0612 : 00000000000000000000000000000000; -- nop

0613 : 00000000000000000000000000000000; -- nop

0614 : 00000000000000000000000000000000; -- nop

0615 : 00000000000000000000000000000000; -- nop

0616 : 00000000000000000000000000000000; -- nop

0617 : 00000000000000000000000000000000; -- nop

0618 : 00000000000000000000000000000000; -- nop

0619 : 00000000000000000000000000000000; -- nop

0620 : 00000000000000000000000000000000; -- nop

0621 : 00000000000000000000000000000000; -- nop

0622 : 00000000000000000000000000000000; -- nop

0623 : 00000000000000000000000000000000; -- nop

0624 : 00000000000000000000000000000000; -- nop

0625 : 00000000000000000000000000000000; -- nop

0626 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0627 : 00000000000000000000000000000000; -- nop

0628 : 00000000000000000000000000000000; -- nop

0629 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0630 : 00000000000000000000000000000000; -- nop

0631 : 00000000000000000000000000000000; -- nop

0632 : 00000000000000000000000000000000; -- nop

0633 : 00000000000000000000000000000000; -- nop

0634 : 00000000000000000000000000000000; -- nop

0635 : 00000000000000000000000000000000; -- nop

0636 : 00000010010010000101000000000100; -- 	sub $t1, $a0, $a1		# $t1 = location of space_from in memory

0637 : 00000000000000000000000000000000; -- nop

0638 : 00000000000000000000000000000000; -- nop

0639 : 00000010100010000110000000000100; -- 	sub $t2, $a0, $a2		# $t2 = location of space_to in memory

0640 : 00000000000000000000000000000000; -- nop

0641 : 00000000000000000000000000000000; -- nop

0642 : 00000010110010000111000000000100; -- 	sub $t3, $a0, $a3		# $t3 = location of space_jumped in memory

0643 : 00000000000000000000000000000000; -- nop

0644 : 00000000000000000000000000000000; -- nop

0645 : 00000000000000000000000000000000; -- nop

0646 : 00000000000000000000000000000000; -- nop

0647 : 00000000000000000000000000000000; -- nop

0648 : 00000000000000000000000000000000; -- nop

0649 : 01000011000100100000000000000000; -- 	lw $t4, 0($t1)			# $t4 = checker at space_from

0650 : 00000000000000000000000000000000; -- nop

0651 : 00000000000000000000000000000000; -- nop

0652 : 01000011010101000000000000000000; -- 	lw $t5, 0($t2)			# $t5 = checker at space_to

0653 : 00000000000000000000000000000000; -- nop

0654 : 00000000000000000000000000000000; -- nop

0655 : 00111011000101000000000000000000; -- 	sw $t4, 0($t2)			# [$t2] = checker formerly at space_to now at space_from

0656 : 00000000000000000000000000000000; -- nop

0657 : 00000000000000000000000000000000; -- nop

0658 : 00111011010100100000000000000000; -- 	sw $t5, 0($t1)			# [$t1] = checker formerly at space_from now at space_to

0659 : 00000000000000000000000000000000; -- nop

0660 : 00000000000000000000000000000000; -- nop

0661 : 00000000000000000000000000000000; -- nop

0662 : 00000000000000000000000000000000; -- nop

0663 : 00000000000000000000000000000000; -- nop

0664 : 00000000000000000000000000000000; -- nop

0665 : 00010001110000000000000000000111; -- 	bne $a3, $zero, jumped	# Branch if jumped

0666 : 00000000000000000000000000000000; -- nop

0667 : 00000000000000000000000000000000; -- nop

0668 : 00001000000000000000001010101000; -- 	j after_jump			# Skip jumping code if no jump

0669 : 00000000000000000000000000000000; -- nop

0670 : 00000000000000000000000000000000; -- nop

0671 : 00000000000000000000000000000000; -- nop

0672 : 00000000000000000000000000000000; -- nop

0673 : 00000000000000000000000000000000; -- nop

0674 : 00000000000000000000000000000000; -- nop

0675 : 00111000000101100000000000000000; -- 	sw $zero, 0($t3)		# [$t3] = 0 (blank space) in memory

0676 : 00000000000000000000000000000000; -- nop

0677 : 00000000000000000000000000000000; -- nop

0678 : 00000000000000000000000000000000; -- nop

0679 : 00000000000000000000000000000000; -- nop

0680 : 00000000000000000000000000000000; -- nop

0681 : 00000000000000000000000000000000; -- nop

0682 : 00000000000000000000000000000000; -- nop

0683 : 00000000000000000000000000000000; -- nop

0684 : 00000000000000000000000000000000; -- nop

0685 : 00000000000000000000000000000000; -- nop

0686 : 00101001010011000000000000000000; -- 	addi $a1, $a2, 0		# $a1 = $a2, arg1 has space_to

0687 : 00000000000000000000000000000000; -- nop

0688 : 00000000000000000000000000000000; -- nop

0689 : 00011000000000000000001011000101; -- 	jal king_me				# Check for kings

0690 : 00000000000000000000000000000000; -- nop

0691 : 00000000000000000000000000000000; -- nop

0692 : 00000000000000000000000000000000; -- nop

0693 : 00000000000000000000000000000000; -- nop

0694 : 00000000000000000000000000000000; -- nop

0695 : 00000000000000000000000000000000; -- nop

0696 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0697 : 00000000000000000000000000000000; -- nop

0698 : 00000000000000000000000000000000; -- nop

0699 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0700 : 00000000000000000000000000000000; -- nop

0701 : 00000000000000000000000000000000; -- nop

0702 : 00000000000000000000000000000000; -- nop

0703 : 00000000000000000000000000000000; -- nop

0704 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0705 : 00000000000000000000000000000000; -- nop

0706 : 00000000000000000000000000000000; -- nop

0707 : 00000000000000000000000000000000; -- nop

0708 : 00000000000000000000000000000000; -- nop

0709 : 00000000000000000000000000000000; -- nop

0710 : 00000000000000000000000000000000; -- nop

0711 : 00000000000000000000000000000000; -- nop

0712 : 00000000000000000000000000000000; -- nop

0713 : 00000000000000000000000000000000; -- nop

0714 : 00000000000000000000000000000000; -- nop

0715 : 00000000000000000000000000000000; -- nop

0716 : 00000000000000000000000000000000; -- nop

0717 : 00000000000000000000000000000000; -- nop

0718 : 00000000000000000000000000000000; -- nop

0719 : 00000000000000000000000000000000; -- nop

0720 : 00000000000000000000000000000000; -- nop

0721 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0722 : 00000000000000000000000000000000; -- nop

0723 : 00000000000000000000000000000000; -- nop

0724 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0725 : 00000000000000000000000000000000; -- nop

0726 : 00000000000000000000000000000000; -- nop

0727 : 00000000000000000000000000000000; -- nop

0728 : 00000000000000000000000000000000; -- nop

0729 : 00000010000010000101000000000100; -- 	sub $t0, $a0, $a1		# $t0 = location of space in memory

0730 : 00000000000000000000000000000000; -- nop

0731 : 00000000000000000000000000000000; -- nop

0732 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker at space in memory

0733 : 00000000000000000000000000000000; -- nop

0734 : 00000000000000000000000000000000; -- nop

0735 : 00000000000000000000000000000000; -- nop

0736 : 00000000000000000000000000000000; -- nop

0737 : 00000000000000000000000000000000; -- nop

0738 : 00000000000000000000000000000000; -- nop

0739 : 00101010100000000000000000000001; -- 	addi $t2, $zero, 1		# $t2 = 1 for comparison

0740 : 00000000000000000000000000000000; -- nop

0741 : 00000000000000000000000000000000; -- nop

0742 : 00010010010101000000000000011111; -- 	bne $t1, $t2, k_not_1	# Branch if checker != 1

0743 : 00000000000000000000000000000000; -- nop

0744 : 00000000000000000000000000000000; -- nop

0745 : 00000000000000000000000000000000; -- nop

0746 : 00000000000000000000000000000000; -- nop

0747 : 00000000000000000000000000000000; -- nop

0748 : 00000000000000000000000000000000; -- nop

0749 : 00101010100000000000000000011100; -- 	addi $t2, $zero, 28		# $t2 = 28 for comparison

0750 : 00000000000000000000000000000000; -- nop

0751 : 00000000000000000000000000000000; -- nop

0752 : 00110001010101000000000000111000; -- 	blt $a1, $t2, ret_king	# Branch if checker not in kingable position

0753 : 00000000000000000000000000000000; -- nop

0754 : 00000000000000000000000000000000; -- nop

0755 : 00000000000000000000000000000000; -- nop

0756 : 00000000000000000000000000000000; -- nop

0757 : 00000000000000000000000000000000; -- nop

0758 : 00000000000000000000000000000000; -- nop

0759 : 00000000000000000000000000000000; -- nop

0760 : 00000000000000000000000000000000; -- nop

0761 : 00101010110000000000000000000011; -- 	addi $t3, $zero, 3		# $t3 = 3 (king value for player 1)

0762 : 00000000000000000000000000000000; -- nop

0763 : 00000000000000000000000000000000; -- nop

0764 : 00111010110100000000000000000000; -- 	sw $t3, 0($t0)			# Store new king in memory

0765 : 00000000000000000000000000000000; -- nop

0766 : 00000000000000000000000000000000; -- nop

0767 : 00001000000000000000001100101001; -- 	j ret_king				# Return because done

0768 : 00000000000000000000000000000000; -- nop

0769 : 00000000000000000000000000000000; -- nop

0770 : 00000000000000000000000000000000; -- nop

0771 : 00000000000000000000000000000000; -- nop

0772 : 00000000000000000000000000000000; -- nop

0773 : 00000000000000000000000000000000; -- nop

0774 : 00000000000000000000000000000000; -- nop

0775 : 00000000000000000000000000000000; -- nop

0776 : 00101010100000000000000000000010; -- 	addi $t2, $zero, 2		# $t2 = 2 for comparison

0777 : 00000000000000000000000000000000; -- nop

0778 : 00000000000000000000000000000000; -- nop

0779 : 00010010010101000000000000011101; -- 	bne $t1, $t2, ret_king	# Branch if checker != 2

0780 : 00000000000000000000000000000000; -- nop

0781 : 00000000000000000000000000000000; -- nop

0782 : 00000000000000000000000000000000; -- nop

0783 : 00000000000000000000000000000000; -- nop

0784 : 00000000000000000000000000000000; -- nop

0785 : 00000000000000000000000000000000; -- nop

0786 : 00101010100000000000000000000011; -- 	addi $t2, $zero, 3		# $t2 = 3 for comparison

0787 : 00000000000000000000000000000000; -- nop

0788 : 00000000000000000000000000000000; -- nop

0789 : 00110010100010100000000000010011; -- 	blt $t2, $a1, ret_king	# Branch if checker not in kingable position

0790 : 00000000000000000000000000000000; -- nop

0791 : 00000000000000000000000000000000; -- nop

0792 : 00000000000000000000000000000000; -- nop

0793 : 00000000000000000000000000000000; -- nop

0794 : 00000000000000000000000000000000; -- nop

0795 : 00000000000000000000000000000000; -- nop

0796 : 00000000000000000000000000000000; -- nop

0797 : 00000000000000000000000000000000; -- nop

0798 : 00101010110000000000000000000100; -- 	addi $t3, $zero, 4		# $t3 = 4 (king value for player 2)

0799 : 00000000000000000000000000000000; -- nop

0800 : 00000000000000000000000000000000; -- nop

0801 : 00111010110100000000000000000000; -- 	sw $t3, 0($t0)			# Store new king in memory

0802 : 00000000000000000000000000000000; -- nop

0803 : 00000000000000000000000000000000; -- nop

0804 : 00001000000000000000001100101001; -- 	j ret_king				# Return because done

0805 : 00000000000000000000000000000000; -- nop

0806 : 00000000000000000000000000000000; -- nop

0807 : 00000000000000000000000000000000; -- nop

0808 : 00000000000000000000000000000000; -- nop

0809 : 00000000000000000000000000000000; -- nop

0810 : 00000000000000000000000000000000; -- nop

0811 : 00000000000000000000000000000000; -- nop

0812 : 00000000000000000000000000000000; -- nop

0813 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0814 : 00000000000000000000000000000000; -- nop

0815 : 00000000000000000000000000000000; -- nop

0816 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0817 : 00000000000000000000000000000000; -- nop

0818 : 00000000000000000000000000000000; -- nop

0819 : 00000000000000000000000000000000; -- nop

0820 : 00000000000000000000000000000000; -- nop

0821 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0822 : 00000000000000000000000000000000; -- nop

0823 : 00000000000000000000000000000000; -- nop

0824 : 00000000000000000000000000000000; -- nop

0825 : 00000000000000000000000000000000; -- nop

0826 : 00000000000000000000000000000000; -- nop

0827 : 00000000000000000000000000000000; -- nop

0828 : 00000000000000000000000000000000; -- nop

0829 : 00000000000000000000000000000000; -- nop

0830 : 00000000000000000000000000000000; -- nop

0831 : 00000000000000000000000000000000; -- nop

0832 : 00000000000000000000000000000000; -- nop

0833 : 00000000000000000000000000000000; -- nop

0834 : 00000000000000000000000000000000; -- nop

0835 : 00000000000000000000000000000000; -- nop

0836 : 00000000000000000000000000000000; -- nop

0837 : 00000000000000000000000000000000; -- nop

0838 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0839 : 00000000000000000000000000000000; -- nop

0840 : 00000000000000000000000000000000; -- nop

0841 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0842 : 00000000000000000000000000000000; -- nop

0843 : 00000000000000000000000000000000; -- nop

0844 : 00000000000000000000000000000000; -- nop

0845 : 00000000000000000000000000000000; -- nop

0846 : 00000000000000000000000000000000; -- nop

0847 : 00000000000000000000000000000000; -- nop

0848 : 00101010000010000000000000000000; -- 	addi $t0, $a0, 0		# Board position in stack

0849 : 00000000000000000000000000000000; -- nop

0850 : 00000000000000000000000000000000; -- nop

0851 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0852 : 00000000000000000000000000000000; -- nop

0853 : 00000000000000000000000000000000; -- nop

0854 : 00101010110000000000000000100000; -- 	addi $t3, $zero, 32		# Board length = 32

0855 : 00000000000000000000000000000000; -- nop

0856 : 00000000000000000000000000000000; -- nop

0857 : 00101011000000000000000000000000; -- 	addi $t4, $zero, 0		# Player 1 checker counter = 0

0858 : 00000000000000000000000000000000; -- nop

0859 : 00000000000000000000000000000000; -- nop

0860 : 00101011010000000000000000000000; -- 	addi $t5, $zero, 0		# Player 2 checker counter = 0

0861 : 00000000000000000000000000000000; -- nop

0862 : 00000000000000000000000000000000; -- nop

0863 : 00000000000000000000000000000000; -- nop

0864 : 00000000000000000000000000000000; -- nop

0865 : 00000000000000000000000000000000; -- nop

0866 : 00000000000000000000000000000000; -- nop

0867 : 00000000000000000000000000000000; -- nop

0868 : 00000000000000000000000000000000; -- nop

0869 : 00000000000000000000000000000000; -- nop

0870 : 00000000000000000000000000000000; -- nop

0871 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = [$t0+0] (load checker from dmem board)

0872 : 00000000000000000000000000000000; -- nop

0873 : 00000000000000000000000000000000; -- nop

0874 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0875 : 00000000000000000000000000000000; -- nop

0876 : 00000000000000000000000000000000; -- nop

0877 : 00101010100101000000000000000001; -- 	addi $t2, $t2, 1		# Increment counter

0878 : 00000000000000000000000000000000; -- nop

0879 : 00000000000000000000000000000000; -- nop

0880 : 00000000000000000000000000000000; -- nop

0881 : 00000000000000000000000000000000; -- nop

0882 : 00010010010000000000000000000111; -- 	bne $t1, $zero, not_0	# Branch if checker is not 0, continue if it is

0883 : 00000000000000000000000000000000; -- nop

0884 : 00000000000000000000000000000000; -- nop

0885 : 00001000000000000000001110110001; -- 	j continue

0886 : 00000000000000000000000000000000; -- nop

0887 : 00000000000000000000000000000000; -- nop

0888 : 00000000000000000000000000000000; -- nop

0889 : 00000000000000000000000000000000; -- nop

0890 : 00000000000000000000000000000000; -- nop

0891 : 00000000000000000000000000000000; -- nop

0892 : 00101011100000000000000000000001; -- 	addi $t6, $zero, 1		# Temporary variable for comparison

0893 : 00000000000000000000000000000000; -- nop

0894 : 00000000000000000000000000000000; -- nop

0895 : 00010010010111000000000000001010; -- 	bne $t1, $t6, not_1		# Branch if checker is not 1, continue if it is

0896 : 00000000000000000000000000000000; -- nop

0897 : 00000000000000000000000000000000; -- nop

0898 : 00101011000110000000000000000001; -- 	addi $t4, $t4, 1		# Increment player 1 counter

0899 : 00000000000000000000000000000000; -- nop

0900 : 00000000000000000000000000000000; -- nop

0901 : 00001000000000000000001110110001; -- 	j continue

0902 : 00000000000000000000000000000000; -- nop

0903 : 00000000000000000000000000000000; -- nop

0904 : 00000000000000000000000000000000; -- nop

0905 : 00000000000000000000000000000000; -- nop

0906 : 00000000000000000000000000000000; -- nop

0907 : 00000000000000000000000000000000; -- nop

0908 : 00101011100000000000000000000010; -- 	addi $t6, $zero, 2		# Temporary variable for comparison

0909 : 00000000000000000000000000000000; -- nop

0910 : 00000000000000000000000000000000; -- nop

0911 : 00010010010111000000000000001010; -- 	bne $t1, $t6, not_2		# Branch if checker is not 2, continue if it is

0912 : 00000000000000000000000000000000; -- nop

0913 : 00000000000000000000000000000000; -- nop

0914 : 00101011010110100000000000000001; -- 	addi $t5, $t5, 1		# Increment player 2 counter

0915 : 00000000000000000000000000000000; -- nop

0916 : 00000000000000000000000000000000; -- nop

0917 : 00001000000000000000001110110001; -- 	j continue

0918 : 00000000000000000000000000000000; -- nop

0919 : 00000000000000000000000000000000; -- nop

0920 : 00000000000000000000000000000000; -- nop

0921 : 00000000000000000000000000000000; -- nop

0922 : 00000000000000000000000000000000; -- nop

0923 : 00000000000000000000000000000000; -- nop

0924 : 00101011100000000000000000000011; -- 	addi $t6, $zero, 3		# Temporary variable for comparison

0925 : 00000000000000000000000000000000; -- nop

0926 : 00000000000000000000000000000000; -- nop

0927 : 00010010010111000000000000001010; -- 	bne $t1, $t6, not_3		# Branch if checker is not 3, continue if it is

0928 : 00000000000000000000000000000000; -- nop

0929 : 00000000000000000000000000000000; -- nop

0930 : 00101011000110000000000000000001; -- 	addi $t4, $t4, 1		# Increment player 1 counter

0931 : 00000000000000000000000000000000; -- nop

0932 : 00000000000000000000000000000000; -- nop

0933 : 00001000000000000000001110110001; -- 	j continue

0934 : 00000000000000000000000000000000; -- nop

0935 : 00000000000000000000000000000000; -- nop

0936 : 00000000000000000000000000000000; -- nop

0937 : 00000000000000000000000000000000; -- nop

0938 : 00000000000000000000000000000000; -- nop

0939 : 00000000000000000000000000000000; -- nop

0940 : 00101011010110100000000000000001; -- 	addi $t5, $t5, 1		# Increment player 2 counter

0941 : 00000000000000000000000000000000; -- nop

0942 : 00000000000000000000000000000000; -- nop

0943 : 00000000000000000000000000000000; -- nop

0944 : 00000000000000000000000000000000; -- nop

0945 : 00000000000000000000000000000000; -- nop

0946 : 00000000000000000000000000000000; -- nop

0947 : 00110010100101111111111110101111; -- 	blt $t2, $t3, b_loop	# Keep looping while counter < num checkers

0948 : 00000000000000000000000000000000; -- nop

0949 : 00000000000000000000000000000000; -- nop

0950 : 00000000000000000000000000000000; -- nop

0951 : 00000000000000000000000000000000; -- nop

0952 : 00000000000000000000000000000000; -- nop

0953 : 00000000000000000000000000000000; -- nop

0954 : 00010011000000000000000000001010; -- 	bne $t4, $zero, p1_in	# Branch if player 1 has checkers

0955 : 00000000000000000000000000000000; -- nop

0956 : 00000000000000000000000000000000; -- nop

0957 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2		# Player 1 is out of checkers, player 2 wins!

0958 : 00000000000000000000000000000000; -- nop

0959 : 00000000000000000000000000000000; -- nop

0960 : 00001000000000000000001111011001; -- 	j return_check_win

0961 : 00000000000000000000000000000000; -- nop

0962 : 00000000000000000000000000000000; -- nop

0963 : 00000000000000000000000000000000; -- nop

0964 : 00000000000000000000000000000000; -- nop

0965 : 00000000000000000000000000000000; -- nop

0966 : 00000000000000000000000000000000; -- nop

0967 : 00010011010000000000000000001010; -- 	bne $t5, $zero, p2_in	# Branch if player 2 has checkers

0968 : 00000000000000000000000000000000; -- nop

0969 : 00000000000000000000000000000000; -- nop

0970 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1		# Player 2 is out of checkers, player 1 wins!

0971 : 00000000000000000000000000000000; -- nop

0972 : 00000000000000000000000000000000; -- nop

0973 : 00001000000000000000001111011001; -- 	j return_check_win

0974 : 00000000000000000000000000000000; -- nop

0975 : 00000000000000000000000000000000; -- nop

0976 : 00000000000000000000000000000000; -- nop

0977 : 00000000000000000000000000000000; -- nop

0978 : 00000000000000000000000000000000; -- nop

0979 : 00000000000000000000000000000000; -- nop

0980 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0		# Neither player has won yet

0981 : 00000000000000000000000000000000; -- nop

0982 : 00000000000000000000000000000000; -- nop

0983 : 00000000000000000000000000000000; -- nop

0984 : 00000000000000000000000000000000; -- nop

0985 : 00000000000000000000000000000000; -- nop

0986 : 00000000000000000000000000000000; -- nop

0987 : 00000000000000000000000000000000; -- nop

0988 : 00000000000000000000000000000000; -- nop

0989 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0990 : 00000000000000000000000000000000; -- nop

0991 : 00000000000000000000000000000000; -- nop

0992 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0993 : 00000000000000000000000000000000; -- nop

0994 : 00000000000000000000000000000000; -- nop

0995 : 00000000000000000000000000000000; -- nop

0996 : 00000000000000000000000000000000; -- nop

0997 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0998 : 00000000000000000000000000000000; -- nop

0999 : 00000000000000000000000000000000; -- nop

1000 : 00000000000000000000000000000000; -- nop

1001 : 00000000000000000000000000000000; -- nop

1002 : 00000000000000000000000000000000; -- nop

1003 : 00000000000000000000000000000000; -- nop

1004 : 00000000000000000000000000000000; -- nop

1005 : 00000000000000000000000000000000; -- nop

1006 : 00000000000000000000000000000000; -- nop

1007 : 00000000000000000000000000000000; -- nop

1008 : 00000000000000000000000000000000; -- nop

1009 : 00000000000000000000000000000000; -- nop

1010 : 00000000000000000000000000000000; -- nop

1011 : 00000000000000000000000000000000; -- nop

1012 : 00000000000000000000000000000000; -- nop

1013 : 00000000000000000000000000000000; -- nop

1014 : 00000000000000000000000000000000; -- nop

1015 : 00000000000000000000000000000000; -- nop

1016 : 00000000000000000000000000000000; -- nop

1017 : 00000000000000000000000000000000; -- nop

1018 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

1019 : 00000000000000000000000000000000; -- nop

1020 : 00000000000000000000000000000000; -- nop

1021 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

1022 : 00000000000000000000000000000000; -- nop

1023 : 00000000000000000000000000000000; -- nop

1024 : 00000000000000000000000000000000; -- nop

1025 : 00000000000000000000000000000000; -- nop

1026 : 00000000000000000000000000000000; -- nop

1027 : 00000000000000000000000000000000; -- nop

1028 : 00011000000000000000010000111100; -- 	jal space_to_7sd		# space_from already in $a0

1029 : 00000000000000000000000000000000; -- nop

1030 : 00000000000000000000000000000000; -- nop

1031 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

1032 : 00000000000000000000000000000000; -- nop

1033 : 00000000000000000000000000000000; -- nop

1034 : 00111000101110100000000000000000; -- 	sw $v0, 0($sp)			# [$sp+0] = $v0 (save space_from)

1035 : 00000000000000000000000000000000; -- nop

1036 : 00000000000000000000000000000000; -- nop

1037 : 00000000000000000000000000000000; -- nop

1038 : 00000000000000000000000000000000; -- nop

1039 : 00000000000000000000000000000000; -- nop

1040 : 00000000000000000000000000000000; -- nop

1041 : 00101001000010100000000000000000; -- 	addi $a0, $a1, 0		# $a0 = $a1

1042 : 00000000000000000000000000000000; -- nop

1043 : 00000000000000000000000000000000; -- nop

1044 : 00011000000000000000010000111100; -- 	jal space_to_7sd

1045 : 00000000000000000000000000000000; -- nop

1046 : 00000000000000000000000000000000; -- nop

1047 : 00101010000001000000000000000000; -- 	addi $t0, $v0, 0		# $t0 = $v0

1048 : 00000000000000000000000000000000; -- nop

1049 : 00000000000000000000000000000000; -- nop

1050 : 01000000101110100000000000000000; -- 	lw $v0, 0($sp)			# $v0 = [$sp+0] (space_from from memory)

1051 : 00000000000000000000000000000000; -- nop

1052 : 00000000000000000000000000000000; -- nop

1053 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

1054 : 00000000000000000000000000000000; -- nop

1055 : 00000000000000000000000000000000; -- nop

1056 : 00000000100001000000010100010000; -- 	sll $v0, $v0, 10		# Shift $v0 left 10 bits to prepare for space_to

1057 : 00000000000000000000000000000000; -- nop

1058 : 00000000000000000000000000000000; -- nop

1059 : 00000000100001001000000000000000; -- 	add $v0, $v0, $t0		# $v0 += $t0 (now $v0 has all moves)

1060 : 00000000000000000000000000000000; -- nop

1061 : 00000000000000000000000000000000; -- nop

1062 : 00000000000000000000000000000000; -- nop

1063 : 00000000000000000000000000000000; -- nop

1064 : 00000000100001000000001010010000; -- 	sll $v0, $v0, 5			# Shift $v0 left 5 bits to account for opcode+flag

1065 : 00000000000000000000000000000000; -- nop

1066 : 00000000000000000000000000000000; -- nop

1067 : 00000000000000000000000000000000; -- nop

1068 : 00000000000000000000000000000000; -- nop

1069 : 00000000000000000000000000000000; -- nop

1070 : 00000000000000000000000000000000; -- nop

1071 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

1072 : 00000000000000000000000000000000; -- nop

1073 : 00000000000000000000000000000000; -- nop

1074 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

1075 : 00000000000000000000000000000000; -- nop

1076 : 00000000000000000000000000000000; -- nop

1077 : 00000000000000000000000000000000; -- nop

1078 : 00000000000000000000000000000000; -- nop

1079 : 00100111110000000000000000000000; -- 	jr $ra

1080 : 00000000000000000000000000000000; -- nop

1081 : 00000000000000000000000000000000; -- nop

1082 : 00000000000000000000000000000000; -- nop

1083 : 00000000000000000000000000000000; -- nop

1084 : 00000000000000000000000000000000; -- nop

1085 : 00000000000000000000000000000000; -- nop

1086 : 00000000000000000000000000000000; -- nop

1087 : 00000000000000000000000000000000; -- nop

1088 : 00000000000000000000000000000000; -- nop

1089 : 00000000000000000000000000000000; -- nop

1090 : 00000000000000000000000000000000; -- nop

1091 : 00000000000000000000000000000000; -- nop

1092 : 00000000000000000000000000000000; -- nop

1093 : 00000000000000000000000000000000; -- nop

1094 : 00000000000000000000000000000000; -- nop

1095 : 00000000000000000000000000000000; -- nop

1096 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

1097 : 00000000000000000000000000000000; -- nop

1098 : 00000000000000000000000000000000; -- nop

1099 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

1100 : 00000000000000000000000000000000; -- nop

1101 : 00000000000000000000000000000000; -- nop

1102 : 00000000000000000000000000000000; -- nop

1103 : 00000000000000000000000000000000; -- nop

1104 : 00000000000000000000000000000000; -- nop

1105 : 00000000000000000000000000000000; -- nop

1106 : 00000000000000000000000000000000; -- nop

1107 : 00000000000000000000000000000000; -- nop

1108 : 00000000000000000000000000000000; -- nop

1109 : 00000000000000000000000000000000; -- nop

1110 : 00000000000000000000000000000000; -- nop

1111 : 00000000000000000000000000000000; -- nop

1112 : 00000000000000000000000000000000; -- nop

1113 : 00000000000000000000000000000000; -- nop

1114 : 00000000000000000000000000000000; -- nop

1115 : 00000000000000000000000000000000; -- nop

1116 : 00000010000010000000000100010100; -- 	sra $t0, $a0, 2			# $t0 = floor($a0 / 4)

1117 : 00000000000000000000000000000000; -- nop

1118 : 00000000000000000000000000000000; -- nop

1119 : 00101010000100000000000000000001; -- 	addi $t0, $t0, 1		# $t0 += 1 (now $t0 == row of space_from)

1120 : 00000000000000000000000000000000; -- nop

1121 : 00000000000000000000000000000000; -- nop

1122 : 00000000000000000000000000000000; -- nop

1123 : 00000000000000000000000000000000; -- nop

1124 : 00000000000000000000000000000000; -- nop

1125 : 00000000000000000000000000000000; -- nop

1126 : 00101011000000000000000000000011; -- 	addi $t4, $zero, 3		# $t4 = 3 for anding

1127 : 00000000000000000000000000000000; -- nop

1128 : 00000000000000000000000000000000; -- nop

1129 : 00000010010010001100000000001000; -- 	and $t1, $a0, $t4		# $t1 = $a0 & $t4 = $a0 % 4

1130 : 00000000000000000000000000000000; -- nop

1131 : 00000000000000000000000000000000; -- nop

1132 : 00000010010100101001000000000000; -- 	add $t1, $t1, $t1		# $t1 = $t1 + $t1 = $t1 * 2

1133 : 00000000000000000000000000000000; -- nop

1134 : 00000000000000000000000000000000; -- nop

1135 : 00101010010100100000000000000010; -- 	addi $t1, $t1, 2		# $t1 += 2

1136 : 00000000000000000000000000000000; -- nop

1137 : 00000000000000000000000000000000; -- nop

1138 : 00101011000000000000000000000001; -- 	addi $t4, $zero, 1		# $t4 = 1 for anding

1139 : 00000000000000000000000000000000; -- nop

1140 : 00000000000000000000000000000000; -- nop

1141 : 00000011000100001100000000001000; -- 	and $t4, $t0, $t4		# $t4 = $t0 & $t4 = $t0 % 2

1142 : 00000000000000000000000000000000; -- nop

1143 : 00000000000000000000000000000000; -- nop

1144 : 00000010010100101100000000000100; -- 	sub $t1, $t1, $t4		# $t1 -= $t4 (now $t1 == column of space_from)

1145 : 00000000000000000000000000000000; -- nop

1146 : 00000000000000000000000000000000; -- nop

1147 : 00101010010100100000000000001001; -- 	addi $t1, $t1, 9		# $t1 += 9 (adding to column to get letters on 7sd)

1148 : 00000000000000000000000000000000; -- nop

1149 : 00000000000000000000000000000000; -- nop

1150 : 00000000000000000000000000000000; -- nop

1151 : 00000000000000000000000000000000; -- nop

1152 : 00000000000000000000000000000000; -- nop

1153 : 00000000000000000000000000000000; -- nop

1154 : 00101000100100100000000000000000; -- 	addi $v0, $t1, 0		# $v0 = $t1 (column)

1155 : 00000000000000000000000000000000; -- nop

1156 : 00000000000000000000000000000000; -- nop

1157 : 00000000100001000000001010010000; -- 	sll $v0, $v0, 5			# Shift $v0 left 5 bits to prepare for row

1158 : 00000000000000000000000000000000; -- nop

1159 : 00000000000000000000000000000000; -- nop

1160 : 00000000100001001000000000000000; -- 	add $v0, $v0, $t0		# $v0 += $t0 (row)

1161 : 00000000000000000000000000000000; -- nop

1162 : 00000000000000000000000000000000; -- nop

1163 : 00000000000000000000000000000000; -- nop

1164 : 00000000000000000000000000000000; -- nop

1165 : 00000000000000000000000000000000; -- nop

1166 : 00000000000000000000000000000000; -- nop

1167 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

1168 : 00000000000000000000000000000000; -- nop

1169 : 00000000000000000000000000000000; -- nop

1170 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

1171 : 00000000000000000000000000000000; -- nop

1172 : 00000000000000000000000000000000; -- nop

1173 : 00000000000000000000000000000000; -- nop

1174 : 00000000000000000000000000000000; -- nop

1175 : 00100111110000000000000000000000; -- 	jr $ra

1176 : 00000000000000000000000000000000; -- nop

1177 : 00000000000000000000000000000000; -- nop

1178 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

1179 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

1180 : 00101110010000000000000000000000; -- 	addi $t9, $zero, 0		# $t9 = 0 initializes best move score to 0

1181 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for checking player

1182 : 00000000000000000000000000000000; -- nop

1183 : 00010100000100000000000000000011; -- 	bne $s0, $t0, find2		# If $s0 != 1, branch because current player is 2

1184 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

1185 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

1186 : 00001000000000000000111101010100; -- 	j return_find_move

1187 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

1188 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1189 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1190 : 00000000000000000000000000000000; -- nop

1191 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s0n2

1192 : 00001000000000000000010010101100; -- 	j p2s0_2or4

1193 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1194 : 00000000000000000000000000000000; -- nop

1195 : 00010010010100000000000000011111; -- 	bne $t1, $t0, p2s1

1196 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1197 : 00000000000000000000000000000000; -- nop

1198 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s0ur_end

1199 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1200 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1201 : 00000000000000000000000000000000; -- nop

1202 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s0urj

1203 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1204 : 00000000000000000000000000000000; -- nop

1205 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s0ur_end

1206 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

1207 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

1208 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1209 : 00001000000000000000010011001011; -- 	j p2s0ur_end  # Skip check jump piece since space is empty for move

1210 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1211 : 00000000000000000000000000000000; -- nop

1212 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s0ur_n1

1213 : 00001000000000000000010011000001; -- 	j p2s0s4_1or3

1214 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1215 : 00000000000000000000000000000000; -- nop

1216 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s0ur_end

1217 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1218 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1219 : 00000000000000000000000000000000; -- nop

1220 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s0ur_end

1221 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1222 : 00000000000000000000000000000000; -- nop

1223 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s0ur_end

1224 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

1225 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1226 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1227 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

1228 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1229 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1230 : 00000000000000000000000000000000; -- nop

1231 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s1n2

1232 : 00001000000000000000010011010100; -- 	j p2s1_2or4

1233 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1234 : 00000000000000000000000000000000; -- nop

1235 : 00010010010100000000000000111110; -- 	bne $t1, $t0, p2s2

1236 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1237 : 00000000000000000000000000000000; -- nop

1238 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s1ul_end

1239 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1240 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1241 : 00000000000000000000000000000000; -- nop

1242 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s1ulj

1243 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1244 : 00000000000000000000000000000000; -- nop

1245 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s1ul_end

1246 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

1247 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

1248 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1249 : 00001000000000000000010011110011; -- 	j p2s1ul_end  # Skip check jump piece since space is empty for move

1250 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1251 : 00000000000000000000000000000000; -- nop

1252 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s1ul_n1

1253 : 00001000000000000000010011101001; -- 	j p2s1s4_1or3

1254 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1255 : 00000000000000000000000000000000; -- nop

1256 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s1ul_end

1257 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

1258 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1259 : 00000000000000000000000000000000; -- nop

1260 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s1ul_end

1261 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1262 : 00000000000000000000000000000000; -- nop

1263 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s1ul_end

1264 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

1265 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

1266 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1267 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1268 : 00000000000000000000000000000000; -- nop

1269 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s1ur_end

1270 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1271 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1272 : 00000000000000000000000000000000; -- nop

1273 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s1urj

1274 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1275 : 00000000000000000000000000000000; -- nop

1276 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s1ur_end

1277 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

1278 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1279 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1280 : 00001000000000000000010100010010; -- 	j p2s1ur_end  # Skip check jump piece since space is empty for move

1281 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1282 : 00000000000000000000000000000000; -- nop

1283 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s1ur_n1

1284 : 00001000000000000000010100001000; -- 	j p2s1s5_1or3

1285 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1286 : 00000000000000000000000000000000; -- nop

1287 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s1ur_end

1288 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1289 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1290 : 00000000000000000000000000000000; -- nop

1291 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s1ur_end

1292 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1293 : 00000000000000000000000000000000; -- nop

1294 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s1ur_end

1295 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

1296 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1297 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1298 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

1299 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1300 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1301 : 00000000000000000000000000000000; -- nop

1302 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s2n2

1303 : 00001000000000000000010100011011; -- 	j p2s2_2or4

1304 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1305 : 00000000000000000000000000000000; -- nop

1306 : 00010010010100000000000000111110; -- 	bne $t1, $t0, p2s3

1307 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1308 : 00000000000000000000000000000000; -- nop

1309 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s2ul_end

1310 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1311 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1312 : 00000000000000000000000000000000; -- nop

1313 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s2ulj

1314 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1315 : 00000000000000000000000000000000; -- nop

1316 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s2ul_end

1317 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

1318 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1319 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1320 : 00001000000000000000010100111010; -- 	j p2s2ul_end  # Skip check jump piece since space is empty for move

1321 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1322 : 00000000000000000000000000000000; -- nop

1323 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s2ul_n1

1324 : 00001000000000000000010100110000; -- 	j p2s2s5_1or3

1325 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1326 : 00000000000000000000000000000000; -- nop

1327 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s2ul_end

1328 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1329 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1330 : 00000000000000000000000000000000; -- nop

1331 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s2ul_end

1332 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1333 : 00000000000000000000000000000000; -- nop

1334 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s2ul_end

1335 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

1336 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1337 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1338 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1339 : 00000000000000000000000000000000; -- nop

1340 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s2ur_end

1341 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1342 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1343 : 00000000000000000000000000000000; -- nop

1344 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s2urj

1345 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1346 : 00000000000000000000000000000000; -- nop

1347 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s2ur_end

1348 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

1349 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

1350 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1351 : 00001000000000000000010101011001; -- 	j p2s2ur_end  # Skip check jump piece since space is empty for move

1352 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1353 : 00000000000000000000000000000000; -- nop

1354 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s2ur_n1

1355 : 00001000000000000000010101001111; -- 	j p2s2s6_1or3

1356 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1357 : 00000000000000000000000000000000; -- nop

1358 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s2ur_end

1359 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1360 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1361 : 00000000000000000000000000000000; -- nop

1362 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s2ur_end

1363 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1364 : 00000000000000000000000000000000; -- nop

1365 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s2ur_end

1366 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

1367 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1368 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1369 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

1370 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1371 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1372 : 00000000000000000000000000000000; -- nop

1373 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s3n2

1374 : 00001000000000000000010101100010; -- 	j p2s3_2or4

1375 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1376 : 00000000000000000000000000000000; -- nop

1377 : 00010010010100000000000000101101; -- 	bne $t1, $t0, p2s4

1378 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1379 : 00000000000000000000000000000000; -- nop

1380 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s3ul_end

1381 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1382 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1383 : 00000000000000000000000000000000; -- nop

1384 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s3ulj

1385 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1386 : 00000000000000000000000000000000; -- nop

1387 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s3ul_end

1388 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

1389 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

1390 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1391 : 00001000000000000000010110000001; -- 	j p2s3ul_end  # Skip check jump piece since space is empty for move

1392 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1393 : 00000000000000000000000000000000; -- nop

1394 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s3ul_n1

1395 : 00001000000000000000010101110111; -- 	j p2s3s6_1or3

1396 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1397 : 00000000000000000000000000000000; -- nop

1398 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s3ul_end

1399 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1400 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1401 : 00000000000000000000000000000000; -- nop

1402 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s3ul_end

1403 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1404 : 00000000000000000000000000000000; -- nop

1405 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s3ul_end

1406 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

1407 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1408 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1409 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1410 : 00000000000000000000000000000000; -- nop

1411 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s3ur_end

1412 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

1413 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1414 : 00000000000000000000000000000000; -- nop

1415 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s3urj

1416 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1417 : 00000000000000000000000000000000; -- nop

1418 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s3ur_end

1419 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

1420 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

1421 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1422 : 00001000000000000000010110001111; -- 	j p2s3ur_end  # Skip check jump piece since space is empty for move

1423 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1424 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1425 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1426 : 00000000000000000000000000000000; -- nop

1427 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s4n2

1428 : 00001000000000000000010110011000; -- 	j p2s4_2or4

1429 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1430 : 00000000000000000000000000000000; -- nop

1431 : 00010010010100000000000001000011; -- 	bne $t1, $t0, p2s5

1432 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1433 : 00000000000000000000000000000000; -- nop

1434 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s4ul_end

1435 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

1436 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1437 : 00000000000000000000000000000000; -- nop

1438 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s4ulj

1439 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1440 : 00000000000000000000000000000000; -- nop

1441 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4ul_end

1442 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

1443 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

1444 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1445 : 00001000000000000000010110100110; -- 	j p2s4ul_end  # Skip check jump piece since space is empty for move

1446 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1447 : 00000000000000000000000000000000; -- nop

1448 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s4ur_end

1449 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1450 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1451 : 00000000000000000000000000000000; -- nop

1452 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s4urj

1453 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1454 : 00000000000000000000000000000000; -- nop

1455 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s4ur_end

1456 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

1457 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1458 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1459 : 00001000000000000000010111000101; -- 	j p2s4ur_end  # Skip check jump piece since space is empty for move

1460 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1461 : 00000000000000000000000000000000; -- nop

1462 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s4ur_n1

1463 : 00001000000000000000010110111011; -- 	j p2s4s9_1or3

1464 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1465 : 00000000000000000000000000000000; -- nop

1466 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s4ur_end

1467 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1468 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1469 : 00000000000000000000000000000000; -- nop

1470 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s4ur_end

1471 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1472 : 00000000000000000000000000000000; -- nop

1473 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s4ur_end

1474 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

1475 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1476 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1477 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

1478 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1479 : 00000000000000000000000000000000; -- nop

1480 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s4dlj

1481 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1482 : 00000000000000000000000000000000; -- nop

1483 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4dl_end

1484 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

1485 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

1486 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1487 : 00001000000000000000010111010000; -- 	j p2s4dl_end  # Skip check jump piece since space is empty for move

1488 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

1489 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1490 : 00000000000000000000000000000000; -- nop

1491 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s4drj

1492 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1493 : 00000000000000000000000000000000; -- nop

1494 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4dr_end

1495 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

1496 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

1497 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1498 : 00001000000000000000010111011011; -- 	j p2s4dr_end  # Skip check jump piece since space is empty for move

1499 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1500 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1501 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1502 : 00000000000000000000000000000000; -- nop

1503 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s5n2

1504 : 00001000000000000000010111100100; -- 	j p2s5_2or4

1505 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1506 : 00000000000000000000000000000000; -- nop

1507 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s6

1508 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1509 : 00000000000000000000000000000000; -- nop

1510 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s5ul_end

1511 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1512 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1513 : 00000000000000000000000000000000; -- nop

1514 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s5ulj

1515 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1516 : 00000000000000000000000000000000; -- nop

1517 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s5ul_end

1518 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

1519 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1520 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1521 : 00001000000000000000011000000011; -- 	j p2s5ul_end  # Skip check jump piece since space is empty for move

1522 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1523 : 00000000000000000000000000000000; -- nop

1524 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s5ul_n1

1525 : 00001000000000000000010111111001; -- 	j p2s5s9_1or3

1526 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1527 : 00000000000000000000000000000000; -- nop

1528 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s5ul_end

1529 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1530 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1531 : 00000000000000000000000000000000; -- nop

1532 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s5ul_end

1533 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1534 : 00000000000000000000000000000000; -- nop

1535 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s5ul_end

1536 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

1537 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1538 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1539 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1540 : 00000000000000000000000000000000; -- nop

1541 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s5ur_end

1542 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1543 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1544 : 00000000000000000000000000000000; -- nop

1545 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s5urj

1546 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1547 : 00000000000000000000000000000000; -- nop

1548 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s5ur_end

1549 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

1550 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1551 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1552 : 00001000000000000000011000100010; -- 	j p2s5ur_end  # Skip check jump piece since space is empty for move

1553 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1554 : 00000000000000000000000000000000; -- nop

1555 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s5ur_n1

1556 : 00001000000000000000011000011000; -- 	j p2s5s10_1or3

1557 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1558 : 00000000000000000000000000000000; -- nop

1559 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s5ur_end

1560 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1561 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1562 : 00000000000000000000000000000000; -- nop

1563 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s5ur_end

1564 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1565 : 00000000000000000000000000000000; -- nop

1566 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s5ur_end

1567 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

1568 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1569 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1570 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

1571 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1572 : 00000000000000000000000000000000; -- nop

1573 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s5dlj

1574 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1575 : 00000000000000000000000000000000; -- nop

1576 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s5dl_end

1577 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

1578 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

1579 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1580 : 00001000000000000000011000101101; -- 	j p2s5dl_end  # Skip check jump piece since space is empty for move

1581 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

1582 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1583 : 00000000000000000000000000000000; -- nop

1584 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s5drj

1585 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1586 : 00000000000000000000000000000000; -- nop

1587 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s5dr_end

1588 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

1589 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

1590 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1591 : 00001000000000000000011000111000; -- 	j p2s5dr_end  # Skip check jump piece since space is empty for move

1592 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1593 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1594 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1595 : 00000000000000000000000000000000; -- nop

1596 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s6n2

1597 : 00001000000000000000011001000001; -- 	j p2s6_2or4

1598 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1599 : 00000000000000000000000000000000; -- nop

1600 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s7

1601 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1602 : 00000000000000000000000000000000; -- nop

1603 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s6ul_end

1604 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1605 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1606 : 00000000000000000000000000000000; -- nop

1607 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s6ulj

1608 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1609 : 00000000000000000000000000000000; -- nop

1610 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s6ul_end

1611 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

1612 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1613 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1614 : 00001000000000000000011001100000; -- 	j p2s6ul_end  # Skip check jump piece since space is empty for move

1615 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1616 : 00000000000000000000000000000000; -- nop

1617 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s6ul_n1

1618 : 00001000000000000000011001010110; -- 	j p2s6s10_1or3

1619 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1620 : 00000000000000000000000000000000; -- nop

1621 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s6ul_end

1622 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1623 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1624 : 00000000000000000000000000000000; -- nop

1625 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s6ul_end

1626 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1627 : 00000000000000000000000000000000; -- nop

1628 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s6ul_end

1629 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

1630 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1631 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1632 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1633 : 00000000000000000000000000000000; -- nop

1634 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s6ur_end

1635 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1636 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1637 : 00000000000000000000000000000000; -- nop

1638 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s6urj

1639 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1640 : 00000000000000000000000000000000; -- nop

1641 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s6ur_end

1642 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

1643 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1644 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1645 : 00001000000000000000011001111111; -- 	j p2s6ur_end  # Skip check jump piece since space is empty for move

1646 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1647 : 00000000000000000000000000000000; -- nop

1648 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s6ur_n1

1649 : 00001000000000000000011001110101; -- 	j p2s6s11_1or3

1650 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1651 : 00000000000000000000000000000000; -- nop

1652 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s6ur_end

1653 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1654 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1655 : 00000000000000000000000000000000; -- nop

1656 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s6ur_end

1657 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1658 : 00000000000000000000000000000000; -- nop

1659 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s6ur_end

1660 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

1661 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

1662 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1663 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

1664 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1665 : 00000000000000000000000000000000; -- nop

1666 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s6dlj

1667 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1668 : 00000000000000000000000000000000; -- nop

1669 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s6dl_end

1670 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

1671 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

1672 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1673 : 00001000000000000000011010001010; -- 	j p2s6dl_end  # Skip check jump piece since space is empty for move

1674 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

1675 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1676 : 00000000000000000000000000000000; -- nop

1677 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s6drj

1678 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1679 : 00000000000000000000000000000000; -- nop

1680 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s6dr_end

1681 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

1682 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

1683 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1684 : 00001000000000000000011010010101; -- 	j p2s6dr_end  # Skip check jump piece since space is empty for move

1685 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

1686 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1687 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1688 : 00000000000000000000000000000000; -- nop

1689 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s7n2

1690 : 00001000000000000000011010011110; -- 	j p2s7_2or4

1691 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1692 : 00000000000000000000000000000000; -- nop

1693 : 00010010010100000000000000101010; -- 	bne $t1, $t0, p2s8

1694 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1695 : 00000000000000000000000000000000; -- nop

1696 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s7ul_end

1697 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1698 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1699 : 00000000000000000000000000000000; -- nop

1700 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s7ulj

1701 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1702 : 00000000000000000000000000000000; -- nop

1703 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s7ul_end

1704 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

1705 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1706 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1707 : 00001000000000000000011010111101; -- 	j p2s7ul_end  # Skip check jump piece since space is empty for move

1708 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1709 : 00000000000000000000000000000000; -- nop

1710 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s7ul_n1

1711 : 00001000000000000000011010110011; -- 	j p2s7s11_1or3

1712 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1713 : 00000000000000000000000000000000; -- nop

1714 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s7ul_end

1715 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1716 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1717 : 00000000000000000000000000000000; -- nop

1718 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s7ul_end

1719 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1720 : 00000000000000000000000000000000; -- nop

1721 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s7ul_end

1722 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

1723 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1724 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1725 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

1726 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1727 : 00000000000000000000000000000000; -- nop

1728 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s7dlj

1729 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

1730 : 00000000000000000000000000000000; -- nop

1731 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s7dl_end

1732 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

1733 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

1734 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1735 : 00001000000000000000011011001000; -- 	j p2s7dl_end  # Skip check jump piece since space is empty for move

1736 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

1737 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1738 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1739 : 00000000000000000000000000000000; -- nop

1740 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s8n2

1741 : 00001000000000000000011011010001; -- 	j p2s8_2or4

1742 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1743 : 00000000000000000000000000000000; -- nop

1744 : 00010010010100000000000000111011; -- 	bne $t1, $t0, p2s9

1745 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1746 : 00000000000000000000000000000000; -- nop

1747 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s8ur_end

1748 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1749 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1750 : 00000000000000000000000000000000; -- nop

1751 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s8urj

1752 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1753 : 00000000000000000000000000000000; -- nop

1754 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s8ur_end

1755 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

1756 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1757 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1758 : 00001000000000000000011011110000; -- 	j p2s8ur_end  # Skip check jump piece since space is empty for move

1759 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1760 : 00000000000000000000000000000000; -- nop

1761 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s8ur_n1

1762 : 00001000000000000000011011100110; -- 	j p2s8s12_1or3

1763 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1764 : 00000000000000000000000000000000; -- nop

1765 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s8ur_end

1766 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1767 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1768 : 00000000000000000000000000000000; -- nop

1769 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s8ur_end

1770 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1771 : 00000000000000000000000000000000; -- nop

1772 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s8ur_end

1773 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

1774 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1775 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1776 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1777 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1778 : 00000000000000000000000000000000; -- nop

1779 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s8drj

1780 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1781 : 00000000000000000000000000000000; -- nop

1782 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s8dr_end

1783 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

1784 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

1785 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1786 : 00001000000000000000011100001100; -- 	j p2s8dr_end  # Skip check jump piece since space is empty for move

1787 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1788 : 00000000000000000000000000000000; -- nop

1789 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s8dr_n1

1790 : 00001000000000000000011100000010; -- 	j p2s8s4_1or3

1791 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1792 : 00000000000000000000000000000000; -- nop

1793 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s8dr_end

1794 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

1795 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1796 : 00000000000000000000000000000000; -- nop

1797 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s8dr_end

1798 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

1799 : 00000000000000000000000000000000; -- nop

1800 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s8dr_end

1801 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

1802 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

1803 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1804 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1805 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1806 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1807 : 00000000000000000000000000000000; -- nop

1808 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s9n2

1809 : 00001000000000000000011100010101; -- 	j p2s9_2or4

1810 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1811 : 00000000000000000000000000000000; -- nop

1812 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s10

1813 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1814 : 00000000000000000000000000000000; -- nop

1815 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s9ul_end

1816 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1817 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1818 : 00000000000000000000000000000000; -- nop

1819 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s9ulj

1820 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1821 : 00000000000000000000000000000000; -- nop

1822 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s9ul_end

1823 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1824 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1825 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1826 : 00001000000000000000011100110100; -- 	j p2s9ul_end  # Skip check jump piece since space is empty for move

1827 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1828 : 00000000000000000000000000000000; -- nop

1829 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9ul_n1

1830 : 00001000000000000000011100101010; -- 	j p2s9s12_1or3

1831 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1832 : 00000000000000000000000000000000; -- nop

1833 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s9ul_end

1834 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

1835 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1836 : 00000000000000000000000000000000; -- nop

1837 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s9ul_end

1838 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1839 : 00000000000000000000000000000000; -- nop

1840 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9ul_end

1841 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1842 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

1843 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1844 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1845 : 00000000000000000000000000000000; -- nop

1846 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s9ur_end

1847 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1848 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1849 : 00000000000000000000000000000000; -- nop

1850 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s9urj

1851 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1852 : 00000000000000000000000000000000; -- nop

1853 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s9ur_end

1854 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1855 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1856 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1857 : 00001000000000000000011101010011; -- 	j p2s9ur_end  # Skip check jump piece since space is empty for move

1858 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1859 : 00000000000000000000000000000000; -- nop

1860 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9ur_n1

1861 : 00001000000000000000011101001001; -- 	j p2s9s13_1or3

1862 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1863 : 00000000000000000000000000000000; -- nop

1864 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s9ur_end

1865 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1866 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1867 : 00000000000000000000000000000000; -- nop

1868 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s9ur_end

1869 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1870 : 00000000000000000000000000000000; -- nop

1871 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9ur_end

1872 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1873 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1874 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1875 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1876 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1877 : 00000000000000000000000000000000; -- nop

1878 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s9dlj

1879 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1880 : 00000000000000000000000000000000; -- nop

1881 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s9dl_end

1882 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1883 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

1884 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1885 : 00001000000000000000011101101111; -- 	j p2s9dl_end  # Skip check jump piece since space is empty for move

1886 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1887 : 00000000000000000000000000000000; -- nop

1888 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9dl_n1

1889 : 00001000000000000000011101100101; -- 	j p2s9s4_1or3

1890 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1891 : 00000000000000000000000000000000; -- nop

1892 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s9dl_end

1893 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

1894 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1895 : 00000000000000000000000000000000; -- nop

1896 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s9dl_end

1897 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

1898 : 00000000000000000000000000000000; -- nop

1899 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9dl_end

1900 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1901 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

1902 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1903 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1904 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1905 : 00000000000000000000000000000000; -- nop

1906 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s9drj

1907 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1908 : 00000000000000000000000000000000; -- nop

1909 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s9dr_end

1910 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1911 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1912 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1913 : 00001000000000000000011110001011; -- 	j p2s9dr_end  # Skip check jump piece since space is empty for move

1914 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1915 : 00000000000000000000000000000000; -- nop

1916 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9dr_n1

1917 : 00001000000000000000011110000001; -- 	j p2s9s5_1or3

1918 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1919 : 00000000000000000000000000000000; -- nop

1920 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s9dr_end

1921 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

1922 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1923 : 00000000000000000000000000000000; -- nop

1924 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s9dr_end

1925 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

1926 : 00000000000000000000000000000000; -- nop

1927 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9dr_end

1928 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

1929 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

1930 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1931 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1932 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1933 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1934 : 00000000000000000000000000000000; -- nop

1935 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s10n2

1936 : 00001000000000000000011110010100; -- 	j p2s10_2or4

1937 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1938 : 00000000000000000000000000000000; -- nop

1939 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s11

1940 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1941 : 00000000000000000000000000000000; -- nop

1942 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s10ul_end

1943 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1944 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1945 : 00000000000000000000000000000000; -- nop

1946 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s10ulj

1947 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1948 : 00000000000000000000000000000000; -- nop

1949 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s10ul_end

1950 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

1951 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1952 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1953 : 00001000000000000000011110110011; -- 	j p2s10ul_end  # Skip check jump piece since space is empty for move

1954 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1955 : 00000000000000000000000000000000; -- nop

1956 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10ul_n1

1957 : 00001000000000000000011110101001; -- 	j p2s10s13_1or3

1958 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1959 : 00000000000000000000000000000000; -- nop

1960 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s10ul_end

1961 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1962 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1963 : 00000000000000000000000000000000; -- nop

1964 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s10ul_end

1965 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1966 : 00000000000000000000000000000000; -- nop

1967 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10ul_end

1968 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

1969 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1970 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1971 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1972 : 00000000000000000000000000000000; -- nop

1973 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s10ur_end

1974 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1975 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1976 : 00000000000000000000000000000000; -- nop

1977 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s10urj

1978 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1979 : 00000000000000000000000000000000; -- nop

1980 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s10ur_end

1981 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

1982 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1983 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1984 : 00001000000000000000011111010010; -- 	j p2s10ur_end  # Skip check jump piece since space is empty for move

1985 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1986 : 00000000000000000000000000000000; -- nop

1987 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10ur_n1

1988 : 00001000000000000000011111001000; -- 	j p2s10s14_1or3

1989 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1990 : 00000000000000000000000000000000; -- nop

1991 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s10ur_end

1992 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1993 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1994 : 00000000000000000000000000000000; -- nop

1995 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s10ur_end

1996 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1997 : 00000000000000000000000000000000; -- nop

1998 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10ur_end

1999 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

2000 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

2001 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2002 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

2003 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2004 : 00000000000000000000000000000000; -- nop

2005 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s10dlj

2006 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2007 : 00000000000000000000000000000000; -- nop

2008 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s10dl_end

2009 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

2010 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

2011 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2012 : 00001000000000000000011111101110; -- 	j p2s10dl_end  # Skip check jump piece since space is empty for move

2013 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2014 : 00000000000000000000000000000000; -- nop

2015 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10dl_n1

2016 : 00001000000000000000011111100100; -- 	j p2s10s5_1or3

2017 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2018 : 00000000000000000000000000000000; -- nop

2019 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s10dl_end

2020 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

2021 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2022 : 00000000000000000000000000000000; -- nop

2023 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s10dl_end

2024 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

2025 : 00000000000000000000000000000000; -- nop

2026 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10dl_end

2027 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

2028 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

2029 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2030 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

2031 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2032 : 00000000000000000000000000000000; -- nop

2033 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s10drj

2034 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2035 : 00000000000000000000000000000000; -- nop

2036 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s10dr_end

2037 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

2038 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

2039 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2040 : 00001000000000000000100000001010; -- 	j p2s10dr_end  # Skip check jump piece since space is empty for move

2041 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2042 : 00000000000000000000000000000000; -- nop

2043 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10dr_n1

2044 : 00001000000000000000100000000000; -- 	j p2s10s6_1or3

2045 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2046 : 00000000000000000000000000000000; -- nop

2047 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s10dr_end

2048 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

2049 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2050 : 00000000000000000000000000000000; -- nop

2051 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s10dr_end

2052 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

2053 : 00000000000000000000000000000000; -- nop

2054 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10dr_end

2055 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

2056 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

2057 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2058 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

2059 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2060 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2061 : 00000000000000000000000000000000; -- nop

2062 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s11n2

2063 : 00001000000000000000100000010011; -- 	j p2s11_2or4

2064 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2065 : 00000000000000000000000000000000; -- nop

2066 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s12

2067 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2068 : 00000000000000000000000000000000; -- nop

2069 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s11ul_end

2070 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

2071 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2072 : 00000000000000000000000000000000; -- nop

2073 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s11ulj

2074 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2075 : 00000000000000000000000000000000; -- nop

2076 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s11ul_end

2077 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

2078 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

2079 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2080 : 00001000000000000000100000110010; -- 	j p2s11ul_end  # Skip check jump piece since space is empty for move

2081 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2082 : 00000000000000000000000000000000; -- nop

2083 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s11ul_n1

2084 : 00001000000000000000100000101000; -- 	j p2s11s14_1or3

2085 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2086 : 00000000000000000000000000000000; -- nop

2087 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s11ul_end

2088 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2089 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2090 : 00000000000000000000000000000000; -- nop

2091 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s11ul_end

2092 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2093 : 00000000000000000000000000000000; -- nop

2094 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s11ul_end

2095 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

2096 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2097 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2098 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2099 : 00000000000000000000000000000000; -- nop

2100 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s11ur_end

2101 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

2102 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2103 : 00000000000000000000000000000000; -- nop

2104 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s11urj

2105 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2106 : 00000000000000000000000000000000; -- nop

2107 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s11ur_end

2108 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

2109 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

2110 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2111 : 00001000000000000000100001000000; -- 	j p2s11ur_end  # Skip check jump piece since space is empty for move

2112 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

2113 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2114 : 00000000000000000000000000000000; -- nop

2115 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s11dlj

2116 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2117 : 00000000000000000000000000000000; -- nop

2118 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s11dl_end

2119 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

2120 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

2121 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2122 : 00001000000000000000100001011100; -- 	j p2s11dl_end  # Skip check jump piece since space is empty for move

2123 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2124 : 00000000000000000000000000000000; -- nop

2125 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s11dl_n1

2126 : 00001000000000000000100001010010; -- 	j p2s11s6_1or3

2127 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2128 : 00000000000000000000000000000000; -- nop

2129 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s11dl_end

2130 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

2131 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2132 : 00000000000000000000000000000000; -- nop

2133 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s11dl_end

2134 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

2135 : 00000000000000000000000000000000; -- nop

2136 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s11dl_end

2137 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

2138 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

2139 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2140 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

2141 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2142 : 00000000000000000000000000000000; -- nop

2143 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s11drj

2144 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2145 : 00000000000000000000000000000000; -- nop

2146 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s11dr_end

2147 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

2148 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

2149 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2150 : 00001000000000000000100001100111; -- 	j p2s11dr_end  # Skip check jump piece since space is empty for move

2151 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

2152 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2153 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2154 : 00000000000000000000000000000000; -- nop

2155 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s12n2

2156 : 00001000000000000000100001110000; -- 	j p2s12_2or4

2157 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2158 : 00000000000000000000000000000000; -- nop

2159 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s13

2160 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2161 : 00000000000000000000000000000000; -- nop

2162 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s12ul_end

2163 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

2164 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2165 : 00000000000000000000000000000000; -- nop

2166 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s12ulj

2167 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2168 : 00000000000000000000000000000000; -- nop

2169 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s12ul_end

2170 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

2171 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

2172 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2173 : 00001000000000000000100001111110; -- 	j p2s12ul_end  # Skip check jump piece since space is empty for move

2174 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2175 : 00000000000000000000000000000000; -- nop

2176 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s12ur_end

2177 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

2178 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2179 : 00000000000000000000000000000000; -- nop

2180 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s12urj

2181 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2182 : 00000000000000000000000000000000; -- nop

2183 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s12ur_end

2184 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

2185 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

2186 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2187 : 00001000000000000000100010011101; -- 	j p2s12ur_end  # Skip check jump piece since space is empty for move

2188 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2189 : 00000000000000000000000000000000; -- nop

2190 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s12ur_n1

2191 : 00001000000000000000100010010011; -- 	j p2s12s17_1or3

2192 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2193 : 00000000000000000000000000000000; -- nop

2194 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s12ur_end

2195 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2196 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2197 : 00000000000000000000000000000000; -- nop

2198 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s12ur_end

2199 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2200 : 00000000000000000000000000000000; -- nop

2201 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s12ur_end

2202 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

2203 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2204 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2205 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

2206 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2207 : 00000000000000000000000000000000; -- nop

2208 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s12dlj

2209 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2210 : 00000000000000000000000000000000; -- nop

2211 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s12dl_end

2212 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

2213 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

2214 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2215 : 00001000000000000000100010101000; -- 	j p2s12dl_end  # Skip check jump piece since space is empty for move

2216 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

2217 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2218 : 00000000000000000000000000000000; -- nop

2219 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s12drj

2220 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2221 : 00000000000000000000000000000000; -- nop

2222 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s12dr_end

2223 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

2224 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

2225 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2226 : 00001000000000000000100011000100; -- 	j p2s12dr_end  # Skip check jump piece since space is empty for move

2227 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2228 : 00000000000000000000000000000000; -- nop

2229 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s12dr_n1

2230 : 00001000000000000000100010111010; -- 	j p2s12s9_1or3

2231 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2232 : 00000000000000000000000000000000; -- nop

2233 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s12dr_end

2234 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

2235 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2236 : 00000000000000000000000000000000; -- nop

2237 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s12dr_end

2238 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2239 : 00000000000000000000000000000000; -- nop

2240 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s12dr_end

2241 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

2242 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

2243 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2244 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

2245 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2246 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2247 : 00000000000000000000000000000000; -- nop

2248 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s13n2

2249 : 00001000000000000000100011001101; -- 	j p2s13_2or4

2250 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2251 : 00000000000000000000000000000000; -- nop

2252 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s14

2253 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2254 : 00000000000000000000000000000000; -- nop

2255 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s13ul_end

2256 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

2257 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2258 : 00000000000000000000000000000000; -- nop

2259 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s13ulj

2260 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2261 : 00000000000000000000000000000000; -- nop

2262 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s13ul_end

2263 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2264 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

2265 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2266 : 00001000000000000000100011101100; -- 	j p2s13ul_end  # Skip check jump piece since space is empty for move

2267 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2268 : 00000000000000000000000000000000; -- nop

2269 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13ul_n1

2270 : 00001000000000000000100011100010; -- 	j p2s13s17_1or3

2271 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2272 : 00000000000000000000000000000000; -- nop

2273 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s13ul_end

2274 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2275 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2276 : 00000000000000000000000000000000; -- nop

2277 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s13ul_end

2278 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2279 : 00000000000000000000000000000000; -- nop

2280 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13ul_end

2281 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2282 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2283 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2284 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2285 : 00000000000000000000000000000000; -- nop

2286 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s13ur_end

2287 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2288 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2289 : 00000000000000000000000000000000; -- nop

2290 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s13urj

2291 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2292 : 00000000000000000000000000000000; -- nop

2293 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s13ur_end

2294 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2295 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2296 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2297 : 00001000000000000000100100001011; -- 	j p2s13ur_end  # Skip check jump piece since space is empty for move

2298 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2299 : 00000000000000000000000000000000; -- nop

2300 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13ur_n1

2301 : 00001000000000000000100100000001; -- 	j p2s13s18_1or3

2302 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2303 : 00000000000000000000000000000000; -- nop

2304 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s13ur_end

2305 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2306 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2307 : 00000000000000000000000000000000; -- nop

2308 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s13ur_end

2309 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2310 : 00000000000000000000000000000000; -- nop

2311 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13ur_end

2312 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2313 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2314 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2315 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

2316 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2317 : 00000000000000000000000000000000; -- nop

2318 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s13dlj

2319 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2320 : 00000000000000000000000000000000; -- nop

2321 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s13dl_end

2322 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2323 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

2324 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2325 : 00001000000000000000100100100111; -- 	j p2s13dl_end  # Skip check jump piece since space is empty for move

2326 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2327 : 00000000000000000000000000000000; -- nop

2328 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13dl_n1

2329 : 00001000000000000000100100011101; -- 	j p2s13s9_1or3

2330 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2331 : 00000000000000000000000000000000; -- nop

2332 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s13dl_end

2333 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

2334 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2335 : 00000000000000000000000000000000; -- nop

2336 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s13dl_end

2337 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2338 : 00000000000000000000000000000000; -- nop

2339 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13dl_end

2340 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2341 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

2342 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2343 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

2344 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2345 : 00000000000000000000000000000000; -- nop

2346 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s13drj

2347 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2348 : 00000000000000000000000000000000; -- nop

2349 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s13dr_end

2350 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2351 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

2352 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2353 : 00001000000000000000100101000011; -- 	j p2s13dr_end  # Skip check jump piece since space is empty for move

2354 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2355 : 00000000000000000000000000000000; -- nop

2356 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13dr_n1

2357 : 00001000000000000000100100111001; -- 	j p2s13s10_1or3

2358 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2359 : 00000000000000000000000000000000; -- nop

2360 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s13dr_end

2361 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

2362 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2363 : 00000000000000000000000000000000; -- nop

2364 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s13dr_end

2365 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2366 : 00000000000000000000000000000000; -- nop

2367 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13dr_end

2368 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

2369 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

2370 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2371 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

2372 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2373 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2374 : 00000000000000000000000000000000; -- nop

2375 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s14n2

2376 : 00001000000000000000100101001100; -- 	j p2s14_2or4

2377 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2378 : 00000000000000000000000000000000; -- nop

2379 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s15

2380 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2381 : 00000000000000000000000000000000; -- nop

2382 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s14ul_end

2383 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2384 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2385 : 00000000000000000000000000000000; -- nop

2386 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s14ulj

2387 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2388 : 00000000000000000000000000000000; -- nop

2389 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s14ul_end

2390 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2391 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2392 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2393 : 00001000000000000000100101101011; -- 	j p2s14ul_end  # Skip check jump piece since space is empty for move

2394 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2395 : 00000000000000000000000000000000; -- nop

2396 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14ul_n1

2397 : 00001000000000000000100101100001; -- 	j p2s14s18_1or3

2398 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2399 : 00000000000000000000000000000000; -- nop

2400 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s14ul_end

2401 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2402 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2403 : 00000000000000000000000000000000; -- nop

2404 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s14ul_end

2405 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2406 : 00000000000000000000000000000000; -- nop

2407 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14ul_end

2408 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2409 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2410 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2411 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2412 : 00000000000000000000000000000000; -- nop

2413 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s14ur_end

2414 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

2415 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2416 : 00000000000000000000000000000000; -- nop

2417 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s14urj

2418 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2419 : 00000000000000000000000000000000; -- nop

2420 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s14ur_end

2421 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2422 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

2423 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2424 : 00001000000000000000100110001010; -- 	j p2s14ur_end  # Skip check jump piece since space is empty for move

2425 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2426 : 00000000000000000000000000000000; -- nop

2427 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14ur_n1

2428 : 00001000000000000000100110000000; -- 	j p2s14s19_1or3

2429 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2430 : 00000000000000000000000000000000; -- nop

2431 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s14ur_end

2432 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

2433 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2434 : 00000000000000000000000000000000; -- nop

2435 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s14ur_end

2436 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2437 : 00000000000000000000000000000000; -- nop

2438 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14ur_end

2439 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2440 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

2441 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2442 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

2443 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2444 : 00000000000000000000000000000000; -- nop

2445 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s14dlj

2446 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2447 : 00000000000000000000000000000000; -- nop

2448 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s14dl_end

2449 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2450 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

2451 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2452 : 00001000000000000000100110100110; -- 	j p2s14dl_end  # Skip check jump piece since space is empty for move

2453 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2454 : 00000000000000000000000000000000; -- nop

2455 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14dl_n1

2456 : 00001000000000000000100110011100; -- 	j p2s14s10_1or3

2457 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2458 : 00000000000000000000000000000000; -- nop

2459 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s14dl_end

2460 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

2461 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2462 : 00000000000000000000000000000000; -- nop

2463 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s14dl_end

2464 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2465 : 00000000000000000000000000000000; -- nop

2466 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14dl_end

2467 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2468 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

2469 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2470 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

2471 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2472 : 00000000000000000000000000000000; -- nop

2473 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s14drj

2474 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2475 : 00000000000000000000000000000000; -- nop

2476 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s14dr_end

2477 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2478 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

2479 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2480 : 00001000000000000000100111000010; -- 	j p2s14dr_end  # Skip check jump piece since space is empty for move

2481 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2482 : 00000000000000000000000000000000; -- nop

2483 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14dr_n1

2484 : 00001000000000000000100110111000; -- 	j p2s14s11_1or3

2485 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2486 : 00000000000000000000000000000000; -- nop

2487 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s14dr_end

2488 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

2489 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2490 : 00000000000000000000000000000000; -- nop

2491 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s14dr_end

2492 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2493 : 00000000000000000000000000000000; -- nop

2494 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14dr_end

2495 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

2496 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

2497 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2498 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

2499 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2500 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2501 : 00000000000000000000000000000000; -- nop

2502 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s15n2

2503 : 00001000000000000000100111001011; -- 	j p2s15_2or4

2504 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2505 : 00000000000000000000000000000000; -- nop

2506 : 00010010010100000000000000111011; -- 	bne $t1, $t0, p2s16

2507 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2508 : 00000000000000000000000000000000; -- nop

2509 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s15ul_end

2510 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

2511 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2512 : 00000000000000000000000000000000; -- nop

2513 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s15ulj

2514 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2515 : 00000000000000000000000000000000; -- nop

2516 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s15ul_end

2517 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

2518 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

2519 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2520 : 00001000000000000000100111101010; -- 	j p2s15ul_end  # Skip check jump piece since space is empty for move

2521 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2522 : 00000000000000000000000000000000; -- nop

2523 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s15ul_n1

2524 : 00001000000000000000100111100000; -- 	j p2s15s19_1or3

2525 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2526 : 00000000000000000000000000000000; -- nop

2527 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s15ul_end

2528 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2529 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2530 : 00000000000000000000000000000000; -- nop

2531 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s15ul_end

2532 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2533 : 00000000000000000000000000000000; -- nop

2534 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s15ul_end

2535 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

2536 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2537 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2538 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

2539 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2540 : 00000000000000000000000000000000; -- nop

2541 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s15dlj

2542 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2543 : 00000000000000000000000000000000; -- nop

2544 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s15dl_end

2545 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

2546 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

2547 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2548 : 00001000000000000000101000000110; -- 	j p2s15dl_end  # Skip check jump piece since space is empty for move

2549 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2550 : 00000000000000000000000000000000; -- nop

2551 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s15dl_n1

2552 : 00001000000000000000100111111100; -- 	j p2s15s11_1or3

2553 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2554 : 00000000000000000000000000000000; -- nop

2555 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s15dl_end

2556 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

2557 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2558 : 00000000000000000000000000000000; -- nop

2559 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s15dl_end

2560 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2561 : 00000000000000000000000000000000; -- nop

2562 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s15dl_end

2563 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

2564 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

2565 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2566 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

2567 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2568 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2569 : 00000000000000000000000000000000; -- nop

2570 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s16n2

2571 : 00001000000000000000101000001111; -- 	j p2s16_2or4

2572 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2573 : 00000000000000000000000000000000; -- nop

2574 : 00010010010100000000000000111011; -- 	bne $t1, $t0, p2s17

2575 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2576 : 00000000000000000000000000000000; -- nop

2577 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s16ur_end

2578 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2579 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2580 : 00000000000000000000000000000000; -- nop

2581 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s16urj

2582 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2583 : 00000000000000000000000000000000; -- nop

2584 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s16ur_end

2585 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

2586 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2587 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2588 : 00001000000000000000101000101110; -- 	j p2s16ur_end  # Skip check jump piece since space is empty for move

2589 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2590 : 00000000000000000000000000000000; -- nop

2591 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s16ur_n1

2592 : 00001000000000000000101000100100; -- 	j p2s16s20_1or3

2593 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2594 : 00000000000000000000000000000000; -- nop

2595 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s16ur_end

2596 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

2597 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2598 : 00000000000000000000000000000000; -- nop

2599 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s16ur_end

2600 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2601 : 00000000000000000000000000000000; -- nop

2602 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s16ur_end

2603 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

2604 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

2605 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2606 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

2607 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2608 : 00000000000000000000000000000000; -- nop

2609 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s16drj

2610 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2611 : 00000000000000000000000000000000; -- nop

2612 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s16dr_end

2613 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

2614 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

2615 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2616 : 00001000000000000000101001001010; -- 	j p2s16dr_end  # Skip check jump piece since space is empty for move

2617 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2618 : 00000000000000000000000000000000; -- nop

2619 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s16dr_n1

2620 : 00001000000000000000101001000000; -- 	j p2s16s12_1or3

2621 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2622 : 00000000000000000000000000000000; -- nop

2623 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s16dr_end

2624 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

2625 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2626 : 00000000000000000000000000000000; -- nop

2627 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s16dr_end

2628 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2629 : 00000000000000000000000000000000; -- nop

2630 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s16dr_end

2631 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

2632 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

2633 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2634 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

2635 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2636 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2637 : 00000000000000000000000000000000; -- nop

2638 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s17n2

2639 : 00001000000000000000101001010011; -- 	j p2s17_2or4

2640 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2641 : 00000000000000000000000000000000; -- nop

2642 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s18

2643 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2644 : 00000000000000000000000000000000; -- nop

2645 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s17ul_end

2646 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2647 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2648 : 00000000000000000000000000000000; -- nop

2649 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s17ulj

2650 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2651 : 00000000000000000000000000000000; -- nop

2652 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s17ul_end

2653 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2654 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2655 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2656 : 00001000000000000000101001110010; -- 	j p2s17ul_end  # Skip check jump piece since space is empty for move

2657 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2658 : 00000000000000000000000000000000; -- nop

2659 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17ul_n1

2660 : 00001000000000000000101001101000; -- 	j p2s17s20_1or3

2661 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2662 : 00000000000000000000000000000000; -- nop

2663 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s17ul_end

2664 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

2665 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2666 : 00000000000000000000000000000000; -- nop

2667 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s17ul_end

2668 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2669 : 00000000000000000000000000000000; -- nop

2670 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17ul_end

2671 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2672 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

2673 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2674 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2675 : 00000000000000000000000000000000; -- nop

2676 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s17ur_end

2677 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2678 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2679 : 00000000000000000000000000000000; -- nop

2680 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s17urj

2681 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2682 : 00000000000000000000000000000000; -- nop

2683 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s17ur_end

2684 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2685 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2686 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2687 : 00001000000000000000101010010001; -- 	j p2s17ur_end  # Skip check jump piece since space is empty for move

2688 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2689 : 00000000000000000000000000000000; -- nop

2690 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17ur_n1

2691 : 00001000000000000000101010000111; -- 	j p2s17s21_1or3

2692 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2693 : 00000000000000000000000000000000; -- nop

2694 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s17ur_end

2695 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2696 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2697 : 00000000000000000000000000000000; -- nop

2698 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s17ur_end

2699 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2700 : 00000000000000000000000000000000; -- nop

2701 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17ur_end

2702 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2703 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

2704 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2705 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

2706 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2707 : 00000000000000000000000000000000; -- nop

2708 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s17dlj

2709 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2710 : 00000000000000000000000000000000; -- nop

2711 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s17dl_end

2712 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2713 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

2714 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2715 : 00001000000000000000101010101101; -- 	j p2s17dl_end  # Skip check jump piece since space is empty for move

2716 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2717 : 00000000000000000000000000000000; -- nop

2718 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17dl_n1

2719 : 00001000000000000000101010100011; -- 	j p2s17s12_1or3

2720 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2721 : 00000000000000000000000000000000; -- nop

2722 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s17dl_end

2723 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

2724 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2725 : 00000000000000000000000000000000; -- nop

2726 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s17dl_end

2727 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2728 : 00000000000000000000000000000000; -- nop

2729 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17dl_end

2730 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2731 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

2732 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2733 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

2734 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2735 : 00000000000000000000000000000000; -- nop

2736 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s17drj

2737 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2738 : 00000000000000000000000000000000; -- nop

2739 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s17dr_end

2740 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2741 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

2742 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2743 : 00001000000000000000101011001001; -- 	j p2s17dr_end  # Skip check jump piece since space is empty for move

2744 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2745 : 00000000000000000000000000000000; -- nop

2746 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17dr_n1

2747 : 00001000000000000000101010111111; -- 	j p2s17s13_1or3

2748 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2749 : 00000000000000000000000000000000; -- nop

2750 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s17dr_end

2751 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

2752 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2753 : 00000000000000000000000000000000; -- nop

2754 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s17dr_end

2755 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2756 : 00000000000000000000000000000000; -- nop

2757 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17dr_end

2758 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

2759 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

2760 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2761 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2762 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2763 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2764 : 00000000000000000000000000000000; -- nop

2765 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s18n2

2766 : 00001000000000000000101011010010; -- 	j p2s18_2or4

2767 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2768 : 00000000000000000000000000000000; -- nop

2769 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s19

2770 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2771 : 00000000000000000000000000000000; -- nop

2772 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s18ul_end

2773 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2774 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2775 : 00000000000000000000000000000000; -- nop

2776 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s18ulj

2777 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2778 : 00000000000000000000000000000000; -- nop

2779 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s18ul_end

2780 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2781 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2782 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2783 : 00001000000000000000101011110001; -- 	j p2s18ul_end  # Skip check jump piece since space is empty for move

2784 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2785 : 00000000000000000000000000000000; -- nop

2786 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18ul_n1

2787 : 00001000000000000000101011100111; -- 	j p2s18s21_1or3

2788 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2789 : 00000000000000000000000000000000; -- nop

2790 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s18ul_end

2791 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

2792 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2793 : 00000000000000000000000000000000; -- nop

2794 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s18ul_end

2795 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2796 : 00000000000000000000000000000000; -- nop

2797 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18ul_end

2798 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2799 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

2800 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2801 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2802 : 00000000000000000000000000000000; -- nop

2803 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s18ur_end

2804 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2805 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2806 : 00000000000000000000000000000000; -- nop

2807 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s18urj

2808 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2809 : 00000000000000000000000000000000; -- nop

2810 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s18ur_end

2811 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2812 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2813 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2814 : 00001000000000000000101100010000; -- 	j p2s18ur_end  # Skip check jump piece since space is empty for move

2815 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2816 : 00000000000000000000000000000000; -- nop

2817 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18ur_n1

2818 : 00001000000000000000101100000110; -- 	j p2s18s22_1or3

2819 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2820 : 00000000000000000000000000000000; -- nop

2821 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s18ur_end

2822 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2823 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2824 : 00000000000000000000000000000000; -- nop

2825 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s18ur_end

2826 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2827 : 00000000000000000000000000000000; -- nop

2828 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18ur_end

2829 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2830 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

2831 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2832 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

2833 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2834 : 00000000000000000000000000000000; -- nop

2835 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s18dlj

2836 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2837 : 00000000000000000000000000000000; -- nop

2838 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s18dl_end

2839 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2840 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

2841 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2842 : 00001000000000000000101100101100; -- 	j p2s18dl_end  # Skip check jump piece since space is empty for move

2843 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2844 : 00000000000000000000000000000000; -- nop

2845 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18dl_n1

2846 : 00001000000000000000101100100010; -- 	j p2s18s13_1or3

2847 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2848 : 00000000000000000000000000000000; -- nop

2849 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s18dl_end

2850 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

2851 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2852 : 00000000000000000000000000000000; -- nop

2853 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s18dl_end

2854 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2855 : 00000000000000000000000000000000; -- nop

2856 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18dl_end

2857 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2858 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

2859 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2860 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

2861 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2862 : 00000000000000000000000000000000; -- nop

2863 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s18drj

2864 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2865 : 00000000000000000000000000000000; -- nop

2866 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s18dr_end

2867 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2868 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

2869 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2870 : 00001000000000000000101101001000; -- 	j p2s18dr_end  # Skip check jump piece since space is empty for move

2871 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2872 : 00000000000000000000000000000000; -- nop

2873 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18dr_n1

2874 : 00001000000000000000101100111110; -- 	j p2s18s14_1or3

2875 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2876 : 00000000000000000000000000000000; -- nop

2877 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s18dr_end

2878 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

2879 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2880 : 00000000000000000000000000000000; -- nop

2881 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s18dr_end

2882 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2883 : 00000000000000000000000000000000; -- nop

2884 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18dr_end

2885 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

2886 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

2887 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2888 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

2889 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2890 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2891 : 00000000000000000000000000000000; -- nop

2892 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s19n2

2893 : 00001000000000000000101101010001; -- 	j p2s19_2or4

2894 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2895 : 00000000000000000000000000000000; -- nop

2896 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s20

2897 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2898 : 00000000000000000000000000000000; -- nop

2899 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s19ul_end

2900 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2901 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2902 : 00000000000000000000000000000000; -- nop

2903 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s19ulj

2904 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2905 : 00000000000000000000000000000000; -- nop

2906 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s19ul_end

2907 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

2908 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2909 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2910 : 00001000000000000000101101110000; -- 	j p2s19ul_end  # Skip check jump piece since space is empty for move

2911 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2912 : 00000000000000000000000000000000; -- nop

2913 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s19ul_n1

2914 : 00001000000000000000101101100110; -- 	j p2s19s22_1or3

2915 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2916 : 00000000000000000000000000000000; -- nop

2917 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s19ul_end

2918 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2919 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2920 : 00000000000000000000000000000000; -- nop

2921 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s19ul_end

2922 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2923 : 00000000000000000000000000000000; -- nop

2924 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s19ul_end

2925 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

2926 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

2927 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2928 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2929 : 00000000000000000000000000000000; -- nop

2930 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s19ur_end

2931 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

2932 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2933 : 00000000000000000000000000000000; -- nop

2934 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s19urj

2935 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2936 : 00000000000000000000000000000000; -- nop

2937 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s19ur_end

2938 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

2939 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

2940 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2941 : 00001000000000000000101101111110; -- 	j p2s19ur_end  # Skip check jump piece since space is empty for move

2942 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

2943 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2944 : 00000000000000000000000000000000; -- nop

2945 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s19dlj

2946 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2947 : 00000000000000000000000000000000; -- nop

2948 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s19dl_end

2949 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

2950 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

2951 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2952 : 00001000000000000000101110011010; -- 	j p2s19dl_end  # Skip check jump piece since space is empty for move

2953 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2954 : 00000000000000000000000000000000; -- nop

2955 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s19dl_n1

2956 : 00001000000000000000101110010000; -- 	j p2s19s14_1or3

2957 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2958 : 00000000000000000000000000000000; -- nop

2959 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s19dl_end

2960 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

2961 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2962 : 00000000000000000000000000000000; -- nop

2963 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s19dl_end

2964 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2965 : 00000000000000000000000000000000; -- nop

2966 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s19dl_end

2967 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

2968 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

2969 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2970 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

2971 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2972 : 00000000000000000000000000000000; -- nop

2973 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s19drj

2974 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2975 : 00000000000000000000000000000000; -- nop

2976 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s19dr_end

2977 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

2978 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

2979 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2980 : 00001000000000000000101110100101; -- 	j p2s19dr_end  # Skip check jump piece since space is empty for move

2981 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2982 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2983 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2984 : 00000000000000000000000000000000; -- nop

2985 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s20n2

2986 : 00001000000000000000101110101110; -- 	j p2s20_2or4

2987 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2988 : 00000000000000000000000000000000; -- nop

2989 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s21

2990 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2991 : 00000000000000000000000000000000; -- nop

2992 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s20ul_end

2993 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

2994 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2995 : 00000000000000000000000000000000; -- nop

2996 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s20ulj

2997 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2998 : 00000000000000000000000000000000; -- nop

2999 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s20ul_end

3000 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

3001 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

3002 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3003 : 00001000000000000000101110111100; -- 	j p2s20ul_end  # Skip check jump piece since space is empty for move

3004 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3005 : 00000000000000000000000000000000; -- nop

3006 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s20ur_end

3007 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

3008 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3009 : 00000000000000000000000000000000; -- nop

3010 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s20urj

3011 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3012 : 00000000000000000000000000000000; -- nop

3013 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s20ur_end

3014 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

3015 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

3016 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3017 : 00001000000000000000101111011011; -- 	j p2s20ur_end  # Skip check jump piece since space is empty for move

3018 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3019 : 00000000000000000000000000000000; -- nop

3020 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s20ur_n1

3021 : 00001000000000000000101111010001; -- 	j p2s20s25_1or3

3022 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3023 : 00000000000000000000000000000000; -- nop

3024 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s20ur_end

3025 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

3026 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3027 : 00000000000000000000000000000000; -- nop

3028 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s20ur_end

3029 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3030 : 00000000000000000000000000000000; -- nop

3031 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s20ur_end

3032 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

3033 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

3034 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3035 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

3036 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3037 : 00000000000000000000000000000000; -- nop

3038 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s20dlj

3039 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3040 : 00000000000000000000000000000000; -- nop

3041 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s20dl_end

3042 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

3043 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

3044 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3045 : 00001000000000000000101111100110; -- 	j p2s20dl_end  # Skip check jump piece since space is empty for move

3046 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

3047 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3048 : 00000000000000000000000000000000; -- nop

3049 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s20drj

3050 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3051 : 00000000000000000000000000000000; -- nop

3052 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s20dr_end

3053 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

3054 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

3055 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3056 : 00001000000000000000110000000010; -- 	j p2s20dr_end  # Skip check jump piece since space is empty for move

3057 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3058 : 00000000000000000000000000000000; -- nop

3059 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s20dr_n1

3060 : 00001000000000000000101111111000; -- 	j p2s20s17_1or3

3061 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3062 : 00000000000000000000000000000000; -- nop

3063 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s20dr_end

3064 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

3065 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3066 : 00000000000000000000000000000000; -- nop

3067 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s20dr_end

3068 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3069 : 00000000000000000000000000000000; -- nop

3070 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s20dr_end

3071 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

3072 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

3073 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3074 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

3075 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3076 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3077 : 00000000000000000000000000000000; -- nop

3078 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s21n2

3079 : 00001000000000000000110000001011; -- 	j p2s21_2or4

3080 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3081 : 00000000000000000000000000000000; -- nop

3082 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s22

3083 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3084 : 00000000000000000000000000000000; -- nop

3085 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s21ul_end

3086 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

3087 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3088 : 00000000000000000000000000000000; -- nop

3089 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s21ulj

3090 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3091 : 00000000000000000000000000000000; -- nop

3092 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s21ul_end

3093 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3094 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

3095 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3096 : 00001000000000000000110000101010; -- 	j p2s21ul_end  # Skip check jump piece since space is empty for move

3097 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3098 : 00000000000000000000000000000000; -- nop

3099 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21ul_n1

3100 : 00001000000000000000110000100000; -- 	j p2s21s25_1or3

3101 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3102 : 00000000000000000000000000000000; -- nop

3103 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s21ul_end

3104 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

3105 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3106 : 00000000000000000000000000000000; -- nop

3107 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s21ul_end

3108 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3109 : 00000000000000000000000000000000; -- nop

3110 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21ul_end

3111 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3112 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

3113 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3114 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3115 : 00000000000000000000000000000000; -- nop

3116 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s21ur_end

3117 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

3118 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3119 : 00000000000000000000000000000000; -- nop

3120 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s21urj

3121 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3122 : 00000000000000000000000000000000; -- nop

3123 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s21ur_end

3124 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3125 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

3126 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3127 : 00001000000000000000110001001001; -- 	j p2s21ur_end  # Skip check jump piece since space is empty for move

3128 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3129 : 00000000000000000000000000000000; -- nop

3130 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21ur_n1

3131 : 00001000000000000000110000111111; -- 	j p2s21s26_1or3

3132 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3133 : 00000000000000000000000000000000; -- nop

3134 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s21ur_end

3135 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

3136 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3137 : 00000000000000000000000000000000; -- nop

3138 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s21ur_end

3139 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3140 : 00000000000000000000000000000000; -- nop

3141 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21ur_end

3142 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3143 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

3144 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3145 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

3146 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3147 : 00000000000000000000000000000000; -- nop

3148 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s21dlj

3149 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3150 : 00000000000000000000000000000000; -- nop

3151 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s21dl_end

3152 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3153 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

3154 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3155 : 00001000000000000000110001100101; -- 	j p2s21dl_end  # Skip check jump piece since space is empty for move

3156 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3157 : 00000000000000000000000000000000; -- nop

3158 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21dl_n1

3159 : 00001000000000000000110001011011; -- 	j p2s21s17_1or3

3160 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3161 : 00000000000000000000000000000000; -- nop

3162 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s21dl_end

3163 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

3164 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3165 : 00000000000000000000000000000000; -- nop

3166 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s21dl_end

3167 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3168 : 00000000000000000000000000000000; -- nop

3169 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21dl_end

3170 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3171 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

3172 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3173 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

3174 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3175 : 00000000000000000000000000000000; -- nop

3176 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s21drj

3177 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3178 : 00000000000000000000000000000000; -- nop

3179 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s21dr_end

3180 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3181 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

3182 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3183 : 00001000000000000000110010000001; -- 	j p2s21dr_end  # Skip check jump piece since space is empty for move

3184 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3185 : 00000000000000000000000000000000; -- nop

3186 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21dr_n1

3187 : 00001000000000000000110001110111; -- 	j p2s21s18_1or3

3188 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3189 : 00000000000000000000000000000000; -- nop

3190 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s21dr_end

3191 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

3192 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3193 : 00000000000000000000000000000000; -- nop

3194 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s21dr_end

3195 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3196 : 00000000000000000000000000000000; -- nop

3197 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21dr_end

3198 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

3199 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

3200 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3201 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

3202 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3203 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3204 : 00000000000000000000000000000000; -- nop

3205 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s22n2

3206 : 00001000000000000000110010001010; -- 	j p2s22_2or4

3207 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3208 : 00000000000000000000000000000000; -- nop

3209 : 00010010010100000000000001110110; -- 	bne $t1, $t0, p2s23

3210 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3211 : 00000000000000000000000000000000; -- nop

3212 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s22ul_end

3213 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

3214 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3215 : 00000000000000000000000000000000; -- nop

3216 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s22ulj

3217 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3218 : 00000000000000000000000000000000; -- nop

3219 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s22ul_end

3220 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3221 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

3222 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3223 : 00001000000000000000110010101001; -- 	j p2s22ul_end  # Skip check jump piece since space is empty for move

3224 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3225 : 00000000000000000000000000000000; -- nop

3226 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22ul_n1

3227 : 00001000000000000000110010011111; -- 	j p2s22s26_1or3

3228 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3229 : 00000000000000000000000000000000; -- nop

3230 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s22ul_end

3231 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

3232 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3233 : 00000000000000000000000000000000; -- nop

3234 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s22ul_end

3235 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3236 : 00000000000000000000000000000000; -- nop

3237 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22ul_end

3238 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3239 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

3240 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3241 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3242 : 00000000000000000000000000000000; -- nop

3243 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s22ur_end

3244 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

3245 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3246 : 00000000000000000000000000000000; -- nop

3247 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s22urj

3248 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3249 : 00000000000000000000000000000000; -- nop

3250 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s22ur_end

3251 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3252 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

3253 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3254 : 00001000000000000000110011001000; -- 	j p2s22ur_end  # Skip check jump piece since space is empty for move

3255 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3256 : 00000000000000000000000000000000; -- nop

3257 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22ur_n1

3258 : 00001000000000000000110010111110; -- 	j p2s22s27_1or3

3259 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3260 : 00000000000000000000000000000000; -- nop

3261 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s22ur_end

3262 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

3263 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3264 : 00000000000000000000000000000000; -- nop

3265 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s22ur_end

3266 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3267 : 00000000000000000000000000000000; -- nop

3268 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22ur_end

3269 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3270 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

3271 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3272 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

3273 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3274 : 00000000000000000000000000000000; -- nop

3275 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s22dlj

3276 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3277 : 00000000000000000000000000000000; -- nop

3278 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s22dl_end

3279 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3280 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

3281 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3282 : 00001000000000000000110011100100; -- 	j p2s22dl_end  # Skip check jump piece since space is empty for move

3283 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3284 : 00000000000000000000000000000000; -- nop

3285 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22dl_n1

3286 : 00001000000000000000110011011010; -- 	j p2s22s18_1or3

3287 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3288 : 00000000000000000000000000000000; -- nop

3289 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s22dl_end

3290 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

3291 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3292 : 00000000000000000000000000000000; -- nop

3293 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s22dl_end

3294 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3295 : 00000000000000000000000000000000; -- nop

3296 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22dl_end

3297 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3298 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

3299 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3300 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

3301 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3302 : 00000000000000000000000000000000; -- nop

3303 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s22drj

3304 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3305 : 00000000000000000000000000000000; -- nop

3306 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s22dr_end

3307 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3308 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

3309 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3310 : 00001000000000000000110100000000; -- 	j p2s22dr_end  # Skip check jump piece since space is empty for move

3311 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3312 : 00000000000000000000000000000000; -- nop

3313 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22dr_n1

3314 : 00001000000000000000110011110110; -- 	j p2s22s19_1or3

3315 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3316 : 00000000000000000000000000000000; -- nop

3317 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s22dr_end

3318 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

3319 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3320 : 00000000000000000000000000000000; -- nop

3321 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s22dr_end

3322 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3323 : 00000000000000000000000000000000; -- nop

3324 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22dr_end

3325 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

3326 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

3327 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3328 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

3329 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3330 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3331 : 00000000000000000000000000000000; -- nop

3332 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s23n2

3333 : 00001000000000000000110100001001; -- 	j p2s23_2or4

3334 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3335 : 00000000000000000000000000000000; -- nop

3336 : 00010010010100000000000000111011; -- 	bne $t1, $t0, p2s24

3337 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3338 : 00000000000000000000000000000000; -- nop

3339 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s23ul_end

3340 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

3341 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3342 : 00000000000000000000000000000000; -- nop

3343 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s23ulj

3344 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3345 : 00000000000000000000000000000000; -- nop

3346 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s23ul_end

3347 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

3348 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

3349 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3350 : 00001000000000000000110100101000; -- 	j p2s23ul_end  # Skip check jump piece since space is empty for move

3351 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3352 : 00000000000000000000000000000000; -- nop

3353 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s23ul_n1

3354 : 00001000000000000000110100011110; -- 	j p2s23s27_1or3

3355 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3356 : 00000000000000000000000000000000; -- nop

3357 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s23ul_end

3358 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

3359 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3360 : 00000000000000000000000000000000; -- nop

3361 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s23ul_end

3362 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3363 : 00000000000000000000000000000000; -- nop

3364 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s23ul_end

3365 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

3366 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

3367 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3368 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

3369 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3370 : 00000000000000000000000000000000; -- nop

3371 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s23dlj

3372 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3373 : 00000000000000000000000000000000; -- nop

3374 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s23dl_end

3375 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

3376 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

3377 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3378 : 00001000000000000000110101000100; -- 	j p2s23dl_end  # Skip check jump piece since space is empty for move

3379 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3380 : 00000000000000000000000000000000; -- nop

3381 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s23dl_n1

3382 : 00001000000000000000110100111010; -- 	j p2s23s19_1or3

3383 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3384 : 00000000000000000000000000000000; -- nop

3385 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s23dl_end

3386 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

3387 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3388 : 00000000000000000000000000000000; -- nop

3389 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s23dl_end

3390 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3391 : 00000000000000000000000000000000; -- nop

3392 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s23dl_end

3393 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

3394 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

3395 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3396 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

3397 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3398 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3399 : 00000000000000000000000000000000; -- nop

3400 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s24n2

3401 : 00001000000000000000110101001101; -- 	j p2s24_2or4

3402 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3403 : 00000000000000000000000000000000; -- nop

3404 : 00010010010100000000000000101010; -- 	bne $t1, $t0, p2s25

3405 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3406 : 00000000000000000000000000000000; -- nop

3407 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s24ur_end

3408 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

3409 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3410 : 00000000000000000000000000000000; -- nop

3411 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s24urj

3412 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3413 : 00000000000000000000000000000000; -- nop

3414 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s24ur_end

3415 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

3416 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

3417 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3418 : 00001000000000000000110101011011; -- 	j p2s24ur_end  # Skip check jump piece since space is empty for move

3419 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

3420 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3421 : 00000000000000000000000000000000; -- nop

3422 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s24drj

3423 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3424 : 00000000000000000000000000000000; -- nop

3425 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s24dr_end

3426 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

3427 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

3428 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3429 : 00001000000000000000110101110111; -- 	j p2s24dr_end  # Skip check jump piece since space is empty for move

3430 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3431 : 00000000000000000000000000000000; -- nop

3432 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s24dr_n1

3433 : 00001000000000000000110101101101; -- 	j p2s24s20_1or3

3434 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3435 : 00000000000000000000000000000000; -- nop

3436 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s24dr_end

3437 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

3438 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3439 : 00000000000000000000000000000000; -- nop

3440 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s24dr_end

3441 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3442 : 00000000000000000000000000000000; -- nop

3443 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s24dr_end

3444 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

3445 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

3446 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3447 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

3448 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3449 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3450 : 00000000000000000000000000000000; -- nop

3451 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s25n2

3452 : 00001000000000000000110110000000; -- 	j p2s25_2or4

3453 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3454 : 00000000000000000000000000000000; -- nop

3455 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s26

3456 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3457 : 00000000000000000000000000000000; -- nop

3458 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s25ul_end

3459 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

3460 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3461 : 00000000000000000000000000000000; -- nop

3462 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s25ulj

3463 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3464 : 00000000000000000000000000000000; -- nop

3465 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s25ul_end

3466 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

3467 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

3468 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3469 : 00001000000000000000110110001110; -- 	j p2s25ul_end  # Skip check jump piece since space is empty for move

3470 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3471 : 00000000000000000000000000000000; -- nop

3472 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s25ur_end

3473 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

3474 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3475 : 00000000000000000000000000000000; -- nop

3476 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s25urj

3477 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3478 : 00000000000000000000000000000000; -- nop

3479 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s25ur_end

3480 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

3481 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

3482 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3483 : 00001000000000000000110110011100; -- 	j p2s25ur_end  # Skip check jump piece since space is empty for move

3484 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

3485 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3486 : 00000000000000000000000000000000; -- nop

3487 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s25dlj

3488 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3489 : 00000000000000000000000000000000; -- nop

3490 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s25dl_end

3491 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

3492 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

3493 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3494 : 00001000000000000000110110111000; -- 	j p2s25dl_end  # Skip check jump piece since space is empty for move

3495 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3496 : 00000000000000000000000000000000; -- nop

3497 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s25dl_n1

3498 : 00001000000000000000110110101110; -- 	j p2s25s20_1or3

3499 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3500 : 00000000000000000000000000000000; -- nop

3501 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s25dl_end

3502 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

3503 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3504 : 00000000000000000000000000000000; -- nop

3505 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s25dl_end

3506 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3507 : 00000000000000000000000000000000; -- nop

3508 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s25dl_end

3509 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

3510 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

3511 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3512 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

3513 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3514 : 00000000000000000000000000000000; -- nop

3515 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s25drj

3516 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3517 : 00000000000000000000000000000000; -- nop

3518 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s25dr_end

3519 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

3520 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

3521 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3522 : 00001000000000000000110111010100; -- 	j p2s25dr_end  # Skip check jump piece since space is empty for move

3523 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3524 : 00000000000000000000000000000000; -- nop

3525 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s25dr_n1

3526 : 00001000000000000000110111001010; -- 	j p2s25s21_1or3

3527 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3528 : 00000000000000000000000000000000; -- nop

3529 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s25dr_end

3530 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

3531 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3532 : 00000000000000000000000000000000; -- nop

3533 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s25dr_end

3534 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3535 : 00000000000000000000000000000000; -- nop

3536 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s25dr_end

3537 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

3538 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

3539 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3540 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

3541 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3542 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3543 : 00000000000000000000000000000000; -- nop

3544 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s26n2

3545 : 00001000000000000000110111011101; -- 	j p2s26_2or4

3546 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3547 : 00000000000000000000000000000000; -- nop

3548 : 00010010010100000000000001010100; -- 	bne $t1, $t0, p2s27

3549 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3550 : 00000000000000000000000000000000; -- nop

3551 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s26ul_end

3552 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

3553 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3554 : 00000000000000000000000000000000; -- nop

3555 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s26ulj

3556 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3557 : 00000000000000000000000000000000; -- nop

3558 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s26ul_end

3559 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

3560 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

3561 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3562 : 00001000000000000000110111101011; -- 	j p2s26ul_end  # Skip check jump piece since space is empty for move

3563 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3564 : 00000000000000000000000000000000; -- nop

3565 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s26ur_end

3566 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

3567 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3568 : 00000000000000000000000000000000; -- nop

3569 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s26urj

3570 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3571 : 00000000000000000000000000000000; -- nop

3572 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s26ur_end

3573 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

3574 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

3575 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3576 : 00001000000000000000110111111001; -- 	j p2s26ur_end  # Skip check jump piece since space is empty for move

3577 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

3578 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3579 : 00000000000000000000000000000000; -- nop

3580 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s26dlj

3581 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3582 : 00000000000000000000000000000000; -- nop

3583 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s26dl_end

3584 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

3585 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

3586 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3587 : 00001000000000000000111000010101; -- 	j p2s26dl_end  # Skip check jump piece since space is empty for move

3588 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3589 : 00000000000000000000000000000000; -- nop

3590 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s26dl_n1

3591 : 00001000000000000000111000001011; -- 	j p2s26s21_1or3

3592 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3593 : 00000000000000000000000000000000; -- nop

3594 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s26dl_end

3595 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

3596 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3597 : 00000000000000000000000000000000; -- nop

3598 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s26dl_end

3599 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3600 : 00000000000000000000000000000000; -- nop

3601 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s26dl_end

3602 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

3603 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

3604 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3605 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

3606 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3607 : 00000000000000000000000000000000; -- nop

3608 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s26drj

3609 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3610 : 00000000000000000000000000000000; -- nop

3611 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s26dr_end

3612 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

3613 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

3614 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3615 : 00001000000000000000111000110001; -- 	j p2s26dr_end  # Skip check jump piece since space is empty for move

3616 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3617 : 00000000000000000000000000000000; -- nop

3618 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s26dr_n1

3619 : 00001000000000000000111000100111; -- 	j p2s26s22_1or3

3620 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3621 : 00000000000000000000000000000000; -- nop

3622 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s26dr_end

3623 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

3624 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3625 : 00000000000000000000000000000000; -- nop

3626 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s26dr_end

3627 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3628 : 00000000000000000000000000000000; -- nop

3629 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s26dr_end

3630 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

3631 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

3632 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3633 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

3634 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3635 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3636 : 00000000000000000000000000000000; -- nop

3637 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s27n2

3638 : 00001000000000000000111000111010; -- 	j p2s27_2or4

3639 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3640 : 00000000000000000000000000000000; -- nop

3641 : 00010010010100000000000001000011; -- 	bne $t1, $t0, p2s28

3642 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3643 : 00000000000000000000000000000000; -- nop

3644 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s27ul_end

3645 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

3646 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3647 : 00000000000000000000000000000000; -- nop

3648 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s27ulj

3649 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3650 : 00000000000000000000000000000000; -- nop

3651 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27ul_end

3652 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

3653 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

3654 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3655 : 00001000000000000000111001001000; -- 	j p2s27ul_end  # Skip check jump piece since space is empty for move

3656 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3657 : 00000000000000000000000000000000; -- nop

3658 : 00010010010100000000000000001011; -- 	bne $t1, $t0, p2s27ur_end

3659 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

3660 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3661 : 00000000000000000000000000000000; -- nop

3662 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s27urj

3663 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3664 : 00000000000000000000000000000000; -- nop

3665 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27ur_end

3666 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

3667 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

3668 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3669 : 00001000000000000000111001010110; -- 	j p2s27ur_end  # Skip check jump piece since space is empty for move

3670 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

3671 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3672 : 00000000000000000000000000000000; -- nop

3673 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s27dlj

3674 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3675 : 00000000000000000000000000000000; -- nop

3676 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s27dl_end

3677 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

3678 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

3679 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3680 : 00001000000000000000111001110010; -- 	j p2s27dl_end  # Skip check jump piece since space is empty for move

3681 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3682 : 00000000000000000000000000000000; -- nop

3683 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s27dl_n1

3684 : 00001000000000000000111001101000; -- 	j p2s27s22_1or3

3685 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3686 : 00000000000000000000000000000000; -- nop

3687 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s27dl_end

3688 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

3689 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3690 : 00000000000000000000000000000000; -- nop

3691 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s27dl_end

3692 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3693 : 00000000000000000000000000000000; -- nop

3694 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s27dl_end

3695 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

3696 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

3697 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3698 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

3699 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3700 : 00000000000000000000000000000000; -- nop

3701 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s27drj

3702 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3703 : 00000000000000000000000000000000; -- nop

3704 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27dr_end

3705 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

3706 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

3707 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3708 : 00001000000000000000111001111101; -- 	j p2s27dr_end  # Skip check jump piece since space is empty for move

3709 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

3710 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3711 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3712 : 00000000000000000000000000000000; -- nop

3713 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s28n2

3714 : 00001000000000000000111010000110; -- 	j p2s28_2or4

3715 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3716 : 00000000000000000000000000000000; -- nop

3717 : 00010010010100000000000000100111; -- 	bne $t1, $t0, p2s29

3718 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

3719 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3720 : 00000000000000000000000000000000; -- nop

3721 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s28dlj

3722 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

3723 : 00000000000000000000000000000000; -- nop

3724 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s28dl_end

3725 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

3726 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

3727 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3728 : 00001000000000000000111010010001; -- 	j p2s28dl_end  # Skip check jump piece since space is empty for move

3729 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

3730 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3731 : 00000000000000000000000000000000; -- nop

3732 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s28drj

3733 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3734 : 00000000000000000000000000000000; -- nop

3735 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s28dr_end

3736 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

3737 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

3738 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3739 : 00001000000000000000111010101101; -- 	j p2s28dr_end  # Skip check jump piece since space is empty for move

3740 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3741 : 00000000000000000000000000000000; -- nop

3742 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s28dr_n1

3743 : 00001000000000000000111010100011; -- 	j p2s28s25_1or3

3744 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3745 : 00000000000000000000000000000000; -- nop

3746 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s28dr_end

3747 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

3748 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3749 : 00000000000000000000000000000000; -- nop

3750 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s28dr_end

3751 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3752 : 00000000000000000000000000000000; -- nop

3753 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s28dr_end

3754 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

3755 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

3756 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3757 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

3758 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3759 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3760 : 00000000000000000000000000000000; -- nop

3761 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s29n2

3762 : 00001000000000000000111010110110; -- 	j p2s29_2or4

3763 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3764 : 00000000000000000000000000000000; -- nop

3765 : 00010010010100000000000000111000; -- 	bne $t1, $t0, p2s30

3766 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

3767 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3768 : 00000000000000000000000000000000; -- nop

3769 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s29dlj

3770 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3771 : 00000000000000000000000000000000; -- nop

3772 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s29dl_end

3773 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

3774 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

3775 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3776 : 00001000000000000000111011010010; -- 	j p2s29dl_end  # Skip check jump piece since space is empty for move

3777 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3778 : 00000000000000000000000000000000; -- nop

3779 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s29dl_n1

3780 : 00001000000000000000111011001000; -- 	j p2s29s25_1or3

3781 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3782 : 00000000000000000000000000000000; -- nop

3783 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s29dl_end

3784 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

3785 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3786 : 00000000000000000000000000000000; -- nop

3787 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s29dl_end

3788 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3789 : 00000000000000000000000000000000; -- nop

3790 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s29dl_end

3791 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

3792 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

3793 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3794 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

3795 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3796 : 00000000000000000000000000000000; -- nop

3797 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s29drj

3798 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3799 : 00000000000000000000000000000000; -- nop

3800 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s29dr_end

3801 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

3802 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

3803 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3804 : 00001000000000000000111011101110; -- 	j p2s29dr_end  # Skip check jump piece since space is empty for move

3805 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3806 : 00000000000000000000000000000000; -- nop

3807 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s29dr_n1

3808 : 00001000000000000000111011100100; -- 	j p2s29s26_1or3

3809 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3810 : 00000000000000000000000000000000; -- nop

3811 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s29dr_end

3812 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

3813 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3814 : 00000000000000000000000000000000; -- nop

3815 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s29dr_end

3816 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3817 : 00000000000000000000000000000000; -- nop

3818 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s29dr_end

3819 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

3820 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

3821 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3822 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

3823 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3824 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3825 : 00000000000000000000000000000000; -- nop

3826 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s30n2

3827 : 00001000000000000000111011110111; -- 	j p2s30_2or4

3828 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3829 : 00000000000000000000000000000000; -- nop

3830 : 00010010010100000000000000111000; -- 	bne $t1, $t0, p2s31

3831 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

3832 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3833 : 00000000000000000000000000000000; -- nop

3834 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s30dlj

3835 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3836 : 00000000000000000000000000000000; -- nop

3837 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s30dl_end

3838 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

3839 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

3840 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3841 : 00001000000000000000111100010011; -- 	j p2s30dl_end  # Skip check jump piece since space is empty for move

3842 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3843 : 00000000000000000000000000000000; -- nop

3844 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s30dl_n1

3845 : 00001000000000000000111100001001; -- 	j p2s30s26_1or3

3846 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3847 : 00000000000000000000000000000000; -- nop

3848 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s30dl_end

3849 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

3850 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3851 : 00000000000000000000000000000000; -- nop

3852 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s30dl_end

3853 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3854 : 00000000000000000000000000000000; -- nop

3855 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s30dl_end

3856 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

3857 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

3858 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3859 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

3860 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3861 : 00000000000000000000000000000000; -- nop

3862 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s30drj

3863 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3864 : 00000000000000000000000000000000; -- nop

3865 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s30dr_end

3866 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

3867 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

3868 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3869 : 00001000000000000000111100101111; -- 	j p2s30dr_end  # Skip check jump piece since space is empty for move

3870 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3871 : 00000000000000000000000000000000; -- nop

3872 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s30dr_n1

3873 : 00001000000000000000111100100101; -- 	j p2s30s27_1or3

3874 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3875 : 00000000000000000000000000000000; -- nop

3876 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s30dr_end

3877 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

3878 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3879 : 00000000000000000000000000000000; -- nop

3880 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s30dr_end

3881 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

3882 : 00000000000000000000000000000000; -- nop

3883 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s30dr_end

3884 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

3885 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

3886 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3887 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

3888 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

3889 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

3890 : 00000000000000000000000000000000; -- nop

3891 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s31n2

3892 : 00001000000000000000111100111000; -- 	j p2s31_2or4

3893 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

3894 : 00000000000000000000000000000000; -- nop

3895 : 00010010010100000000000000011100; -- 	bne $t1, $t0, p2s32

3896 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

3897 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

3898 : 00000000000000000000000000000000; -- nop

3899 : 00010010100000000000000000000111; -- 	bne $t2, $zero, p2s31dlj

3900 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

3901 : 00000000000000000000000000000000; -- nop

3902 : 00110110010100000000000000010101; -- 	blt $t9, $t0, p2s31dl_end

3903 : 00101000100000000000000000011111; -- 	addi $v0, $zero, 31

3904 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

3905 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3906 : 00001000000000000000111101010100; -- 	j p2s31dl_end  # Skip check jump piece since space is empty for move

3907 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

3908 : 00000000000000000000000000000000; -- nop

3909 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s31dl_n1

3910 : 00001000000000000000111101001010; -- 	j p2s31s27_1or3

3911 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

3912 : 00000000000000000000000000000000; -- nop

3913 : 00010010100100000000000000001010; -- 	bne $t2, $t0, p2s31dl_end

3914 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

3915 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

3916 : 00000000000000000000000000000000; -- nop

3917 : 00010010110000000000000000000110; -- 	bne $t3, $zero, p2s31dl_end

3918 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

3919 : 00000000000000000000000000000000; -- nop

3920 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s31dl_end

3921 : 00101000100000000000000000011111; -- 	addi $v0, $zero, 31

3922 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

3923 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

3924 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

3925 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

3926 : 00100111110000000000000000000000; -- 	jr $ra					# Return

[3927..4095] : 00000000000000000000000000000000;
END;
