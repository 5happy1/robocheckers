DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00000000000000000000000000000000; -- nop

0001 : 00000000000000000000000000000000; -- nop

0002 : 00000000000000000000000000000000; -- nop

0003 : 00000000000000000000000000000000; -- nop

0004 : 00000000000000000000000000000000; -- nop

0005 : 00000000000000000000000000000000; -- nop

0006 : 00000000000000000000000000000000; -- nop

0007 : 00101111000000000000000001100000; -- 	addi $28, $zero, 96

0008 : 00001000000000000000000000000111; -- 	j main

0009 : 00101111000000000000000011100000; -- 	addi $28, $zero, 224

0010 : 00101111010000000000111111111111; -- 	addi $sp, $zero, 4095	# Move stack pointer to end of stack (for our FPGA processor)

0011 : 00101100100000000000000000000001; -- 	addi $s2, $zero, 1		# Stack word size (4 for MARS, 1 for our processor)

0012 : 00101100110000000000000000000000; -- 	addi $s3, $zero, 0		# Previously seen op code ready flag starts at 0

0013 : 00101100011110100000000000000000; -- 	addi $s1, $sp, 0		# Save board start location to $s1

0014 : 00101111011110111111111111100000; -- 	addi $sp, $sp, -32		# Reserve 32 words on stack for board

0015 : 00011000000000000000000000010001; -- 	jal reset_game			# Reset game	

0016 : 00001000000000000000000000110000; -- 	j game_loop				# Jump to game loop after setting up

0017 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0018 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0019 : 00011000000000000000000000011000; -- 	jal	init_board

0020 : 00101100000000000000000000000001; -- 	addi $s0, $0, 1			# Put player 1 in player register

0021 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0022 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0023 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0024 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0025 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0026 : 00101010001000100000000000000000; -- 	addi $t0, $s1, 0		# Board position in stack

0027 : 00101010010000000000000000000001; -- 	addi $t1, $zero, 1		# Checker type = player 1

0028 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0029 : 00101010110000000000000000001100; -- 	addi $t3, $zero, 12		# Number of checkers = 12

0030 : 00011000000000000000000000101000; -- 	jal init_loop			# Loop to place checkers

0031 : 00101010010000000000000000000000; -- 	addi $t1, $zero, 0		# Checker type = blank

0032 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0033 : 00101010110000000000000000001000; -- 	addi $t3, $zero, 8		# Number of checkers = 8

0034 : 00011000000000000000000000101000; -- 	jal init_loop			# Loop to place checkers

0035 : 00101010010000000000000000000010; -- 	addi $t1, $zero, 2		# Checker type = player 2

0036 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0037 : 00101010110000000000000000001100; -- 	addi $t3, $zero, 12		# Number of checkers = 12

0038 : 00011000000000000000000000101000; -- 	jal init_loop			# Loop to place checkers

0039 : 00001000000000000000000000101101; -- 	j finish_init			# Board initialized, jump to end of function

0040 : 00111010010100000000000000000000; -- 	sw $t1, 0($t0)			# [$t0+0] = $t1 (save checker in dmem board)

0041 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0042 : 00101010100101000000000000000001; -- 	addi $t2, $t2, 1		# Increment counter

0043 : 00110010100101111111111111111100; -- 	blt $t2, $t3, init_loop	# Keep looping while counter < num checkers

0044 : 00100111110000000000000000000000; -- 	jr $ra					# Go back for next checker type

0045 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0046 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0047 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0048 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for anding

0049 : 00000010001101101000000000001000; -- 	and $t0, $27, $t0		# $t0 = 1 iff least significant bit in $27 is 1

0050 : 00010100110100000000000000000001; -- 	bne $s3, $t0, new_data	# Branch if flag set for new op code

0051 : 00001000000000000000000000110000; -- 	j game_loop				# Loop again if no new data found

0052 : 00101010011101000000000000000000; -- 	addi $t1, $26, 0		# $t1 = $26 - data that accompanies op code

0053 : 00101100110100000000000000000000; -- 	addi $s3, $t0, 0		# Set $s3 to previously seen op code ready flag

0054 : 00000010001101100000000010010100; -- 	sra $t0, $27, 1			# $t0 = 4-bit op code

0055 : 00010010000000000000000000100100; -- 	bne $t0, $zero, not_move# Branch if op code != 0, i.e. not a move

0056 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = board position in memory

0057 : 00101010100000000000000000011111; -- 	addi $t2, $zero, 31		# $t2 = 31 = 11111, "and" with data to get space

0058 : 00000001100100101010000000001000; -- 	and $a2, $t1, $t2		# $a2 = space_to

0059 : 00000010010100100000001010010100; -- 	sra $t1, $t1, 5			# Shift data right to get space_from

0060 : 00000001010100101010000000001000; -- 	and $a1, $t1, $t2		# $a1 = space_from

0061 : 00000010010100100000001010010100; -- 	sra $t1, $t1, 5			# Shift data right to get space_jumped

0062 : 00000001110100101010000000001000; -- 	and $a3, $t1, $t2		# $a3 = space_jumped

0063 : 00011000000000000000000001011111; -- 	jal make_move			# Update board state to reflect new move

0064 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = board position in memory

0065 : 00011000000000000000000010000101; -- 	jal check_win			# Check if one of the players has won

0066 : 00010000100000000000000000011010; -- 	bne $v0, $zero, win		# If check_win result is not 0, someone won!

0067 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for checking player

0068 : 00010100000100000000000000000010; -- 	bne $s0, $t0, to_p1		# If $s0 != 1, branch because current player is 2

0069 : 00101100000000000000000000000010; -- 	addi $s0, $zero, 2		# Change to player 2

0070 : 00001000000000000000000001001000; -- 	j done_changing_player

0071 : 00101100000000000000000000000001; -- 	addi $s0, $zero, 1		# Change to player 1

0072 : 00101111000000000000000000000000; -- 	addi $28, $zero, 0		# $28 = 0

0073 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8		# $t0 = space 8 memory location

0074 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker

0075 : 00000111001110001001000000000000; -- 	add $28, $28, $t1		# $28 += $t1

0076 : 00000111001110000000001010010000; -- 	sll $28, $28, 5			# Shift $28 left 5 bits to prepare for next piece of data

0077 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0078 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12		# $t0 = space 12 memory location

0079 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker

0080 : 00000111001110001001000000000000; -- 	add $28, $28, $t1		# $28 += $t1

0081 : 00000111001110000000001010010000; -- 	sll $28, $28, 5			# Shift $28 left 5 bits to prepare for next piece of data

0082 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0083 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17		# $t0 = space 17 memory location

0084 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker

0085 : 00000111001110001001000000000000; -- 	add $28, $28, $t1		# $28 += $t1

0086 : 00000111001110000000001010010000; -- 	sll $28, $28, 5			# Shift $28 left 5 bits to prepare for next piece of data

0087 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0088 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21		# $t0 = space 21 memory location

0089 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker

0090 : 00000111001110001001000000000000; -- 	add $28, $28, $t1		# $28 += $t1

0091 : 00000111001110000000001010010000; -- 	sll $28, $28, 5			# Shift $28 left 5 bits to prepare for next piece of data

0092 : 00001000000000000000000000110000; -- 	j game_loop

0093 : 00101111000001000000000000000000; -- 	addi $28, $v0, 0

0094 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0095 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0096 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0097 : 00000010010010000101000000000100; -- 	sub $t1, $a0, $a1		# $t1 = location of space_from in memory

0098 : 00000010100010000110000000000100; -- 	sub $t2, $a0, $a2		# $t2 = location of space_to in memory

0099 : 00000010110010000111000000000100; -- 	sub $t3, $a0, $a3		# $t3 = location of space_jumped in memory

0100 : 01000011000100100000000000000000; -- 	lw $t4, 0($t1)			# $t4 = checker at space_from

0101 : 01000011010101000000000000000000; -- 	lw $t5, 0($t2)			# $t5 = checker at space_to

0102 : 00111011000101000000000000000000; -- 	sw $t4, 0($t2)			# [$t2] = checker formerly at space_to now at space_from

0103 : 00111011010100100000000000000000; -- 	sw $t5, 0($t1)			# [$t1] = checker formerly at space_from now at space_to

0104 : 00010001110000000000000000000001; -- 	bne $a3, $zero, jumped	# Branch if jumped

0105 : 00001000000000000000000001101011; -- 	j after_jump			# Skip jumping code if no jump

0106 : 00111000000101100000000000000000; -- 	sw $zero, 0($t3)		# [$t3] = 0 (blank space) in memory

0107 : 00101001010011000000000000000000; -- 	addi $a1, $a2, 0		# $a1 = $a2, arg1 has space_to

0108 : 00011000000000000000000001110000; -- 	jal king_me				# Check for kings

0109 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0110 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0111 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0112 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0113 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0114 : 00000010000010000101000000000100; -- 	sub $t0, $a0, $a1		# $t0 = location of space in memory

0115 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker at space in memory

0116 : 00101010100000000000000000000001; -- 	addi $t2, $zero, 1		# $t2 = 1 for comparison

0117 : 00010010010101000000000000000101; -- 	bne $t1, $t2, k_not_1	# Branch if checker != 1

0118 : 00101010100000000000000000011100; -- 	addi $t2, $zero, 28		# $t2 = 28 for comparison

0119 : 00110001010101000000000000001010; -- 	blt $a1, $t2, ret_king	# Branch if checker not in kingable position

0120 : 00101010110000000000000000000011; -- 	addi $t3, $zero, 3		# $t3 = 3 (king value for player 1)

0121 : 00111010110100000000000000000000; -- 	sw $t3, 0($t0)			# Store new king in memory

0122 : 00001000000000000000000010000010; -- 	j ret_king				# Return because done

0123 : 00101010100000000000000000000010; -- 	addi $t2, $zero, 2		# $t2 = 2 for comparison

0124 : 00010010010101000000000000000101; -- 	bne $t1, $t2, ret_king	# Branch if checker != 2

0125 : 00101010100000000000000000000011; -- 	addi $t2, $zero, 3		# $t2 = 3 for comparison

0126 : 00110010100010100000000000000011; -- 	blt $t2, $a1, ret_king	# Branch if checker not in kingable position

0127 : 00101010110000000000000000000100; -- 	addi $t3, $zero, 4		# $t3 = 4 (king value for player 2)

0128 : 00111010110100000000000000000000; -- 	sw $t3, 0($t0)			# Store new king in memory

0129 : 00001000000000000000000010000010; -- 	j ret_king				# Return because done

0130 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0131 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0132 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0133 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0134 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0135 : 00101010000010000000000000000000; -- 	addi $t0, $a0, 0		# Board position in stack

0136 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0137 : 00101010110000000000000000100000; -- 	addi $t3, $zero, 32		# Board length = 32

0138 : 00101011000000000000000000000000; -- 	addi $t4, $zero, 0		# Player 1 checker counter = 0

0139 : 00101011010000000000000000000000; -- 	addi $t5, $zero, 0		# Player 2 checker counter = 0

0140 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = [$t0+0] (load checker from dmem board)

0141 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0142 : 00101010100101000000000000000001; -- 	addi $t2, $t2, 1		# Increment counter

0143 : 00010010010000000000000000000001; -- 	bne $t1, $zero, not_0	# Branch if checker is not 0, continue if it is

0144 : 00001000000000000000000010011110; -- 	j continue

0145 : 00101011100000000000000000000001; -- 	addi $t6, $zero, 1		# Temporary variable for comparison

0146 : 00010010010111000000000000000010; -- 	bne $t1, $t6, not_1		# Branch if checker is not 1, continue if it is

0147 : 00101011000110000000000000000001; -- 	addi $t4, $t4, 1		# Increment player 1 counter

0148 : 00001000000000000000000010011110; -- 	j continue

0149 : 00101011100000000000000000000010; -- 	addi $t6, $zero, 2		# Temporary variable for comparison

0150 : 00010010010111000000000000000010; -- 	bne $t1, $t6, not_2		# Branch if checker is not 2, continue if it is

0151 : 00101011010110100000000000000001; -- 	addi $t5, $t5, 1		# Increment player 2 counter

0152 : 00001000000000000000000010011110; -- 	j continue

0153 : 00101011100000000000000000000011; -- 	addi $t6, $zero, 3		# Temporary variable for comparison

0154 : 00010010010111000000000000000010; -- 	bne $t1, $t6, not_3		# Branch if checker is not 3, continue if it is

0155 : 00101011000110000000000000000001; -- 	addi $t4, $t4, 1		# Increment player 1 counter

0156 : 00001000000000000000000010011110; -- 	j continue

0157 : 00101011010110100000000000000001; -- 	addi $t5, $t5, 1		# Increment player 2 counter

0158 : 00110010100101111111111111101101; -- 	blt $t2, $t3, b_loop	# Keep looping while counter < num checkers

0159 : 00010011000000000000000000000010; -- 	bne $t4, $zero, p1_in	# Branch if player 1 has checkers

0160 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2		# Player 1 is out of checkers, player 2 wins!

0161 : 00001000000000000000000010100110; -- 	j return_check_win

0162 : 00010011010000000000000000000010; -- 	bne $t5, $zero, p2_in	# Branch if player 2 has checkers

0163 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1		# Player 2 is out of checkers, player 1 wins!

0164 : 00001000000000000000000010100110; -- 	j return_check_win

0165 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0		# Neither player has won yet

0166 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0167 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0168 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0169 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0170 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0171 : 00011000000000000000000010111001; -- 	jal space_to_7sd		# space_from already in $a0

0172 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0173 : 00111000101110100000000000000000; -- 	sw $v0, 0($sp)			# [$sp+0] = $v0 (save space_from)

0174 : 00101001000010100000000000000000; -- 	addi $a0, $a1, 0		# $a0 = $a1

0175 : 00011000000000000000000010111001; -- 	jal space_to_7sd

0176 : 00101010000001000000000000000000; -- 	addi $t0, $v0, 0		# $t0 = $v0

0177 : 01000000101110100000000000000000; -- 	lw $v0, 0($sp)			# $v0 = [$sp+0] (space_from from memory)

0178 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0179 : 00000000100001000000010100010000; -- 	sll $v0, $v0, 10		# Shift $v0 left 10 bits to prepare for space_to

0180 : 00000000100001001000000000000000; -- 	add $v0, $v0, $t0		# $v0 += $t0 (now $v0 has all moves)

0181 : 00000000100001000000001010010000; -- 	sll $v0, $v0, 5			# Shift $v0 left 5 bits to account for opcode+flag

0182 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0183 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0184 : 00100111110000000000000000000000; -- 	jr $ra

0185 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0186 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0187 : 00000010000010000000000100010100; -- 	sra $t0, $a0, 2			# $t0 = floor($a0 / 4)

0188 : 00101010000100000000000000000001; -- 	addi $t0, $t0, 1		# $t0 += 1 (now $t0 == row of space_from)

0189 : 00101011000000000000000000000011; -- 	addi $t4, $zero, 3		# $t4 = 3 for anding

0190 : 00000010010010001100000000001000; -- 	and $t1, $a0, $t4		# $t1 = $a0 & $t4 = $a0 % 4

0191 : 00000010010100101001000000000000; -- 	add $t1, $t1, $t1		# $t1 = $t1 + $t1 = $t1 * 2

0192 : 00101010010100100000000000000010; -- 	addi $t1, $t1, 2		# $t1 += 2

0193 : 00101011000000000000000000000001; -- 	addi $t4, $zero, 1		# $t4 = 1 for anding

0194 : 00000011000100001100000000001000; -- 	and $t4, $t0, $t4		# $t4 = $t0 & $t4 = $t0 % 2

0195 : 00000010010100101100000000000100; -- 	sub $t1, $t1, $t4		# $t1 -= $t4 (now $t1 == column of space_from)

0196 : 00101010010100100000000000001001; -- 	addi $t1, $t1, 9		# $t1 += 9 (adding to column to get letters on 7sd)

0197 : 00101000100100000000000000000000; -- 	addi $v0, $t0, 0		# $v0 = $t0 (row)

0198 : 00000000100001000000001010010000; -- 	sll $v0, $v0, 5			# Shift $v0 left 5 bits to prepare for column

0199 : 00000000100001001001000000000000; -- 	add $v0, $v0, $t1		# $v0 += $t1 (column)

0200 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0201 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0202 : 00100111110000000000000000000000; -- 	jr $ra

0203 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0204 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0205 : 00101110010000000000000000000000; -- 	addi $t9, $zero, 0		# $t9 = 0 initializes best move score to 0

0206 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for checking player

0207 : 00010100000100000000000000000011; -- 	bne $s0, $t0, find2		# If $s0 != 1, branch becaues current player is 2

0208 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

0209 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

0210 : 00001000000000000000100100101111; -- 	j return_find_move

0211 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

0212 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0213 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0214 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s0n2

0215 : 00001000000000000000000011011010; -- 	j p2s0_2or4

0216 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0217 : 00010010010100000000000000011000; -- 	bne $t1, $t0, p2s1

0218 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0219 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s0ur_end

0220 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0221 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0222 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s0urj

0223 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0224 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s0ur_end

0225 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

0226 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0227 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0228 : 00001000000000000000000011110010; -- 	j p2s0ur_end  # Skip check jump piece since space is empty for move

0229 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0230 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s0ur_n1

0231 : 00001000000000000000000011101010; -- 	j p2s0s4_1or3

0232 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0233 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s0ur_end

0234 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0235 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0236 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s0ur_end

0237 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0238 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s0ur_end

0239 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

0240 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0241 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0242 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0243 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0244 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0245 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s1n2

0246 : 00001000000000000000000011111001; -- 	j p2s1_2or4

0247 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0248 : 00010010010100000000000000110000; -- 	bne $t1, $t0, p2s2

0249 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0250 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s1ul_end

0251 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0252 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0253 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s1ulj

0254 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0255 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s1ul_end

0256 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0257 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0258 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0259 : 00001000000000000000000100010001; -- 	j p2s1ul_end  # Skip check jump piece since space is empty for move

0260 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0261 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s1ul_n1

0262 : 00001000000000000000000100001001; -- 	j p2s1s4_1or3

0263 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0264 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s1ul_end

0265 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0266 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0267 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s1ul_end

0268 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

0269 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s1ul_end

0270 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0271 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

0272 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0273 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0274 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s1ur_end

0275 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0276 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0277 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s1urj

0278 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0279 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s1ur_end

0280 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0281 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0282 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0283 : 00001000000000000000000100101001; -- 	j p2s1ur_end  # Skip check jump piece since space is empty for move

0284 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0285 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s1ur_n1

0286 : 00001000000000000000000100100001; -- 	j p2s1s5_1or3

0287 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0288 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s1ur_end

0289 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0290 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0291 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s1ur_end

0292 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0293 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s1ur_end

0294 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0295 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0296 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0297 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0298 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0299 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0300 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s2n2

0301 : 00001000000000000000000100110000; -- 	j p2s2_2or4

0302 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0303 : 00010010010100000000000000110000; -- 	bne $t1, $t0, p2s3

0304 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0305 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s2ul_end

0306 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0307 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0308 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s2ulj

0309 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0310 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s2ul_end

0311 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0312 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0313 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0314 : 00001000000000000000000101001000; -- 	j p2s2ul_end  # Skip check jump piece since space is empty for move

0315 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0316 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s2ul_n1

0317 : 00001000000000000000000101000000; -- 	j p2s2s5_1or3

0318 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0319 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s2ul_end

0320 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0321 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0322 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s2ul_end

0323 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0324 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s2ul_end

0325 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0326 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0327 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0328 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0329 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s2ur_end

0330 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0331 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0332 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s2urj

0333 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0334 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s2ur_end

0335 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0336 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0337 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0338 : 00001000000000000000000101100000; -- 	j p2s2ur_end  # Skip check jump piece since space is empty for move

0339 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0340 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s2ur_n1

0341 : 00001000000000000000000101011000; -- 	j p2s2s6_1or3

0342 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0343 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s2ur_end

0344 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0345 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0346 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s2ur_end

0347 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0348 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s2ur_end

0349 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0350 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

0351 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0352 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0353 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0354 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0355 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s3n2

0356 : 00001000000000000000000101100111; -- 	j p2s3_2or4

0357 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0358 : 00010010010100000000000000100011; -- 	bne $t1, $t0, p2s4

0359 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0360 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s3ul_end

0361 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0362 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0363 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s3ulj

0364 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0365 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s3ul_end

0366 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

0367 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0368 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0369 : 00001000000000000000000101111111; -- 	j p2s3ul_end  # Skip check jump piece since space is empty for move

0370 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0371 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s3ul_n1

0372 : 00001000000000000000000101110111; -- 	j p2s3s6_1or3

0373 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0374 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s3ul_end

0375 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0376 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0377 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s3ul_end

0378 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0379 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s3ul_end

0380 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

0381 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0382 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0383 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0384 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s3ur_end

0385 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

0386 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0387 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s3urj

0388 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0389 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s3ur_end

0390 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

0391 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

0392 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0393 : 00001000000000000000000110001010; -- 	j p2s3ur_end  # Skip check jump piece since space is empty for move

0394 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0395 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0396 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0397 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s4n2

0398 : 00001000000000000000000110010001; -- 	j p2s4_2or4

0399 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0400 : 00010010010100000000000000110101; -- 	bne $t1, $t0, p2s5

0401 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0402 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s4ul_end

0403 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0404 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0405 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4ulj

0406 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0407 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4ul_end

0408 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0409 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

0410 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0411 : 00001000000000000000000110011100; -- 	j p2s4ul_end  # Skip check jump piece since space is empty for move

0412 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0413 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s4ur_end

0414 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0415 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0416 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4urj

0417 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0418 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s4ur_end

0419 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0420 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0421 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0422 : 00001000000000000000000110110100; -- 	j p2s4ur_end  # Skip check jump piece since space is empty for move

0423 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0424 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s4ur_n1

0425 : 00001000000000000000000110101100; -- 	j p2s4s9_1or3

0426 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0427 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s4ur_end

0428 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0429 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0430 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s4ur_end

0431 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0432 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s4ur_end

0433 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0434 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0435 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0436 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

0437 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0438 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4dlj

0439 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0440 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4dl_end

0441 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0442 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

0443 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0444 : 00001000000000000000000110111101; -- 	j p2s4dl_end  # Skip check jump piece since space is empty for move

0445 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0446 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0447 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4drj

0448 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0449 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4dr_end

0450 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0451 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0452 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0453 : 00001000000000000000000111000110; -- 	j p2s4dr_end  # Skip check jump piece since space is empty for move

0454 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0455 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0456 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0457 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s5n2

0458 : 00001000000000000000000111001101; -- 	j p2s5_2or4

0459 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0460 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s6

0461 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0462 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s5ul_end

0463 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0464 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0465 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5ulj

0466 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0467 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s5ul_end

0468 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0469 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0470 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0471 : 00001000000000000000000111100101; -- 	j p2s5ul_end  # Skip check jump piece since space is empty for move

0472 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0473 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s5ul_n1

0474 : 00001000000000000000000111011101; -- 	j p2s5s9_1or3

0475 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0476 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s5ul_end

0477 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0478 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0479 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s5ul_end

0480 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0481 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s5ul_end

0482 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0483 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

0484 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0485 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0486 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s5ur_end

0487 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0488 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0489 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5urj

0490 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0491 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s5ur_end

0492 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0493 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0494 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0495 : 00001000000000000000000111111101; -- 	j p2s5ur_end  # Skip check jump piece since space is empty for move

0496 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0497 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s5ur_n1

0498 : 00001000000000000000000111110101; -- 	j p2s5s10_1or3

0499 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0500 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s5ur_end

0501 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0502 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0503 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s5ur_end

0504 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0505 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s5ur_end

0506 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0507 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0508 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0509 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0510 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0511 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5dlj

0512 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0513 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s5dl_end

0514 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0515 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0516 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0517 : 00001000000000000000001000000110; -- 	j p2s5dl_end  # Skip check jump piece since space is empty for move

0518 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0519 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0520 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5drj

0521 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0522 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s5dr_end

0523 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0524 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0525 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0526 : 00001000000000000000001000001111; -- 	j p2s5dr_end  # Skip check jump piece since space is empty for move

0527 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0528 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0529 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0530 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s6n2

0531 : 00001000000000000000001000010110; -- 	j p2s6_2or4

0532 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0533 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s7

0534 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0535 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s6ul_end

0536 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0537 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0538 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6ulj

0539 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0540 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s6ul_end

0541 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0542 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0543 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0544 : 00001000000000000000001000101110; -- 	j p2s6ul_end  # Skip check jump piece since space is empty for move

0545 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0546 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s6ul_n1

0547 : 00001000000000000000001000100110; -- 	j p2s6s10_1or3

0548 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0549 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s6ul_end

0550 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0551 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0552 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s6ul_end

0553 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0554 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s6ul_end

0555 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0556 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0557 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0558 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0559 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s6ur_end

0560 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0561 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0562 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6urj

0563 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0564 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s6ur_end

0565 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0566 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

0567 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0568 : 00001000000000000000001001000110; -- 	j p2s6ur_end  # Skip check jump piece since space is empty for move

0569 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0570 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s6ur_n1

0571 : 00001000000000000000001000111110; -- 	j p2s6s11_1or3

0572 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0573 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s6ur_end

0574 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

0575 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0576 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s6ur_end

0577 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

0578 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s6ur_end

0579 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0580 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

0581 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0582 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0583 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0584 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6dlj

0585 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0586 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s6dl_end

0587 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0588 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0589 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0590 : 00001000000000000000001001001111; -- 	j p2s6dl_end  # Skip check jump piece since space is empty for move

0591 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0592 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0593 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6drj

0594 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0595 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s6dr_end

0596 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0597 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

0598 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0599 : 00001000000000000000001001011000; -- 	j p2s6dr_end  # Skip check jump piece since space is empty for move

0600 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

0601 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0602 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0603 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s7n2

0604 : 00001000000000000000001001011111; -- 	j p2s7_2or4

0605 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0606 : 00010010010100000000000000100001; -- 	bne $t1, $t0, p2s8

0607 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0608 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s7ul_end

0609 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0610 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0611 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s7ulj

0612 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0613 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s7ul_end

0614 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

0615 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

0616 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0617 : 00001000000000000000001001110111; -- 	j p2s7ul_end  # Skip check jump piece since space is empty for move

0618 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0619 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s7ul_n1

0620 : 00001000000000000000001001101111; -- 	j p2s7s11_1or3

0621 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0622 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s7ul_end

0623 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0624 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0625 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s7ul_end

0626 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0627 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s7ul_end

0628 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

0629 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0630 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0631 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0632 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0633 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s7dlj

0634 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0635 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s7dl_end

0636 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

0637 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

0638 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0639 : 00001000000000000000001010000000; -- 	j p2s7dl_end  # Skip check jump piece since space is empty for move

0640 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0641 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0642 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0643 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s8n2

0644 : 00001000000000000000001010000111; -- 	j p2s8_2or4

0645 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0646 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s9

0647 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0648 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s8ur_end

0649 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0650 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0651 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s8urj

0652 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0653 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s8ur_end

0654 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0655 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

0656 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0657 : 00001000000000000000001010011111; -- 	j p2s8ur_end  # Skip check jump piece since space is empty for move

0658 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0659 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s8ur_n1

0660 : 00001000000000000000001010010111; -- 	j p2s8s12_1or3

0661 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0662 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s8ur_end

0663 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

0664 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0665 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s8ur_end

0666 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0667 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s8ur_end

0668 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0669 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

0670 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0671 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0672 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0673 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s8drj

0674 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0675 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s8dr_end

0676 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0677 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0678 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0679 : 00001000000000000000001010110101; -- 	j p2s8dr_end  # Skip check jump piece since space is empty for move

0680 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0681 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s8dr_n1

0682 : 00001000000000000000001010101101; -- 	j p2s8s4_1or3

0683 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0684 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s8dr_end

0685 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0686 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0687 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s8dr_end

0688 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0689 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s8dr_end

0690 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0691 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0692 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0693 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0694 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0695 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0696 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s9n2

0697 : 00001000000000000000001010111100; -- 	j p2s9_2or4

0698 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0699 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s10

0700 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0701 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s9ul_end

0702 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0703 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0704 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9ulj

0705 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0706 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9ul_end

0707 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0708 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

0709 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0710 : 00001000000000000000001011010100; -- 	j p2s9ul_end  # Skip check jump piece since space is empty for move

0711 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0712 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9ul_n1

0713 : 00001000000000000000001011001100; -- 	j p2s9s12_1or3

0714 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0715 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9ul_end

0716 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

0717 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0718 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9ul_end

0719 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

0720 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9ul_end

0721 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0722 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

0723 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0724 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0725 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s9ur_end

0726 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0727 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0728 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9urj

0729 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0730 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9ur_end

0731 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0732 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0733 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0734 : 00001000000000000000001011101100; -- 	j p2s9ur_end  # Skip check jump piece since space is empty for move

0735 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0736 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9ur_n1

0737 : 00001000000000000000001011100100; -- 	j p2s9s13_1or3

0738 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0739 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9ur_end

0740 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

0741 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0742 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9ur_end

0743 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0744 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9ur_end

0745 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0746 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

0747 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0748 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0749 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0750 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9dlj

0751 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0752 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9dl_end

0753 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0754 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0755 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0756 : 00001000000000000000001100000010; -- 	j p2s9dl_end  # Skip check jump piece since space is empty for move

0757 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0758 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9dl_n1

0759 : 00001000000000000000001011111010; -- 	j p2s9s4_1or3

0760 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0761 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9dl_end

0762 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

0763 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0764 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9dl_end

0765 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0766 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9dl_end

0767 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0768 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

0769 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0770 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0771 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0772 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9drj

0773 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0774 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9dr_end

0775 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0776 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0777 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0778 : 00001000000000000000001100011000; -- 	j p2s9dr_end  # Skip check jump piece since space is empty for move

0779 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0780 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9dr_n1

0781 : 00001000000000000000001100010000; -- 	j p2s9s5_1or3

0782 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0783 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9dr_end

0784 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0785 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0786 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9dr_end

0787 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0788 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9dr_end

0789 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0790 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0791 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0792 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0793 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0794 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0795 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s10n2

0796 : 00001000000000000000001100011111; -- 	j p2s10_2or4

0797 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0798 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s11

0799 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0800 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s10ul_end

0801 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0802 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0803 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10ulj

0804 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0805 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10ul_end

0806 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0807 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0808 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0809 : 00001000000000000000001100110111; -- 	j p2s10ul_end  # Skip check jump piece since space is empty for move

0810 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0811 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10ul_n1

0812 : 00001000000000000000001100101111; -- 	j p2s10s13_1or3

0813 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0814 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10ul_end

0815 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

0816 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0817 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10ul_end

0818 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0819 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10ul_end

0820 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0821 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

0822 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0823 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0824 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s10ur_end

0825 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0826 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0827 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10urj

0828 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0829 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10ur_end

0830 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0831 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0832 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0833 : 00001000000000000000001101001111; -- 	j p2s10ur_end  # Skip check jump piece since space is empty for move

0834 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0835 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10ur_n1

0836 : 00001000000000000000001101000111; -- 	j p2s10s14_1or3

0837 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0838 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10ur_end

0839 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

0840 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0841 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10ur_end

0842 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0843 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10ur_end

0844 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0845 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

0846 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0847 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0848 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0849 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10dlj

0850 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0851 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10dl_end

0852 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0853 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0854 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0855 : 00001000000000000000001101100101; -- 	j p2s10dl_end  # Skip check jump piece since space is empty for move

0856 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0857 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10dl_n1

0858 : 00001000000000000000001101011101; -- 	j p2s10s5_1or3

0859 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0860 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10dl_end

0861 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0862 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0863 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10dl_end

0864 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0865 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10dl_end

0866 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0867 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0868 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0869 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0870 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0871 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10drj

0872 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0873 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10dr_end

0874 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0875 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0876 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0877 : 00001000000000000000001101111011; -- 	j p2s10dr_end  # Skip check jump piece since space is empty for move

0878 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0879 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10dr_n1

0880 : 00001000000000000000001101110011; -- 	j p2s10s6_1or3

0881 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0882 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10dr_end

0883 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0884 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0885 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10dr_end

0886 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0887 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10dr_end

0888 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0889 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

0890 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0891 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0892 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0893 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0894 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s11n2

0895 : 00001000000000000000001110000010; -- 	j p2s11_2or4

0896 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0897 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s12

0898 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0899 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s11ul_end

0900 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0901 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0902 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11ulj

0903 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0904 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s11ul_end

0905 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0906 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0907 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0908 : 00001000000000000000001110011010; -- 	j p2s11ul_end  # Skip check jump piece since space is empty for move

0909 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0910 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s11ul_n1

0911 : 00001000000000000000001110010010; -- 	j p2s11s14_1or3

0912 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0913 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s11ul_end

0914 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

0915 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0916 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s11ul_end

0917 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0918 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s11ul_end

0919 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0920 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

0921 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0922 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0923 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s11ur_end

0924 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

0925 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0926 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11urj

0927 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0928 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s11ur_end

0929 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0930 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

0931 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0932 : 00001000000000000000001110100101; -- 	j p2s11ur_end  # Skip check jump piece since space is empty for move

0933 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0934 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0935 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11dlj

0936 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0937 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s11dl_end

0938 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0939 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0940 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0941 : 00001000000000000000001110111011; -- 	j p2s11dl_end  # Skip check jump piece since space is empty for move

0942 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0943 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s11dl_n1

0944 : 00001000000000000000001110110011; -- 	j p2s11s6_1or3

0945 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0946 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s11dl_end

0947 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0948 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0949 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s11dl_end

0950 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0951 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s11dl_end

0952 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0953 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0954 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0955 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

0956 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0957 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11drj

0958 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0959 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s11dr_end

0960 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0961 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

0962 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0963 : 00001000000000000000001111000100; -- 	j p2s11dr_end  # Skip check jump piece since space is empty for move

0964 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0965 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0966 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0967 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s12n2

0968 : 00001000000000000000001111001011; -- 	j p2s12_2or4

0969 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0970 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s13

0971 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0972 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s12ul_end

0973 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

0974 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0975 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12ulj

0976 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0977 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s12ul_end

0978 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

0979 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

0980 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0981 : 00001000000000000000001111010110; -- 	j p2s12ul_end  # Skip check jump piece since space is empty for move

0982 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0983 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s12ur_end

0984 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

0985 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0986 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12urj

0987 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0988 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s12ur_end

0989 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

0990 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

0991 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0992 : 00001000000000000000001111101110; -- 	j p2s12ur_end  # Skip check jump piece since space is empty for move

0993 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0994 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s12ur_n1

0995 : 00001000000000000000001111100110; -- 	j p2s12s17_1or3

0996 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0997 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s12ur_end

0998 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

0999 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1000 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s12ur_end

1001 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1002 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s12ur_end

1003 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1004 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1005 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1006 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

1007 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1008 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12dlj

1009 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1010 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s12dl_end

1011 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1012 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

1013 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1014 : 00001000000000000000001111110111; -- 	j p2s12dl_end  # Skip check jump piece since space is empty for move

1015 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1016 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1017 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12drj

1018 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1019 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s12dr_end

1020 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1021 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1022 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1023 : 00001000000000000000010000001101; -- 	j p2s12dr_end  # Skip check jump piece since space is empty for move

1024 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1025 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s12dr_n1

1026 : 00001000000000000000010000000101; -- 	j p2s12s9_1or3

1027 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1028 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s12dr_end

1029 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1030 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1031 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s12dr_end

1032 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1033 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s12dr_end

1034 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1035 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1036 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1037 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1038 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1039 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1040 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s13n2

1041 : 00001000000000000000010000010100; -- 	j p2s13_2or4

1042 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1043 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s14

1044 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1045 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s13ul_end

1046 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1047 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1048 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13ulj

1049 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1050 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13ul_end

1051 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1052 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1053 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1054 : 00001000000000000000010000101100; -- 	j p2s13ul_end  # Skip check jump piece since space is empty for move

1055 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1056 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13ul_n1

1057 : 00001000000000000000010000100100; -- 	j p2s13s17_1or3

1058 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1059 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13ul_end

1060 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1061 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1062 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13ul_end

1063 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1064 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13ul_end

1065 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1066 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1067 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1068 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1069 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s13ur_end

1070 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1071 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1072 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13urj

1073 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1074 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13ur_end

1075 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1076 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1077 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1078 : 00001000000000000000010001000100; -- 	j p2s13ur_end  # Skip check jump piece since space is empty for move

1079 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1080 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13ur_n1

1081 : 00001000000000000000010000111100; -- 	j p2s13s18_1or3

1082 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1083 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13ur_end

1084 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1085 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1086 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13ur_end

1087 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1088 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13ur_end

1089 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1090 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1091 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1092 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1093 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1094 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13dlj

1095 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1096 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13dl_end

1097 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1098 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1099 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1100 : 00001000000000000000010001011010; -- 	j p2s13dl_end  # Skip check jump piece since space is empty for move

1101 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1102 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13dl_n1

1103 : 00001000000000000000010001010010; -- 	j p2s13s9_1or3

1104 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1105 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13dl_end

1106 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1107 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1108 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13dl_end

1109 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1110 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13dl_end

1111 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1112 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

1113 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1114 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1115 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1116 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13drj

1117 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1118 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13dr_end

1119 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1120 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1121 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1122 : 00001000000000000000010001110000; -- 	j p2s13dr_end  # Skip check jump piece since space is empty for move

1123 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1124 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13dr_n1

1125 : 00001000000000000000010001101000; -- 	j p2s13s10_1or3

1126 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1127 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13dr_end

1128 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1129 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1130 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13dr_end

1131 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1132 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13dr_end

1133 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1134 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

1135 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1136 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1137 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1138 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1139 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s14n2

1140 : 00001000000000000000010001110111; -- 	j p2s14_2or4

1141 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1142 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s15

1143 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1144 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s14ul_end

1145 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1146 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1147 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14ulj

1148 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1149 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14ul_end

1150 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1151 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1152 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1153 : 00001000000000000000010010001111; -- 	j p2s14ul_end  # Skip check jump piece since space is empty for move

1154 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1155 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14ul_n1

1156 : 00001000000000000000010010000111; -- 	j p2s14s18_1or3

1157 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1158 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14ul_end

1159 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1160 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1161 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14ul_end

1162 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1163 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14ul_end

1164 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1165 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1166 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1167 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1168 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s14ur_end

1169 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1170 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1171 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14urj

1172 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1173 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14ur_end

1174 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1175 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1176 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1177 : 00001000000000000000010010100111; -- 	j p2s14ur_end  # Skip check jump piece since space is empty for move

1178 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1179 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14ur_n1

1180 : 00001000000000000000010010011111; -- 	j p2s14s19_1or3

1181 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1182 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14ur_end

1183 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

1184 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1185 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14ur_end

1186 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1187 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14ur_end

1188 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1189 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

1190 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1191 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1192 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1193 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14dlj

1194 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1195 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14dl_end

1196 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1197 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1198 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1199 : 00001000000000000000010010111101; -- 	j p2s14dl_end  # Skip check jump piece since space is empty for move

1200 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1201 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14dl_n1

1202 : 00001000000000000000010010110101; -- 	j p2s14s10_1or3

1203 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1204 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14dl_end

1205 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1206 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1207 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14dl_end

1208 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1209 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14dl_end

1210 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1211 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1212 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1213 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1214 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1215 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14drj

1216 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1217 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14dr_end

1218 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1219 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1220 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1221 : 00001000000000000000010011010011; -- 	j p2s14dr_end  # Skip check jump piece since space is empty for move

1222 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1223 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14dr_n1

1224 : 00001000000000000000010011001011; -- 	j p2s14s11_1or3

1225 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1226 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14dr_end

1227 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

1228 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1229 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14dr_end

1230 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1231 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14dr_end

1232 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1233 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

1234 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1235 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1236 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1237 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1238 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s15n2

1239 : 00001000000000000000010011011010; -- 	j p2s15_2or4

1240 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1241 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s16

1242 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1243 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s15ul_end

1244 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1245 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1246 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s15ulj

1247 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1248 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s15ul_end

1249 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1250 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1251 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1252 : 00001000000000000000010011110010; -- 	j p2s15ul_end  # Skip check jump piece since space is empty for move

1253 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1254 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s15ul_n1

1255 : 00001000000000000000010011101010; -- 	j p2s15s19_1or3

1256 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1257 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s15ul_end

1258 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1259 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1260 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s15ul_end

1261 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1262 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s15ul_end

1263 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1264 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1265 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1266 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1267 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1268 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s15dlj

1269 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1270 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s15dl_end

1271 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1272 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1273 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1274 : 00001000000000000000010100001000; -- 	j p2s15dl_end  # Skip check jump piece since space is empty for move

1275 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1276 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s15dl_n1

1277 : 00001000000000000000010100000000; -- 	j p2s15s11_1or3

1278 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1279 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s15dl_end

1280 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1281 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1282 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s15dl_end

1283 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1284 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s15dl_end

1285 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1286 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

1287 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1288 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

1289 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1290 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1291 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s16n2

1292 : 00001000000000000000010100001111; -- 	j p2s16_2or4

1293 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1294 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s17

1295 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1296 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s16ur_end

1297 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1298 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1299 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s16urj

1300 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1301 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s16ur_end

1302 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1303 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1304 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1305 : 00001000000000000000010100100111; -- 	j p2s16ur_end  # Skip check jump piece since space is empty for move

1306 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1307 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s16ur_n1

1308 : 00001000000000000000010100011111; -- 	j p2s16s20_1or3

1309 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1310 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s16ur_end

1311 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1312 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1313 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s16ur_end

1314 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1315 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s16ur_end

1316 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1317 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1318 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1319 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1320 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1321 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s16drj

1322 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1323 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s16dr_end

1324 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1325 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1326 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1327 : 00001000000000000000010100111101; -- 	j p2s16dr_end  # Skip check jump piece since space is empty for move

1328 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1329 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s16dr_n1

1330 : 00001000000000000000010100110101; -- 	j p2s16s12_1or3

1331 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1332 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s16dr_end

1333 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1334 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1335 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s16dr_end

1336 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1337 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s16dr_end

1338 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1339 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1340 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1341 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1342 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1343 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1344 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s17n2

1345 : 00001000000000000000010101000100; -- 	j p2s17_2or4

1346 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1347 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s18

1348 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1349 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s17ul_end

1350 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1351 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1352 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17ulj

1353 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1354 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17ul_end

1355 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1356 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1357 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1358 : 00001000000000000000010101011100; -- 	j p2s17ul_end  # Skip check jump piece since space is empty for move

1359 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1360 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17ul_n1

1361 : 00001000000000000000010101010100; -- 	j p2s17s20_1or3

1362 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1363 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17ul_end

1364 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

1365 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1366 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17ul_end

1367 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1368 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17ul_end

1369 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1370 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

1371 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1372 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1373 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s17ur_end

1374 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1375 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1376 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17urj

1377 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1378 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17ur_end

1379 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1380 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1381 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1382 : 00001000000000000000010101110100; -- 	j p2s17ur_end  # Skip check jump piece since space is empty for move

1383 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1384 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17ur_n1

1385 : 00001000000000000000010101101100; -- 	j p2s17s21_1or3

1386 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1387 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17ur_end

1388 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1389 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1390 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17ur_end

1391 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1392 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17ur_end

1393 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1394 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1395 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1396 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1397 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1398 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17dlj

1399 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1400 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17dl_end

1401 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1402 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1403 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1404 : 00001000000000000000010110001010; -- 	j p2s17dl_end  # Skip check jump piece since space is empty for move

1405 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1406 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17dl_n1

1407 : 00001000000000000000010110000010; -- 	j p2s17s12_1or3

1408 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1409 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17dl_end

1410 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

1411 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1412 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17dl_end

1413 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1414 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17dl_end

1415 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1416 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

1417 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1418 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1419 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1420 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17drj

1421 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1422 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17dr_end

1423 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1424 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1425 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1426 : 00001000000000000000010110100000; -- 	j p2s17dr_end  # Skip check jump piece since space is empty for move

1427 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1428 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17dr_n1

1429 : 00001000000000000000010110011000; -- 	j p2s17s13_1or3

1430 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1431 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17dr_end

1432 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1433 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1434 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17dr_end

1435 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1436 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17dr_end

1437 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1438 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1439 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1440 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1441 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1442 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1443 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s18n2

1444 : 00001000000000000000010110100111; -- 	j p2s18_2or4

1445 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1446 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s19

1447 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1448 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s18ul_end

1449 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1450 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1451 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18ulj

1452 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1453 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18ul_end

1454 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1455 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1456 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1457 : 00001000000000000000010110111111; -- 	j p2s18ul_end  # Skip check jump piece since space is empty for move

1458 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1459 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18ul_n1

1460 : 00001000000000000000010110110111; -- 	j p2s18s21_1or3

1461 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1462 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18ul_end

1463 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1464 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1465 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18ul_end

1466 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1467 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18ul_end

1468 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1469 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1470 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1471 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1472 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s18ur_end

1473 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1474 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1475 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18urj

1476 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1477 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18ur_end

1478 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1479 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1480 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1481 : 00001000000000000000010111010111; -- 	j p2s18ur_end  # Skip check jump piece since space is empty for move

1482 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1483 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18ur_n1

1484 : 00001000000000000000010111001111; -- 	j p2s18s22_1or3

1485 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1486 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18ur_end

1487 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

1488 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1489 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18ur_end

1490 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1491 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18ur_end

1492 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1493 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

1494 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1495 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1496 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1497 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18dlj

1498 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1499 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18dl_end

1500 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1501 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1502 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1503 : 00001000000000000000010111101101; -- 	j p2s18dl_end  # Skip check jump piece since space is empty for move

1504 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1505 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18dl_n1

1506 : 00001000000000000000010111100101; -- 	j p2s18s13_1or3

1507 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1508 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18dl_end

1509 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1510 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1511 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18dl_end

1512 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1513 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18dl_end

1514 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1515 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1516 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1517 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1518 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1519 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18drj

1520 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1521 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18dr_end

1522 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1523 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1524 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1525 : 00001000000000000000011000000011; -- 	j p2s18dr_end  # Skip check jump piece since space is empty for move

1526 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1527 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18dr_n1

1528 : 00001000000000000000010111111011; -- 	j p2s18s14_1or3

1529 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1530 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18dr_end

1531 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1532 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1533 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18dr_end

1534 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1535 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18dr_end

1536 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1537 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1538 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1539 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1540 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1541 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1542 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s19n2

1543 : 00001000000000000000011000001010; -- 	j p2s19_2or4

1544 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1545 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s20

1546 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1547 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s19ul_end

1548 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1549 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1550 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19ulj

1551 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1552 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s19ul_end

1553 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1554 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1555 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1556 : 00001000000000000000011000100010; -- 	j p2s19ul_end  # Skip check jump piece since space is empty for move

1557 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1558 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s19ul_n1

1559 : 00001000000000000000011000011010; -- 	j p2s19s22_1or3

1560 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1561 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s19ul_end

1562 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1563 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1564 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s19ul_end

1565 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1566 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s19ul_end

1567 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1568 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1569 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1570 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1571 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s19ur_end

1572 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

1573 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1574 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19urj

1575 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1576 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s19ur_end

1577 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1578 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

1579 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1580 : 00001000000000000000011000101101; -- 	j p2s19ur_end  # Skip check jump piece since space is empty for move

1581 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1582 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1583 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19dlj

1584 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1585 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s19dl_end

1586 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1587 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1588 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1589 : 00001000000000000000011001000011; -- 	j p2s19dl_end  # Skip check jump piece since space is empty for move

1590 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1591 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s19dl_n1

1592 : 00001000000000000000011000111011; -- 	j p2s19s14_1or3

1593 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1594 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s19dl_end

1595 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1596 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1597 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s19dl_end

1598 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1599 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s19dl_end

1600 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1601 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1602 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1603 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1604 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1605 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19drj

1606 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1607 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s19dr_end

1608 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1609 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

1610 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1611 : 00001000000000000000011001001100; -- 	j p2s19dr_end  # Skip check jump piece since space is empty for move

1612 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1613 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1614 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1615 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s20n2

1616 : 00001000000000000000011001010011; -- 	j p2s20_2or4

1617 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1618 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s21

1619 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1620 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s20ul_end

1621 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

1622 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1623 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20ulj

1624 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1625 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s20ul_end

1626 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1627 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

1628 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1629 : 00001000000000000000011001011110; -- 	j p2s20ul_end  # Skip check jump piece since space is empty for move

1630 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1631 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s20ur_end

1632 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1633 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1634 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20urj

1635 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1636 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s20ur_end

1637 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1638 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1639 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1640 : 00001000000000000000011001110110; -- 	j p2s20ur_end  # Skip check jump piece since space is empty for move

1641 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1642 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s20ur_n1

1643 : 00001000000000000000011001101110; -- 	j p2s20s25_1or3

1644 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1645 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s20ur_end

1646 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

1647 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1648 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s20ur_end

1649 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1650 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s20ur_end

1651 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1652 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

1653 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1654 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

1655 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1656 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20dlj

1657 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1658 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s20dl_end

1659 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1660 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

1661 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1662 : 00001000000000000000011001111111; -- 	j p2s20dl_end  # Skip check jump piece since space is empty for move

1663 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1664 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1665 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20drj

1666 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1667 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s20dr_end

1668 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1669 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1670 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1671 : 00001000000000000000011010010101; -- 	j p2s20dr_end  # Skip check jump piece since space is empty for move

1672 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1673 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s20dr_n1

1674 : 00001000000000000000011010001101; -- 	j p2s20s17_1or3

1675 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1676 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s20dr_end

1677 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1678 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1679 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s20dr_end

1680 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1681 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s20dr_end

1682 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1683 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1684 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1685 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1686 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1687 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1688 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s21n2

1689 : 00001000000000000000011010011100; -- 	j p2s21_2or4

1690 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1691 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s22

1692 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1693 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s21ul_end

1694 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1695 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1696 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21ulj

1697 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1698 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21ul_end

1699 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1700 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1701 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1702 : 00001000000000000000011010110100; -- 	j p2s21ul_end  # Skip check jump piece since space is empty for move

1703 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1704 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21ul_n1

1705 : 00001000000000000000011010101100; -- 	j p2s21s25_1or3

1706 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1707 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21ul_end

1708 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

1709 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1710 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21ul_end

1711 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1712 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21ul_end

1713 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1714 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

1715 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1716 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1717 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s21ur_end

1718 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1719 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1720 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21urj

1721 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1722 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21ur_end

1723 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1724 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1725 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1726 : 00001000000000000000011011001100; -- 	j p2s21ur_end  # Skip check jump piece since space is empty for move

1727 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1728 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21ur_n1

1729 : 00001000000000000000011011000100; -- 	j p2s21s26_1or3

1730 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1731 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21ur_end

1732 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

1733 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1734 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21ur_end

1735 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1736 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21ur_end

1737 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1738 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

1739 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1740 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1741 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1742 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21dlj

1743 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1744 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21dl_end

1745 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1746 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1747 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1748 : 00001000000000000000011011100010; -- 	j p2s21dl_end  # Skip check jump piece since space is empty for move

1749 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1750 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21dl_n1

1751 : 00001000000000000000011011011010; -- 	j p2s21s17_1or3

1752 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1753 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21dl_end

1754 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1755 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1756 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21dl_end

1757 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1758 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21dl_end

1759 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1760 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1761 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1762 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1763 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1764 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21drj

1765 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1766 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21dr_end

1767 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1768 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1769 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1770 : 00001000000000000000011011111000; -- 	j p2s21dr_end  # Skip check jump piece since space is empty for move

1771 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1772 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21dr_n1

1773 : 00001000000000000000011011110000; -- 	j p2s21s18_1or3

1774 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1775 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21dr_end

1776 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1777 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1778 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21dr_end

1779 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1780 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21dr_end

1781 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1782 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1783 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1784 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1785 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1786 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1787 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s22n2

1788 : 00001000000000000000011011111111; -- 	j p2s22_2or4

1789 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1790 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s23

1791 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1792 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s22ul_end

1793 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1794 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1795 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22ulj

1796 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1797 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22ul_end

1798 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1799 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1800 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1801 : 00001000000000000000011100010111; -- 	j p2s22ul_end  # Skip check jump piece since space is empty for move

1802 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1803 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22ul_n1

1804 : 00001000000000000000011100001111; -- 	j p2s22s26_1or3

1805 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1806 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22ul_end

1807 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

1808 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1809 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22ul_end

1810 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1811 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22ul_end

1812 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1813 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

1814 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1815 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1816 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s22ur_end

1817 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

1818 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1819 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22urj

1820 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1821 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22ur_end

1822 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1823 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

1824 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1825 : 00001000000000000000011100101111; -- 	j p2s22ur_end  # Skip check jump piece since space is empty for move

1826 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1827 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22ur_n1

1828 : 00001000000000000000011100100111; -- 	j p2s22s27_1or3

1829 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1830 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22ur_end

1831 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

1832 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1833 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22ur_end

1834 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1835 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22ur_end

1836 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1837 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

1838 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1839 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1840 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1841 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22dlj

1842 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1843 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22dl_end

1844 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1845 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1846 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1847 : 00001000000000000000011101000101; -- 	j p2s22dl_end  # Skip check jump piece since space is empty for move

1848 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1849 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22dl_n1

1850 : 00001000000000000000011100111101; -- 	j p2s22s18_1or3

1851 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1852 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22dl_end

1853 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1854 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1855 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22dl_end

1856 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1857 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22dl_end

1858 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1859 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1860 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1861 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1862 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1863 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22drj

1864 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1865 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22dr_end

1866 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1867 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1868 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1869 : 00001000000000000000011101011011; -- 	j p2s22dr_end  # Skip check jump piece since space is empty for move

1870 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1871 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22dr_n1

1872 : 00001000000000000000011101010011; -- 	j p2s22s19_1or3

1873 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1874 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22dr_end

1875 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1876 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1877 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22dr_end

1878 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1879 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22dr_end

1880 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1881 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

1882 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1883 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

1884 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1885 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1886 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s23n2

1887 : 00001000000000000000011101100010; -- 	j p2s23_2or4

1888 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1889 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s24

1890 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1891 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s23ul_end

1892 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

1893 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1894 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s23ulj

1895 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1896 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s23ul_end

1897 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1898 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

1899 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1900 : 00001000000000000000011101111010; -- 	j p2s23ul_end  # Skip check jump piece since space is empty for move

1901 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1902 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s23ul_n1

1903 : 00001000000000000000011101110010; -- 	j p2s23s27_1or3

1904 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1905 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s23ul_end

1906 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

1907 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1908 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s23ul_end

1909 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1910 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s23ul_end

1911 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1912 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

1913 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1914 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1915 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1916 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s23dlj

1917 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1918 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s23dl_end

1919 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1920 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1921 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1922 : 00001000000000000000011110010000; -- 	j p2s23dl_end  # Skip check jump piece since space is empty for move

1923 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1924 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s23dl_n1

1925 : 00001000000000000000011110001000; -- 	j p2s23s19_1or3

1926 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1927 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s23dl_end

1928 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1929 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1930 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s23dl_end

1931 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1932 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s23dl_end

1933 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1934 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1935 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1936 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

1937 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1938 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1939 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s24n2

1940 : 00001000000000000000011110010111; -- 	j p2s24_2or4

1941 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1942 : 00010010010100000000000000100001; -- 	bne $t1, $t0, p2s25

1943 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1944 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s24ur_end

1945 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

1946 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1947 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s24urj

1948 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1949 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s24ur_end

1950 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

1951 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

1952 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1953 : 00001000000000000000011110100010; -- 	j p2s24ur_end  # Skip check jump piece since space is empty for move

1954 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1955 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1956 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s24drj

1957 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1958 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s24dr_end

1959 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

1960 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1961 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1962 : 00001000000000000000011110111000; -- 	j p2s24dr_end  # Skip check jump piece since space is empty for move

1963 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1964 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s24dr_n1

1965 : 00001000000000000000011110110000; -- 	j p2s24s20_1or3

1966 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1967 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s24dr_end

1968 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1969 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1970 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s24dr_end

1971 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1972 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s24dr_end

1973 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

1974 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1975 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1976 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1977 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1978 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1979 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s25n2

1980 : 00001000000000000000011110111111; -- 	j p2s25_2or4

1981 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1982 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s26

1983 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1984 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s25ul_end

1985 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

1986 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1987 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25ulj

1988 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1989 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s25ul_end

1990 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

1991 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

1992 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1993 : 00001000000000000000011111001010; -- 	j p2s25ul_end  # Skip check jump piece since space is empty for move

1994 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1995 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s25ur_end

1996 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

1997 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1998 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25urj

1999 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2000 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s25ur_end

2001 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2002 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

2003 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2004 : 00001000000000000000011111010101; -- 	j p2s25ur_end  # Skip check jump piece since space is empty for move

2005 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2006 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2007 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25dlj

2008 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2009 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s25dl_end

2010 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2011 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2012 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2013 : 00001000000000000000011111101011; -- 	j p2s25dl_end  # Skip check jump piece since space is empty for move

2014 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2015 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s25dl_n1

2016 : 00001000000000000000011111100011; -- 	j p2s25s20_1or3

2017 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2018 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s25dl_end

2019 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

2020 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2021 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s25dl_end

2022 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2023 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s25dl_end

2024 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2025 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

2026 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2027 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2028 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2029 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25drj

2030 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2031 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s25dr_end

2032 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2033 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2034 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2035 : 00001000000000000000100000000001; -- 	j p2s25dr_end  # Skip check jump piece since space is empty for move

2036 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2037 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s25dr_n1

2038 : 00001000000000000000011111111001; -- 	j p2s25s21_1or3

2039 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2040 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s25dr_end

2041 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2042 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2043 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s25dr_end

2044 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2045 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s25dr_end

2046 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2047 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2048 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2049 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2050 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2051 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2052 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s26n2

2053 : 00001000000000000000100000001000; -- 	j p2s26_2or4

2054 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2055 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s27

2056 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2057 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s26ul_end

2058 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

2059 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2060 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26ulj

2061 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2062 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s26ul_end

2063 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2064 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

2065 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2066 : 00001000000000000000100000010011; -- 	j p2s26ul_end  # Skip check jump piece since space is empty for move

2067 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2068 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s26ur_end

2069 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

2070 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2071 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26urj

2072 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2073 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s26ur_end

2074 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2075 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

2076 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2077 : 00001000000000000000100000011110; -- 	j p2s26ur_end  # Skip check jump piece since space is empty for move

2078 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2079 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2080 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26dlj

2081 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2082 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s26dl_end

2083 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2084 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2085 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2086 : 00001000000000000000100000110100; -- 	j p2s26dl_end  # Skip check jump piece since space is empty for move

2087 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2088 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s26dl_n1

2089 : 00001000000000000000100000101100; -- 	j p2s26s21_1or3

2090 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2091 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s26dl_end

2092 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

2093 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2094 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s26dl_end

2095 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2096 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s26dl_end

2097 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2098 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

2099 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2100 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2101 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2102 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26drj

2103 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2104 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s26dr_end

2105 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2106 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2107 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2108 : 00001000000000000000100001001010; -- 	j p2s26dr_end  # Skip check jump piece since space is empty for move

2109 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2110 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s26dr_n1

2111 : 00001000000000000000100001000010; -- 	j p2s26s22_1or3

2112 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2113 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s26dr_end

2114 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

2115 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2116 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s26dr_end

2117 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2118 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s26dr_end

2119 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2120 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

2121 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2122 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2123 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2124 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2125 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s27n2

2126 : 00001000000000000000100001010001; -- 	j p2s27_2or4

2127 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2128 : 00010010010100000000000000110101; -- 	bne $t1, $t0, p2s28

2129 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2130 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s27ul_end

2131 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

2132 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2133 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27ulj

2134 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2135 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27ul_end

2136 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2137 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

2138 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2139 : 00001000000000000000100001011100; -- 	j p2s27ul_end  # Skip check jump piece since space is empty for move

2140 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2141 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s27ur_end

2142 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

2143 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2144 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27urj

2145 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2146 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27ur_end

2147 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2148 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

2149 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2150 : 00001000000000000000100001100111; -- 	j p2s27ur_end  # Skip check jump piece since space is empty for move

2151 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2152 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2153 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27dlj

2154 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2155 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s27dl_end

2156 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2157 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2158 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2159 : 00001000000000000000100001111101; -- 	j p2s27dl_end  # Skip check jump piece since space is empty for move

2160 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2161 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s27dl_n1

2162 : 00001000000000000000100001110101; -- 	j p2s27s22_1or3

2163 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2164 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s27dl_end

2165 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2166 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2167 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s27dl_end

2168 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2169 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s27dl_end

2170 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2171 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2172 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2173 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

2174 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2175 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27drj

2176 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2177 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27dr_end

2178 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2179 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

2180 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2181 : 00001000000000000000100010000110; -- 	j p2s27dr_end  # Skip check jump piece since space is empty for move

2182 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

2183 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2184 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2185 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s28n2

2186 : 00001000000000000000100010001101; -- 	j p2s28_2or4

2187 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2188 : 00010010010100000000000000011111; -- 	bne $t1, $t0, p2s29

2189 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

2190 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2191 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s28dlj

2192 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2193 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s28dl_end

2194 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

2195 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

2196 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2197 : 00001000000000000000100010010110; -- 	j p2s28dl_end  # Skip check jump piece since space is empty for move

2198 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

2199 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2200 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s28drj

2201 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2202 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s28dr_end

2203 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

2204 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

2205 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2206 : 00001000000000000000100010101100; -- 	j p2s28dr_end  # Skip check jump piece since space is empty for move

2207 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2208 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s28dr_n1

2209 : 00001000000000000000100010100100; -- 	j p2s28s25_1or3

2210 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2211 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s28dr_end

2212 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2213 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2214 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s28dr_end

2215 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2216 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s28dr_end

2217 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

2218 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2219 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2220 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

2221 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2222 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2223 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s29n2

2224 : 00001000000000000000100010110011; -- 	j p2s29_2or4

2225 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2226 : 00010010010100000000000000101100; -- 	bne $t1, $t0, p2s30

2227 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

2228 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2229 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s29dlj

2230 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2231 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s29dl_end

2232 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2233 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

2234 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2235 : 00001000000000000000100011001001; -- 	j p2s29dl_end  # Skip check jump piece since space is empty for move

2236 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2237 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s29dl_n1

2238 : 00001000000000000000100011000001; -- 	j p2s29s25_1or3

2239 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2240 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s29dl_end

2241 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2242 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2243 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s29dl_end

2244 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2245 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s29dl_end

2246 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2247 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2248 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2249 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2250 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2251 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s29drj

2252 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2253 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s29dr_end

2254 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2255 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

2256 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2257 : 00001000000000000000100011011111; -- 	j p2s29dr_end  # Skip check jump piece since space is empty for move

2258 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2259 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s29dr_n1

2260 : 00001000000000000000100011010111; -- 	j p2s29s26_1or3

2261 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2262 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s29dr_end

2263 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2264 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2265 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s29dr_end

2266 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2267 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s29dr_end

2268 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2269 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2270 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2271 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

2272 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2273 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2274 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s30n2

2275 : 00001000000000000000100011100110; -- 	j p2s30_2or4

2276 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2277 : 00010010010100000000000000101100; -- 	bne $t1, $t0, p2s31

2278 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2279 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2280 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s30dlj

2281 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2282 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s30dl_end

2283 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2284 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

2285 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2286 : 00001000000000000000100011111100; -- 	j p2s30dl_end  # Skip check jump piece since space is empty for move

2287 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2288 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s30dl_n1

2289 : 00001000000000000000100011110100; -- 	j p2s30s26_1or3

2290 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2291 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s30dl_end

2292 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2293 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2294 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s30dl_end

2295 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2296 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s30dl_end

2297 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2298 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2299 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2300 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2301 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2302 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s30drj

2303 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2304 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s30dr_end

2305 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2306 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

2307 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2308 : 00001000000000000000100100010010; -- 	j p2s30dr_end  # Skip check jump piece since space is empty for move

2309 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2310 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s30dr_n1

2311 : 00001000000000000000100100001010; -- 	j p2s30s27_1or3

2312 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2313 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s30dr_end

2314 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

2315 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2316 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s30dr_end

2317 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2318 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s30dr_end

2319 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2320 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

2321 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2322 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

2323 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2324 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2325 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s31n2

2326 : 00001000000000000000100100011001; -- 	j p2s31_2or4

2327 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2328 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s32

2329 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2330 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2331 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s31dlj

2332 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2333 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s31dl_end

2334 : 00101000100000000000000000011111; -- 	addi $v0, $zero, 31

2335 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

2336 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2337 : 00001000000000000000100100101111; -- 	j p2s31dl_end  # Skip check jump piece since space is empty for move

2338 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2339 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s31dl_n1

2340 : 00001000000000000000100100100111; -- 	j p2s31s27_1or3

2341 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2342 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s31dl_end

2343 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2344 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2345 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s31dl_end

2346 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2347 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s31dl_end

2348 : 00101000100000000000000000011111; -- 	addi $v0, $zero, 31

2349 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2350 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2351 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

2352 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

2353 : 00100111110000000000000000000000; -- 	jr $ra					# Return

[2354..4095] : 00000000000000000000000000000000;
END;
