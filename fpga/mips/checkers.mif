DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 00101100100000000000000000000001; -- 	addi $s2, $zero, 1		# Stack word size (4 for MARS, 1 for our processor)

0001 : 00101100110000000000000000000000; -- 	addi $s3, $zero, 0		# Previously seen op code ready flag starts at 0

0002 : 00101100011110100000000000000000; -- 	addi $s1, $sp, 0		# Save board start location to $s1

0003 : 00101111011110111111111111100000; -- 	addi $sp, $sp, -32		# Reserve 32 words on stack for board

0004 : 00011000000000000000000000000110; -- 	jal reset_game			# Reset game

0005 : 00001000000000000000000000100101; -- 	j game_loop				# Jump to game loop after setting up

0006 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0007 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0008 : 00011000000000000000000000001101; -- 	jal	init_board

0009 : 00101100000000000000000000000001; -- 	addi $s0, $0, 1			# Put player 1 in player register

0010 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0011 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0012 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0013 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0014 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0015 : 00101010001000100000000000000000; -- 	addi $t0, $s1, 0		# Board position in stack

0016 : 00101010010000000000000000000001; -- 	addi $t1, $zero, 1		# Checker type = player 1

0017 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0018 : 00101010110000000000000000001100; -- 	addi $t3, $zero, 12		# Number of checkers = 12

0019 : 00011000000000000000000000011101; -- 	jal init_loop			# Loop to place checkers

0020 : 00101010010000000000000000000000; -- 	addi $t1, $zero, 0		# Checker type = blank

0021 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0022 : 00101010110000000000000000001000; -- 	addi $t3, $zero, 8		# Number of checkers = 8

0023 : 00011000000000000000000000011101; -- 	jal init_loop			# Loop to place checkers

0024 : 00101010010000000000000000000010; -- 	addi $t1, $zero, 2		# Checker type = player 2

0025 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0026 : 00101010110000000000000000001100; -- 	addi $t3, $zero, 12		# Number of checkers = 12

0027 : 00011000000000000000000000011101; -- 	jal init_loop			# Loop to place checkers

0028 : 00001000000000000000000000100010; -- 	j finish_init			# Board initialized, jump to end of function

0029 : 00111010010100000000000000000000; -- 	sw $t1, 0($t0)			# [$t0+0] = $t1 (save checker in dmem board)

0030 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0031 : 00101010100101000000000000000001; -- 	addi $t2, $t2, 1		# Increment counter

0032 : 00110010100101111111111111111100; -- 	blt $t2, $t3, init_loop	# Keep looping while counter < num checkers

0033 : 00100111110000000000000000000000; -- 	jr $ra					# Go back for next checker type

0034 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0035 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0036 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0037 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for anding

0038 : 00000010001101101000000000001000; -- 	and $t0, $27, $t0		# $t0 = 1 iff least significant bit in $27 is 1

0039 : 00010100110100000000000000000001; -- 	bne $s3, $t0, new_data	# Branch if flag set for new op code

0040 : 00001000000000000000000000100101; -- 	j game_loop				# Loop again if no new data found

0041 : 00101010011101000000000000000000; -- 	addi $t1, $26, 0		# $t1 = $26 - data that accompanies op code

0042 : 00101100110100000000000000000000; -- 	addi $s3, $t0, 0		# Set $s3 to previously seen op code ready flag

0043 : 00000010001101100000000010010100; -- 	sra $t0, $27, 1			# $t0 = 4-bit op code

0044 : 00010010000000000000000000100101; -- 	bne $t0, $zero, not_move# Branch if op code != 0, i.e. not a move

0045 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = board position in memory

0046 : 00101010100000000000000000011111; -- 	addi $t2, $zero, 31		# $t2 = 31 = 1111, "and" with data to get space

0047 : 00000001100100101010000000001000; -- 	and $a2, $t1, $t2		# $a2 = space_to

0048 : 00000010010100100000001010010100; -- 	sra $t1, $t1, 5			# Shift data right to get space_from

0049 : 00000001010100101010000000001000; -- 	and $a1, $t1, $t2		# $a1 = space_from

0050 : 00000010010100100000001010010100; -- 	sra $t1, $t1, 5			# Shift data right to get space_jumped

0051 : 00000001110100101010000000001000; -- 	and $a3, $t1, $t2		# $a3 = space_jumped

0052 : 00011000000000000000000001010101; -- 	jal make_move			# Update board state to reflect new move

0053 : 00101010001000100000000000000000; -- 	addi $t0, $s1, 0		# $t0 = board position in memory

0054 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker in space 0

0055 : 00101111000100100000000000000000; -- 	addi $28, $t1, 0

0056 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0057 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0058 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0059 : 00101111000100100000000000000000; -- 	addi $28, $t1, 0

0060 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0061 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0062 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0063 : 00101111000100100000000000000000; -- 	addi $28, $t1, 0

0064 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0065 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0066 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0067 : 00101111000100100000000000000000; -- 	addi $28, $t1, 0

0068 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0069 : 00001000000000000000000000100101; -- 	j game_loop

0070 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = board position in memory

0071 : 00011000000000000000000001111101; -- 	jal check_win			# Check if one of the players has won

0072 : 00010000100000000000000000001010; -- 	bne $v0, $zero, win		# If check_win result is not 0, someone won!

0073 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for checking player

0074 : 00010100000100000000000000000010; -- 	bne $s0, $t0, to_p1		# If $s0 != 1, branch becaues current player is 2

0075 : 00101100000000000000000000000010; -- 	addi $s0, $zero, 2		# Change to player 2

0076 : 00001000000000000000000001001110; -- 	j done_changing_player

0077 : 00101100000000000000000000000001; -- 	addi $s0, $zero, 1		# Change to player 1

0078 : 00101001000001000000000000000000; -- 	addi $a0, $v0, 0		# Put space_from in $a0

0079 : 00101001010001100000000000000000; -- 	addi $a1, $v1, 0		# Put space_to in $a1

0080 : 00011000000000000000000010100001; -- 	jal move_to_7sd			# Convert move into seven-segment display

0081 : 00101111000001000000000000000000; -- 	addi $28, $v0, 0		# Put final value into $28 for display

0082 : 00001000000000000000000000100101; -- 	j game_loop

0083 : 00101111000001000000000000000000; -- 	addi $28, $v0, 0

0084 : 00000111001110000000001010010000; -- 	sll $28, $28, 5

0085 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0086 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0087 : 00000010010010000101000000000100; -- 	sub $t1, $a0, $a1		# $t1 = location of space_from in memory

0088 : 00000010100010000110000000000100; -- 	sub $t2, $a0, $a2		# $t2 = location of space_to in memory

0089 : 00000010110010000111000000000100; -- 	sub $t3, $a0, $a3		# $t3 = location of space_jumped in memory

0090 : 01000011000100100000000000000000; -- 	lw $t4, 0($t1)			# $t4 = checker at space_from

0091 : 01000011010101000000000000000000; -- 	lw $t5, 0($t2)			# $t5 = checker at space_to

0092 : 00111011000101000000000000000000; -- 	sw $t4, 0($t2)			# [$t2] = checker formerly at space_to now at space_from

0093 : 00111011010100100000000000000000; -- 	sw $t5, 0($t1)			# [$t1] = checker formerly at space_from now at space_to

0094 : 00010010110000000000000000000001; -- 	bne $t3, $zero, jumped	# Branch if jumped

0095 : 00001000000000000000000001100010; -- 	j after_jump			# Skip jumping code if no jump

0096 : 00000011100010001011000000000100; -- 	sub $t6, $a0, $t3		# $t6 = location of space_jumped in memory

0097 : 00111000000111100000000000000000; -- 	sw $zero, 0($t7)		# [$t6] = 0 (blank space) in memory

0098 : 00101001001000100000000000000000; -- 	addi $a0, $s1, 0		# $a0 = $s1, arg0 has start location of main board

0099 : 00101001010011000000000000000000; -- 	addi $a1, $a2, 0		# $a1 = $a2, arg1 has space_to

0100 : 00011000000000000000000001101000; -- 	jal king_me				# Check for kings

0101 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0102 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0103 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0104 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0105 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0106 : 00000010000010000101000000000100; -- 	sub $t0, $a0, $a1		# $t0 = location of space in memory

0107 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = checker at space in memory

0108 : 00101010100000000000000000000001; -- 	addi $t2, $zero, 1		# $t2 = 1 for comparison

0109 : 00010010010101000000000000000101; -- 	bne $t1, $t2, k_not_1	# Branch if checker != 1

0110 : 00101010100000000000000000011100; -- 	addi $t2, $zero, 28		# $t2 = 28 for comparison

0111 : 00110001010101000000000000001010; -- 	blt $a1, $t2, ret_king	# Branch if checker not in kingable position

0112 : 00101010110000000000000000000011; -- 	addi $t3, $zero, 3		# $t3 = 3 (king value for player 1)

0113 : 00111010110100000000000000000000; -- 	sw $t3, 0($t0)			# Store new king in memory

0114 : 00001000000000000000000001111010; -- 	j ret_king				# Return because done

0115 : 00101010100000000000000000000010; -- 	addi $t2, $zero, 2		# $t2 = 2 for comparison

0116 : 00010010010101000000000000000101; -- 	bne $t1, $t2, ret_king	# Branch if checker != 2

0117 : 00101010100000000000000000000011; -- 	addi $t2, $zero, 3		# $t2 = 3 for comparison

0118 : 00110010100010100000000000000011; -- 	blt $t2, $a1, ret_king	# Branch if checker not in kingable position

0119 : 00101010110000000000000000000011; -- 	addi $t3, $zero, 3		# $t3 = 4 (king value for player 2)

0120 : 00111010110100000000000000000000; -- 	sw $t3, 0($t0)			# Store new king in memory

0121 : 00001000000000000000000001111010; -- 	j ret_king				# Return because done

0122 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0123 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0124 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0125 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0126 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0127 : 00101010000010000000000000000000; -- 	addi $t0, $a0, 0		# Board position in stack

0128 : 00101010100000000000000000000000; -- 	addi $t2, $zero, 0		# Counter = 0

0129 : 00101010110000000000000000100000; -- 	addi $t3, $zero, 32		# Board length = 32

0130 : 00101011000000000000000000000000; -- 	addi $t4, $zero, 0		# Player 1 checker counter = 0

0131 : 00101011010000000000000000000000; -- 	addi $t5, $zero, 0		# Player 2 checker counter = 0

0132 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)			# $t1 = [$t0+0] (load checker from dmem board)

0133 : 00000010000100010010000000000100; -- 	sub $t0, $t0, $s2		# Increment board pos (-1 because stack goes backwards)

0134 : 00101010100101000000000000000001; -- 	addi $t2, $t2, 1		# Increment counter

0135 : 00010010010000000000000000000001; -- 	bne $t1, $zero, not_0	# Branch if checker is not 0, continue if it is

0136 : 00001000000000000000000010010110; -- 	j continue

0137 : 00101011100000000000000000000001; -- 	addi $t6, $zero, 1		# Temporary variable for comparison

0138 : 00010010010111000000000000000010; -- 	bne $t1, $t6, not_1		# Branch if checker is not 1, continue if it is

0139 : 00101011000110000000000000000001; -- 	addi $t4, $t4, 1		# Increment player 1 counter

0140 : 00001000000000000000000010010110; -- 	j continue

0141 : 00101011100000000000000000000010; -- 	addi $t6, $zero, 2		# Temporary variable for comparison

0142 : 00010010010111000000000000000010; -- 	bne $t1, $t6, not_2		# Branch if checker is not 2, continue if it is

0143 : 00101011010110100000000000000001; -- 	addi $t5, $t5, 1		# Increment player 2 counter

0144 : 00001000000000000000000010010110; -- 	j continue

0145 : 00101011100000000000000000000011; -- 	addi $t6, $zero, 3		# Temporary variable for comparison

0146 : 00010010010111000000000000000010; -- 	bne $t1, $t6, not_3		# Branch if checker is not 3, continue if it is

0147 : 00101011000110000000000000000001; -- 	addi $t4, $t4, 1		# Increment player 1 counter

0148 : 00001000000000000000000010010110; -- 	j continue

0149 : 00101011010110100000000000000001; -- 	addi $t5, $t5, 1		# Increment player 2 counter

0150 : 00110010100101111111111111101101; -- 	blt $t2, $t3, b_loop	# Keep looping while counter < num checkers

0151 : 00010011000000000000000000000010; -- 	bne $t4, $zero, p1_in	# Branch if player 1 has checkers

0152 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2		# Player 1 is out of checkers, player 2 wins!

0153 : 00001000000000000000000010011110; -- 	j return_check_win

0154 : 00010011010000000000000000000010; -- 	bne $t5, $zero, p2_in	# Branch if player 2 has checkers

0155 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1		# Player 2 is out of checkers, player 1 wins!

0156 : 00001000000000000000000010011110; -- 	j return_check_win

0157 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0		# Neither player has won yet

0158 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0159 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0160 : 00100111110000000000000000000000; -- 	jr $ra					# Return

0161 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0162 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0163 : 00011000000000000000000010110001; -- 	jal space_to_7sd		# space_from already in $a0

0164 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0165 : 00111000101110100000000000000000; -- 	sw $v0, 0($sp)			# [$sp+0] = $v0 (save space_from)

0166 : 00101001000010100000000000000000; -- 	addi $a0, $a1, 0		# $a0 = $a1

0167 : 00011000000000000000000010110001; -- 	jal space_to_7sd

0168 : 00101010000001000000000000000000; -- 	addi $t0, $v0, 0		# $t0 = $v0

0169 : 01000000101110100000000000000000; -- 	lw $v0, 0($sp)			# $v0 = [$sp+0] (space_from from memory)

0170 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0171 : 00000000100001000000010100010000; -- 	sll $v0, $v0, 10		# Shift $v0 left 10 bits to prepare for space_to

0172 : 00000000100001001000000000000000; -- 	add $v0, $v0, $t0		# $v0 += $t0 (now $v0 has all moves)

0173 : 00000000100001000000001010010000; -- 	sll $v0, $v0, 5			# Shift $v0 left 5 bits to account for opcode+flag

0174 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0175 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0176 : 00100111110000000000000000000000; -- 	jr $ra

0177 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0178 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0179 : 00000010000010000000000100010100; -- 	sra $t0, $a0, 2			# $t0 = floor($a0 / 4)

0180 : 00101010000100000000000000000001; -- 	addi $t0, $t0, 1		# $t0 += 1 (now $t0 == row of space_from)

0181 : 00101011000000000000000000000011; -- 	addi $t4, $zero, 3		# $t4 = 3 for anding

0182 : 00000010010010001100000000001000; -- 	and $t1, $a0, $t4		# $t1 = $a0 & $t4 = $a0 % 4

0183 : 00000010010100101001000000000000; -- 	add $t1, $t1, $t1		# $t1 = $t1 + $t1 = $t1 * 2

0184 : 00101010010100100000000000000010; -- 	addi $t1, $t1, 2		# $t1 += 2

0185 : 00101011000000000000000000000001; -- 	addi $t4, $zero, 1		# $t4 = 1 for anding

0186 : 00000011000100001100000000001000; -- 	and $t4, $t0, $t4		# $t4 = $t0 & $t4 = $t0 % 2

0187 : 00000010010100101100000000000100; -- 	sub $t1, $t1, $t4		# $t1 -= $t4 (now $t1 == column of space_from)

0188 : 00101010010100100000000000001001; -- 	addi $t1, $t1, 9		# $t1 += 9 (adding to column to get letters on 7sd)

0189 : 00101000100100000000000000000000; -- 	addi $v0, $t0, 0		# $v0 = $t0 (row)

0190 : 00000000100001000000001010010000; -- 	sll $v0, $v0, 5			# Shift $v0 left 5 bits to prepare for column

0191 : 00000000100001001001000000000000; -- 	add $v0, $v0, $t1		# $v0 += $t1 (column)

0192 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

0193 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

0194 : 00100111110000000000000000000000; -- 	jr $ra

0195 : 00000111011110110010000000000100; -- 	sub $sp, $sp, $s2		# Reserve 1 word on stack

0196 : 00111111111110100000000000000000; -- 	sw $ra, 0($sp)			# [$sp+0] = $ra (save return address)

0197 : 00101110010000000000000000000000; -- 	addi $t9, $zero, 0		# $t9 = 0 initializes best move score to 0

0198 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1		# $t0 = 1 for checking player

0199 : 00010100000100000000000000000011; -- 	bne $s0, $t0, find2		# If $s0 != 1, branch becaues current player is 2

0200 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

0201 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

0202 : 00001000000000000000100100100111; -- 	j return_find_move

0203 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

0204 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0205 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0206 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s0n2

0207 : 00001000000000000000000011010010; -- 	j p2s0_2or4

0208 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0209 : 00010010010100000000000000011000; -- 	bne $t1, $t0, p2s1

0210 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0211 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s0ur_end

0212 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0213 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0214 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s0urj

0215 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0216 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s0ur_end

0217 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

0218 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0219 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0220 : 00001000000000000000000011101010; -- 	j p2s0ur_end  # Skip check jump piece since space is empty for move

0221 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0222 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s0ur_n1

0223 : 00001000000000000000000011100010; -- 	j p2s0s4_1or3

0224 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0225 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s0ur_end

0226 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0227 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0228 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s0ur_end

0229 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0230 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s0ur_end

0231 : 00101000100000000000000000000000; -- 	addi $v0, $zero, 0

0232 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0233 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0234 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0235 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0236 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0237 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s1n2

0238 : 00001000000000000000000011110001; -- 	j p2s1_2or4

0239 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0240 : 00010010010100000000000000110000; -- 	bne $t1, $t0, p2s2

0241 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0242 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s1ul_end

0243 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0244 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0245 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s1ulj

0246 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0247 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s1ul_end

0248 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0249 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0250 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0251 : 00001000000000000000000100001001; -- 	j p2s1ul_end  # Skip check jump piece since space is empty for move

0252 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0253 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s1ul_n1

0254 : 00001000000000000000000100000001; -- 	j p2s1s4_1or3

0255 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0256 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s1ul_end

0257 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0258 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0259 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s1ul_end

0260 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

0261 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s1ul_end

0262 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0263 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

0264 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0265 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0266 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s1ur_end

0267 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0268 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0269 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s1urj

0270 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0271 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s1ur_end

0272 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0273 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0274 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0275 : 00001000000000000000000100100001; -- 	j p2s1ur_end  # Skip check jump piece since space is empty for move

0276 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0277 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s1ur_n1

0278 : 00001000000000000000000100011001; -- 	j p2s1s5_1or3

0279 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0280 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s1ur_end

0281 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0282 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0283 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s1ur_end

0284 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0285 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s1ur_end

0286 : 00101000100000000000000000000001; -- 	addi $v0, $zero, 1

0287 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0288 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0289 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0290 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0291 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0292 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s2n2

0293 : 00001000000000000000000100101000; -- 	j p2s2_2or4

0294 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0295 : 00010010010100000000000000110000; -- 	bne $t1, $t0, p2s3

0296 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0297 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s2ul_end

0298 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0299 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0300 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s2ulj

0301 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0302 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s2ul_end

0303 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0304 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0305 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0306 : 00001000000000000000000101000000; -- 	j p2s2ul_end  # Skip check jump piece since space is empty for move

0307 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0308 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s2ul_n1

0309 : 00001000000000000000000100111000; -- 	j p2s2s5_1or3

0310 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0311 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s2ul_end

0312 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0313 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0314 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s2ul_end

0315 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0316 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s2ul_end

0317 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0318 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0319 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0320 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0321 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s2ur_end

0322 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0323 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0324 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s2urj

0325 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0326 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s2ur_end

0327 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0328 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0329 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0330 : 00001000000000000000000101011000; -- 	j p2s2ur_end  # Skip check jump piece since space is empty for move

0331 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0332 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s2ur_n1

0333 : 00001000000000000000000101010000; -- 	j p2s2s6_1or3

0334 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0335 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s2ur_end

0336 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0337 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0338 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s2ur_end

0339 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0340 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s2ur_end

0341 : 00101000100000000000000000000010; -- 	addi $v0, $zero, 2

0342 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

0343 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0344 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0345 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0346 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0347 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s3n2

0348 : 00001000000000000000000101011111; -- 	j p2s3_2or4

0349 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0350 : 00010010010100000000000000100011; -- 	bne $t1, $t0, p2s4

0351 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0352 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s3ul_end

0353 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0354 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0355 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s3ulj

0356 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0357 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s3ul_end

0358 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

0359 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0360 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0361 : 00001000000000000000000101110111; -- 	j p2s3ul_end  # Skip check jump piece since space is empty for move

0362 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0363 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s3ul_n1

0364 : 00001000000000000000000101101111; -- 	j p2s3s6_1or3

0365 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0366 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s3ul_end

0367 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0368 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0369 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s3ul_end

0370 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0371 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s3ul_end

0372 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

0373 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0374 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0375 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0376 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s3ur_end

0377 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

0378 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0379 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s3urj

0380 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0381 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s3ur_end

0382 : 00101000100000000000000000000011; -- 	addi $v0, $zero, 3

0383 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

0384 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0385 : 00001000000000000000000110000010; -- 	j p2s3ur_end  # Skip check jump piece since space is empty for move

0386 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0387 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0388 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0389 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s4n2

0390 : 00001000000000000000000110001001; -- 	j p2s4_2or4

0391 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0392 : 00010010010100000000000000110101; -- 	bne $t1, $t0, p2s5

0393 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0394 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s4ul_end

0395 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0396 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0397 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4ulj

0398 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0399 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4ul_end

0400 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0401 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

0402 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0403 : 00001000000000000000000110010100; -- 	j p2s4ul_end  # Skip check jump piece since space is empty for move

0404 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0405 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s4ur_end

0406 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0407 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0408 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4urj

0409 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0410 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s4ur_end

0411 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0412 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0413 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0414 : 00001000000000000000000110101100; -- 	j p2s4ur_end  # Skip check jump piece since space is empty for move

0415 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0416 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s4ur_n1

0417 : 00001000000000000000000110100100; -- 	j p2s4s9_1or3

0418 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0419 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s4ur_end

0420 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0421 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0422 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s4ur_end

0423 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0424 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s4ur_end

0425 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0426 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0427 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0428 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

0429 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0430 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4dlj

0431 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0432 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4dl_end

0433 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0434 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

0435 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0436 : 00001000000000000000000110110101; -- 	j p2s4dl_end  # Skip check jump piece since space is empty for move

0437 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0438 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0439 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s4drj

0440 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0441 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s4dr_end

0442 : 00101000100000000000000000000100; -- 	addi $v0, $zero, 4

0443 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0444 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0445 : 00001000000000000000000110111110; -- 	j p2s4dr_end  # Skip check jump piece since space is empty for move

0446 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0447 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0448 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0449 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s5n2

0450 : 00001000000000000000000111000101; -- 	j p2s5_2or4

0451 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0452 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s6

0453 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0454 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s5ul_end

0455 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0456 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0457 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5ulj

0458 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0459 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s5ul_end

0460 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0461 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

0462 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0463 : 00001000000000000000000111011101; -- 	j p2s5ul_end  # Skip check jump piece since space is empty for move

0464 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0465 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s5ul_n1

0466 : 00001000000000000000000111010101; -- 	j p2s5s9_1or3

0467 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0468 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s5ul_end

0469 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0470 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0471 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s5ul_end

0472 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0473 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s5ul_end

0474 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0475 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

0476 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0477 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0478 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s5ur_end

0479 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0480 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0481 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5urj

0482 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0483 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s5ur_end

0484 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0485 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0486 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0487 : 00001000000000000000000111110101; -- 	j p2s5ur_end  # Skip check jump piece since space is empty for move

0488 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0489 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s5ur_n1

0490 : 00001000000000000000000111101101; -- 	j p2s5s10_1or3

0491 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0492 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s5ur_end

0493 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0494 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0495 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s5ur_end

0496 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0497 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s5ur_end

0498 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0499 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0500 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0501 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0502 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0503 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5dlj

0504 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0505 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s5dl_end

0506 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0507 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0508 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0509 : 00001000000000000000000111111110; -- 	j p2s5dl_end  # Skip check jump piece since space is empty for move

0510 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0511 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0512 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s5drj

0513 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0514 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s5dr_end

0515 : 00101000100000000000000000000101; -- 	addi $v0, $zero, 5

0516 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0517 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0518 : 00001000000000000000001000000111; -- 	j p2s5dr_end  # Skip check jump piece since space is empty for move

0519 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0520 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0521 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0522 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s6n2

0523 : 00001000000000000000001000001110; -- 	j p2s6_2or4

0524 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0525 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s7

0526 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0527 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s6ul_end

0528 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0529 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0530 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6ulj

0531 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0532 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s6ul_end

0533 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0534 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

0535 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0536 : 00001000000000000000001000100110; -- 	j p2s6ul_end  # Skip check jump piece since space is empty for move

0537 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0538 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s6ul_n1

0539 : 00001000000000000000001000011110; -- 	j p2s6s10_1or3

0540 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0541 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s6ul_end

0542 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0543 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0544 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s6ul_end

0545 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0546 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s6ul_end

0547 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0548 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0549 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0550 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0551 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s6ur_end

0552 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0553 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0554 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6urj

0555 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0556 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s6ur_end

0557 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0558 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

0559 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0560 : 00001000000000000000001000111110; -- 	j p2s6ur_end  # Skip check jump piece since space is empty for move

0561 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0562 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s6ur_n1

0563 : 00001000000000000000001000110110; -- 	j p2s6s11_1or3

0564 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0565 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s6ur_end

0566 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

0567 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0568 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s6ur_end

0569 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

0570 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s6ur_end

0571 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0572 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

0573 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0574 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0575 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0576 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6dlj

0577 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0578 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s6dl_end

0579 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0580 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0581 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0582 : 00001000000000000000001001000111; -- 	j p2s6dl_end  # Skip check jump piece since space is empty for move

0583 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0584 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0585 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s6drj

0586 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0587 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s6dr_end

0588 : 00101000100000000000000000000110; -- 	addi $v0, $zero, 6

0589 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

0590 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0591 : 00001000000000000000001001010000; -- 	j p2s6dr_end  # Skip check jump piece since space is empty for move

0592 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

0593 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0594 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0595 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s7n2

0596 : 00001000000000000000001001010111; -- 	j p2s7_2or4

0597 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0598 : 00010010010100000000000000100001; -- 	bne $t1, $t0, p2s8

0599 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0600 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s7ul_end

0601 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0602 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0603 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s7ulj

0604 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0605 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s7ul_end

0606 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

0607 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

0608 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0609 : 00001000000000000000001001101111; -- 	j p2s7ul_end  # Skip check jump piece since space is empty for move

0610 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0611 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s7ul_n1

0612 : 00001000000000000000001001100111; -- 	j p2s7s11_1or3

0613 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0614 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s7ul_end

0615 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0616 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0617 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s7ul_end

0618 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0619 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s7ul_end

0620 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

0621 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0622 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0623 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0624 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0625 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s7dlj

0626 : 00101010000000011111111111111011; -- 	addi $t0, $zero, -5

0627 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s7dl_end

0628 : 00101000100000000000000000000111; -- 	addi $v0, $zero, 7

0629 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

0630 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0631 : 00001000000000000000001001111000; -- 	j p2s7dl_end  # Skip check jump piece since space is empty for move

0632 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0633 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0634 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0635 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s8n2

0636 : 00001000000000000000001001111111; -- 	j p2s8_2or4

0637 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0638 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s9

0639 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0640 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s8ur_end

0641 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0642 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0643 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s8urj

0644 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0645 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s8ur_end

0646 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0647 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

0648 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0649 : 00001000000000000000001010010111; -- 	j p2s8ur_end  # Skip check jump piece since space is empty for move

0650 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0651 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s8ur_n1

0652 : 00001000000000000000001010001111; -- 	j p2s8s12_1or3

0653 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0654 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s8ur_end

0655 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

0656 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0657 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s8ur_end

0658 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0659 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s8ur_end

0660 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0661 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

0662 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0663 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0664 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0665 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s8drj

0666 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0667 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s8dr_end

0668 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0669 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0670 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0671 : 00001000000000000000001010101101; -- 	j p2s8dr_end  # Skip check jump piece since space is empty for move

0672 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0673 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s8dr_n1

0674 : 00001000000000000000001010100101; -- 	j p2s8s4_1or3

0675 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0676 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s8dr_end

0677 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0678 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0679 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s8dr_end

0680 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0681 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s8dr_end

0682 : 00101000100000000000000000001000; -- 	addi $v0, $zero, 8

0683 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0684 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0685 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

0686 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0687 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0688 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s9n2

0689 : 00001000000000000000001010110100; -- 	j p2s9_2or4

0690 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0691 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s10

0692 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0693 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s9ul_end

0694 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0695 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0696 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9ulj

0697 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0698 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9ul_end

0699 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0700 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

0701 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0702 : 00001000000000000000001011001100; -- 	j p2s9ul_end  # Skip check jump piece since space is empty for move

0703 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0704 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9ul_n1

0705 : 00001000000000000000001011000100; -- 	j p2s9s12_1or3

0706 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0707 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9ul_end

0708 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

0709 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0710 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9ul_end

0711 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

0712 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9ul_end

0713 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0714 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

0715 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0716 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0717 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s9ur_end

0718 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0719 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0720 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9urj

0721 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0722 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9ur_end

0723 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0724 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0725 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0726 : 00001000000000000000001011100100; -- 	j p2s9ur_end  # Skip check jump piece since space is empty for move

0727 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0728 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9ur_n1

0729 : 00001000000000000000001011011100; -- 	j p2s9s13_1or3

0730 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0731 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9ur_end

0732 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

0733 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0734 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9ur_end

0735 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0736 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9ur_end

0737 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0738 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

0739 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0740 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

0741 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0742 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9dlj

0743 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0744 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9dl_end

0745 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0746 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

0747 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0748 : 00001000000000000000001011111010; -- 	j p2s9dl_end  # Skip check jump piece since space is empty for move

0749 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0750 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9dl_n1

0751 : 00001000000000000000001011110010; -- 	j p2s9s4_1or3

0752 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0753 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9dl_end

0754 : 00101010001000100000000000000000; -- 	addi $t0, $s1, -0

0755 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0756 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9dl_end

0757 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0758 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9dl_end

0759 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0760 : 00101000110000000000000000000000; -- 	addi $v1, $zero, 0

0761 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0762 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0763 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0764 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s9drj

0765 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0766 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s9dr_end

0767 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0768 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0769 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0770 : 00001000000000000000001100010000; -- 	j p2s9dr_end  # Skip check jump piece since space is empty for move

0771 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0772 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s9dr_n1

0773 : 00001000000000000000001100001000; -- 	j p2s9s5_1or3

0774 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0775 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s9dr_end

0776 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0777 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0778 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s9dr_end

0779 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0780 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s9dr_end

0781 : 00101000100000000000000000001001; -- 	addi $v0, $zero, 9

0782 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0783 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0784 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

0785 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0786 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0787 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s10n2

0788 : 00001000000000000000001100010111; -- 	j p2s10_2or4

0789 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0790 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s11

0791 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0792 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s10ul_end

0793 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

0794 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0795 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10ulj

0796 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0797 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10ul_end

0798 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0799 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

0800 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0801 : 00001000000000000000001100101111; -- 	j p2s10ul_end  # Skip check jump piece since space is empty for move

0802 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0803 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10ul_n1

0804 : 00001000000000000000001100100111; -- 	j p2s10s13_1or3

0805 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0806 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10ul_end

0807 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

0808 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0809 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10ul_end

0810 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0811 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10ul_end

0812 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0813 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

0814 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0815 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0816 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s10ur_end

0817 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0818 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0819 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10urj

0820 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0821 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10ur_end

0822 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0823 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0824 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0825 : 00001000000000000000001101000111; -- 	j p2s10ur_end  # Skip check jump piece since space is empty for move

0826 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0827 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10ur_n1

0828 : 00001000000000000000001100111111; -- 	j p2s10s14_1or3

0829 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0830 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10ur_end

0831 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

0832 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0833 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10ur_end

0834 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0835 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10ur_end

0836 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0837 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

0838 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0839 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

0840 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0841 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10dlj

0842 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0843 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10dl_end

0844 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0845 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

0846 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0847 : 00001000000000000000001101011101; -- 	j p2s10dl_end  # Skip check jump piece since space is empty for move

0848 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0849 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10dl_n1

0850 : 00001000000000000000001101010101; -- 	j p2s10s5_1or3

0851 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0852 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10dl_end

0853 : 00101010001000111111111111111111; -- 	addi $t0, $s1, -1

0854 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0855 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10dl_end

0856 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0857 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10dl_end

0858 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0859 : 00101000110000000000000000000001; -- 	addi $v1, $zero, 1

0860 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0861 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0862 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0863 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s10drj

0864 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0865 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s10dr_end

0866 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0867 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0868 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0869 : 00001000000000000000001101110011; -- 	j p2s10dr_end  # Skip check jump piece since space is empty for move

0870 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0871 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s10dr_n1

0872 : 00001000000000000000001101101011; -- 	j p2s10s6_1or3

0873 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0874 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s10dr_end

0875 : 00101010001000111111111111111101; -- 	addi $t0, $s1, -3

0876 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0877 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s10dr_end

0878 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0879 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s10dr_end

0880 : 00101000100000000000000000001010; -- 	addi $v0, $zero, 10

0881 : 00101000110000000000000000000011; -- 	addi $v1, $zero, 3

0882 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0883 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

0884 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0885 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0886 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s11n2

0887 : 00001000000000000000001101111010; -- 	j p2s11_2or4

0888 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0889 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s12

0890 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0891 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s11ul_end

0892 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

0893 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0894 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11ulj

0895 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0896 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s11ul_end

0897 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0898 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

0899 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0900 : 00001000000000000000001110010010; -- 	j p2s11ul_end  # Skip check jump piece since space is empty for move

0901 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0902 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s11ul_n1

0903 : 00001000000000000000001110001010; -- 	j p2s11s14_1or3

0904 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0905 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s11ul_end

0906 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

0907 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0908 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s11ul_end

0909 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0910 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s11ul_end

0911 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0912 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

0913 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0914 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0915 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s11ur_end

0916 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

0917 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0918 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11urj

0919 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0920 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s11ur_end

0921 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0922 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

0923 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0924 : 00001000000000000000001110011101; -- 	j p2s11ur_end  # Skip check jump piece since space is empty for move

0925 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

0926 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0927 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11dlj

0928 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0929 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s11dl_end

0930 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0931 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

0932 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0933 : 00001000000000000000001110110011; -- 	j p2s11dl_end  # Skip check jump piece since space is empty for move

0934 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0935 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s11dl_n1

0936 : 00001000000000000000001110101011; -- 	j p2s11s6_1or3

0937 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0938 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s11dl_end

0939 : 00101010001000111111111111111110; -- 	addi $t0, $s1, -2

0940 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0941 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s11dl_end

0942 : 00101010000000011111111111111010; -- 	addi $t0, $zero, -6

0943 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s11dl_end

0944 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0945 : 00101000110000000000000000000010; -- 	addi $v1, $zero, 2

0946 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0947 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

0948 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0949 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s11drj

0950 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0951 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s11dr_end

0952 : 00101000100000000000000000001011; -- 	addi $v0, $zero, 11

0953 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

0954 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0955 : 00001000000000000000001110111100; -- 	j p2s11dr_end  # Skip check jump piece since space is empty for move

0956 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

0957 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

0958 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

0959 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s12n2

0960 : 00001000000000000000001111000011; -- 	j p2s12_2or4

0961 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0962 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s13

0963 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0964 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s12ul_end

0965 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

0966 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0967 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12ulj

0968 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

0969 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s12ul_end

0970 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

0971 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

0972 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0973 : 00001000000000000000001111001110; -- 	j p2s12ul_end  # Skip check jump piece since space is empty for move

0974 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

0975 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s12ur_end

0976 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

0977 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

0978 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12urj

0979 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

0980 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s12ur_end

0981 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

0982 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

0983 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0984 : 00001000000000000000001111100110; -- 	j p2s12ur_end  # Skip check jump piece since space is empty for move

0985 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

0986 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s12ur_n1

0987 : 00001000000000000000001111011110; -- 	j p2s12s17_1or3

0988 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

0989 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s12ur_end

0990 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

0991 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

0992 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s12ur_end

0993 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

0994 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s12ur_end

0995 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

0996 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

0997 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

0998 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

0999 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1000 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12dlj

1001 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1002 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s12dl_end

1003 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1004 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

1005 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1006 : 00001000000000000000001111101111; -- 	j p2s12dl_end  # Skip check jump piece since space is empty for move

1007 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1008 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1009 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s12drj

1010 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1011 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s12dr_end

1012 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1013 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1014 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1015 : 00001000000000000000010000000101; -- 	j p2s12dr_end  # Skip check jump piece since space is empty for move

1016 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1017 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s12dr_n1

1018 : 00001000000000000000001111111101; -- 	j p2s12s9_1or3

1019 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1020 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s12dr_end

1021 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1022 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1023 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s12dr_end

1024 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1025 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s12dr_end

1026 : 00101000100000000000000000001100; -- 	addi $v0, $zero, 12

1027 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1028 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1029 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1030 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1031 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1032 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s13n2

1033 : 00001000000000000000010000001100; -- 	j p2s13_2or4

1034 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1035 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s14

1036 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1037 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s13ul_end

1038 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1039 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1040 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13ulj

1041 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1042 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13ul_end

1043 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1044 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1045 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1046 : 00001000000000000000010000100100; -- 	j p2s13ul_end  # Skip check jump piece since space is empty for move

1047 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1048 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13ul_n1

1049 : 00001000000000000000010000011100; -- 	j p2s13s17_1or3

1050 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1051 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13ul_end

1052 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1053 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1054 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13ul_end

1055 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1056 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13ul_end

1057 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1058 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1059 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1060 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1061 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s13ur_end

1062 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1063 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1064 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13urj

1065 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1066 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13ur_end

1067 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1068 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1069 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1070 : 00001000000000000000010000111100; -- 	j p2s13ur_end  # Skip check jump piece since space is empty for move

1071 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1072 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13ur_n1

1073 : 00001000000000000000010000110100; -- 	j p2s13s18_1or3

1074 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1075 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13ur_end

1076 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1077 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1078 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13ur_end

1079 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1080 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13ur_end

1081 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1082 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1083 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1084 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1085 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1086 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13dlj

1087 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1088 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13dl_end

1089 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1090 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1091 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1092 : 00001000000000000000010001010010; -- 	j p2s13dl_end  # Skip check jump piece since space is empty for move

1093 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1094 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13dl_n1

1095 : 00001000000000000000010001001010; -- 	j p2s13s9_1or3

1096 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1097 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13dl_end

1098 : 00101010001000111111111111111100; -- 	addi $t0, $s1, -4

1099 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1100 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13dl_end

1101 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1102 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13dl_end

1103 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1104 : 00101000110000000000000000000100; -- 	addi $v1, $zero, 4

1105 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1106 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1107 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1108 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s13drj

1109 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1110 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s13dr_end

1111 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1112 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1113 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1114 : 00001000000000000000010001101000; -- 	j p2s13dr_end  # Skip check jump piece since space is empty for move

1115 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1116 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s13dr_n1

1117 : 00001000000000000000010001100000; -- 	j p2s13s10_1or3

1118 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1119 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s13dr_end

1120 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1121 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1122 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s13dr_end

1123 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1124 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s13dr_end

1125 : 00101000100000000000000000001101; -- 	addi $v0, $zero, 13

1126 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

1127 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1128 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1129 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1130 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1131 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s14n2

1132 : 00001000000000000000010001101111; -- 	j p2s14_2or4

1133 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1134 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s15

1135 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1136 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s14ul_end

1137 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1138 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1139 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14ulj

1140 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1141 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14ul_end

1142 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1143 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1144 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1145 : 00001000000000000000010010000111; -- 	j p2s14ul_end  # Skip check jump piece since space is empty for move

1146 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1147 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14ul_n1

1148 : 00001000000000000000010001111111; -- 	j p2s14s18_1or3

1149 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1150 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14ul_end

1151 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1152 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1153 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14ul_end

1154 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1155 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14ul_end

1156 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1157 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1158 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1159 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1160 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s14ur_end

1161 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1162 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1163 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14urj

1164 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1165 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14ur_end

1166 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1167 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1168 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1169 : 00001000000000000000010010011111; -- 	j p2s14ur_end  # Skip check jump piece since space is empty for move

1170 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1171 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14ur_n1

1172 : 00001000000000000000010010010111; -- 	j p2s14s19_1or3

1173 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1174 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14ur_end

1175 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

1176 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1177 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14ur_end

1178 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1179 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14ur_end

1180 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1181 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

1182 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1183 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1184 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1185 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14dlj

1186 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1187 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14dl_end

1188 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1189 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1190 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1191 : 00001000000000000000010010110101; -- 	j p2s14dl_end  # Skip check jump piece since space is empty for move

1192 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1193 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14dl_n1

1194 : 00001000000000000000010010101101; -- 	j p2s14s10_1or3

1195 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1196 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14dl_end

1197 : 00101010001000111111111111111011; -- 	addi $t0, $s1, -5

1198 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1199 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14dl_end

1200 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1201 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14dl_end

1202 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1203 : 00101000110000000000000000000101; -- 	addi $v1, $zero, 5

1204 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1205 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1206 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1207 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s14drj

1208 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1209 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s14dr_end

1210 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1211 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1212 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1213 : 00001000000000000000010011001011; -- 	j p2s14dr_end  # Skip check jump piece since space is empty for move

1214 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1215 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s14dr_n1

1216 : 00001000000000000000010011000011; -- 	j p2s14s11_1or3

1217 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1218 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s14dr_end

1219 : 00101010001000111111111111111001; -- 	addi $t0, $s1, -7

1220 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1221 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s14dr_end

1222 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1223 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s14dr_end

1224 : 00101000100000000000000000001110; -- 	addi $v0, $zero, 14

1225 : 00101000110000000000000000000111; -- 	addi $v1, $zero, 7

1226 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1227 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1228 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1229 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1230 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s15n2

1231 : 00001000000000000000010011010010; -- 	j p2s15_2or4

1232 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1233 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s16

1234 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1235 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s15ul_end

1236 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1237 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1238 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s15ulj

1239 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1240 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s15ul_end

1241 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1242 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1243 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1244 : 00001000000000000000010011101010; -- 	j p2s15ul_end  # Skip check jump piece since space is empty for move

1245 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1246 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s15ul_n1

1247 : 00001000000000000000010011100010; -- 	j p2s15s19_1or3

1248 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1249 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s15ul_end

1250 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1251 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1252 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s15ul_end

1253 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1254 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s15ul_end

1255 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1256 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1257 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1258 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1259 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1260 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s15dlj

1261 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1262 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s15dl_end

1263 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1264 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1265 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1266 : 00001000000000000000010100000000; -- 	j p2s15dl_end  # Skip check jump piece since space is empty for move

1267 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1268 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s15dl_n1

1269 : 00001000000000000000010011111000; -- 	j p2s15s11_1or3

1270 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1271 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s15dl_end

1272 : 00101010001000111111111111111010; -- 	addi $t0, $s1, -6

1273 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1274 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s15dl_end

1275 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1276 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s15dl_end

1277 : 00101000100000000000000000001111; -- 	addi $v0, $zero, 15

1278 : 00101000110000000000000000000110; -- 	addi $v1, $zero, 6

1279 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1280 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

1281 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1282 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1283 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s16n2

1284 : 00001000000000000000010100000111; -- 	j p2s16_2or4

1285 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1286 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s17

1287 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1288 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s16ur_end

1289 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1290 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1291 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s16urj

1292 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1293 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s16ur_end

1294 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1295 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1296 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1297 : 00001000000000000000010100011111; -- 	j p2s16ur_end  # Skip check jump piece since space is empty for move

1298 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1299 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s16ur_n1

1300 : 00001000000000000000010100010111; -- 	j p2s16s20_1or3

1301 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1302 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s16ur_end

1303 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1304 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1305 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s16ur_end

1306 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1307 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s16ur_end

1308 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1309 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1310 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1311 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1312 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1313 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s16drj

1314 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1315 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s16dr_end

1316 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1317 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1318 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1319 : 00001000000000000000010100110101; -- 	j p2s16dr_end  # Skip check jump piece since space is empty for move

1320 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1321 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s16dr_n1

1322 : 00001000000000000000010100101101; -- 	j p2s16s12_1or3

1323 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1324 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s16dr_end

1325 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1326 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1327 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s16dr_end

1328 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1329 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s16dr_end

1330 : 00101000100000000000000000010000; -- 	addi $v0, $zero, 16

1331 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1332 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1333 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1334 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1335 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1336 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s17n2

1337 : 00001000000000000000010100111100; -- 	j p2s17_2or4

1338 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1339 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s18

1340 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1341 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s17ul_end

1342 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1343 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1344 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17ulj

1345 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1346 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17ul_end

1347 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1348 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1349 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1350 : 00001000000000000000010101010100; -- 	j p2s17ul_end  # Skip check jump piece since space is empty for move

1351 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1352 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17ul_n1

1353 : 00001000000000000000010101001100; -- 	j p2s17s20_1or3

1354 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1355 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17ul_end

1356 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

1357 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1358 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17ul_end

1359 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1360 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17ul_end

1361 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1362 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

1363 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1364 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1365 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s17ur_end

1366 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1367 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1368 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17urj

1369 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1370 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17ur_end

1371 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1372 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1373 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1374 : 00001000000000000000010101101100; -- 	j p2s17ur_end  # Skip check jump piece since space is empty for move

1375 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1376 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17ur_n1

1377 : 00001000000000000000010101100100; -- 	j p2s17s21_1or3

1378 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1379 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17ur_end

1380 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1381 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1382 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17ur_end

1383 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1384 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17ur_end

1385 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1386 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1387 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1388 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1389 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1390 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17dlj

1391 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1392 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17dl_end

1393 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1394 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1395 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1396 : 00001000000000000000010110000010; -- 	j p2s17dl_end  # Skip check jump piece since space is empty for move

1397 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1398 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17dl_n1

1399 : 00001000000000000000010101111010; -- 	j p2s17s12_1or3

1400 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1401 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17dl_end

1402 : 00101010001000111111111111111000; -- 	addi $t0, $s1, -8

1403 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1404 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17dl_end

1405 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1406 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17dl_end

1407 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1408 : 00101000110000000000000000001000; -- 	addi $v1, $zero, 8

1409 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1410 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1411 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1412 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s17drj

1413 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1414 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s17dr_end

1415 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1416 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1417 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1418 : 00001000000000000000010110011000; -- 	j p2s17dr_end  # Skip check jump piece since space is empty for move

1419 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1420 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s17dr_n1

1421 : 00001000000000000000010110010000; -- 	j p2s17s13_1or3

1422 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1423 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s17dr_end

1424 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1425 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1426 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s17dr_end

1427 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1428 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s17dr_end

1429 : 00101000100000000000000000010001; -- 	addi $v0, $zero, 17

1430 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1431 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1432 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1433 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1434 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1435 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s18n2

1436 : 00001000000000000000010110011111; -- 	j p2s18_2or4

1437 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1438 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s19

1439 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1440 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s18ul_end

1441 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1442 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1443 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18ulj

1444 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1445 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18ul_end

1446 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1447 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

1448 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1449 : 00001000000000000000010110110111; -- 	j p2s18ul_end  # Skip check jump piece since space is empty for move

1450 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1451 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18ul_n1

1452 : 00001000000000000000010110101111; -- 	j p2s18s21_1or3

1453 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1454 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18ul_end

1455 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1456 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1457 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18ul_end

1458 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1459 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18ul_end

1460 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1461 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1462 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1463 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1464 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s18ur_end

1465 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1466 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1467 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18urj

1468 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1469 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18ur_end

1470 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1471 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1472 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1473 : 00001000000000000000010111001111; -- 	j p2s18ur_end  # Skip check jump piece since space is empty for move

1474 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1475 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18ur_n1

1476 : 00001000000000000000010111000111; -- 	j p2s18s22_1or3

1477 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1478 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18ur_end

1479 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

1480 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1481 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18ur_end

1482 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1483 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18ur_end

1484 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1485 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

1486 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1487 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1488 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1489 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18dlj

1490 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1491 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18dl_end

1492 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1493 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1494 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1495 : 00001000000000000000010111100101; -- 	j p2s18dl_end  # Skip check jump piece since space is empty for move

1496 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1497 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18dl_n1

1498 : 00001000000000000000010111011101; -- 	j p2s18s13_1or3

1499 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1500 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18dl_end

1501 : 00101010001000111111111111110111; -- 	addi $t0, $s1, -9

1502 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1503 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18dl_end

1504 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1505 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18dl_end

1506 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1507 : 00101000110000000000000000001001; -- 	addi $v1, $zero, 9

1508 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1509 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1510 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1511 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s18drj

1512 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1513 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s18dr_end

1514 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1515 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1516 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1517 : 00001000000000000000010111111011; -- 	j p2s18dr_end  # Skip check jump piece since space is empty for move

1518 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1519 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s18dr_n1

1520 : 00001000000000000000010111110011; -- 	j p2s18s14_1or3

1521 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1522 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s18dr_end

1523 : 00101010001000111111111111110101; -- 	addi $t0, $s1, -11

1524 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1525 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s18dr_end

1526 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1527 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s18dr_end

1528 : 00101000100000000000000000010010; -- 	addi $v0, $zero, 18

1529 : 00101000110000000000000000001011; -- 	addi $v1, $zero, 11

1530 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1531 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1532 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1533 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1534 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s19n2

1535 : 00001000000000000000011000000010; -- 	j p2s19_2or4

1536 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1537 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s20

1538 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1539 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s19ul_end

1540 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1541 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1542 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19ulj

1543 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1544 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s19ul_end

1545 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1546 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

1547 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1548 : 00001000000000000000011000011010; -- 	j p2s19ul_end  # Skip check jump piece since space is empty for move

1549 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1550 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s19ul_n1

1551 : 00001000000000000000011000010010; -- 	j p2s19s22_1or3

1552 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1553 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s19ul_end

1554 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1555 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1556 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s19ul_end

1557 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1558 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s19ul_end

1559 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1560 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1561 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1562 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1563 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s19ur_end

1564 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

1565 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1566 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19urj

1567 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1568 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s19ur_end

1569 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1570 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

1571 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1572 : 00001000000000000000011000100101; -- 	j p2s19ur_end  # Skip check jump piece since space is empty for move

1573 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1574 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1575 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19dlj

1576 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1577 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s19dl_end

1578 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1579 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1580 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1581 : 00001000000000000000011000111011; -- 	j p2s19dl_end  # Skip check jump piece since space is empty for move

1582 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1583 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s19dl_n1

1584 : 00001000000000000000011000110011; -- 	j p2s19s14_1or3

1585 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1586 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s19dl_end

1587 : 00101010001000111111111111110110; -- 	addi $t0, $s1, -10

1588 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1589 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s19dl_end

1590 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1591 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s19dl_end

1592 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1593 : 00101000110000000000000000001010; -- 	addi $v1, $zero, 10

1594 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1595 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1596 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1597 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s19drj

1598 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1599 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s19dr_end

1600 : 00101000100000000000000000010011; -- 	addi $v0, $zero, 19

1601 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

1602 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1603 : 00001000000000000000011001000100; -- 	j p2s19dr_end  # Skip check jump piece since space is empty for move

1604 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1605 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1606 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1607 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s20n2

1608 : 00001000000000000000011001001011; -- 	j p2s20_2or4

1609 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1610 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s21

1611 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1612 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s20ul_end

1613 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

1614 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1615 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20ulj

1616 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1617 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s20ul_end

1618 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1619 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

1620 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1621 : 00001000000000000000011001010110; -- 	j p2s20ul_end  # Skip check jump piece since space is empty for move

1622 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1623 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s20ur_end

1624 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1625 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1626 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20urj

1627 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1628 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s20ur_end

1629 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1630 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1631 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1632 : 00001000000000000000011001101110; -- 	j p2s20ur_end  # Skip check jump piece since space is empty for move

1633 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1634 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s20ur_n1

1635 : 00001000000000000000011001100110; -- 	j p2s20s25_1or3

1636 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1637 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s20ur_end

1638 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

1639 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1640 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s20ur_end

1641 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1642 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s20ur_end

1643 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1644 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

1645 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1646 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

1647 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1648 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20dlj

1649 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1650 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s20dl_end

1651 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1652 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

1653 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1654 : 00001000000000000000011001110111; -- 	j p2s20dl_end  # Skip check jump piece since space is empty for move

1655 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1656 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1657 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s20drj

1658 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1659 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s20dr_end

1660 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1661 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1662 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1663 : 00001000000000000000011010001101; -- 	j p2s20dr_end  # Skip check jump piece since space is empty for move

1664 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1665 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s20dr_n1

1666 : 00001000000000000000011010000101; -- 	j p2s20s17_1or3

1667 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1668 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s20dr_end

1669 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1670 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1671 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s20dr_end

1672 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1673 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s20dr_end

1674 : 00101000100000000000000000010100; -- 	addi $v0, $zero, 20

1675 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1676 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1677 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

1678 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1679 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1680 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s21n2

1681 : 00001000000000000000011010010100; -- 	j p2s21_2or4

1682 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1683 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s22

1684 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1685 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s21ul_end

1686 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1687 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1688 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21ulj

1689 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1690 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21ul_end

1691 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1692 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

1693 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1694 : 00001000000000000000011010101100; -- 	j p2s21ul_end  # Skip check jump piece since space is empty for move

1695 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1696 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21ul_n1

1697 : 00001000000000000000011010100100; -- 	j p2s21s25_1or3

1698 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1699 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21ul_end

1700 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

1701 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1702 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21ul_end

1703 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1704 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21ul_end

1705 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1706 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

1707 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1708 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1709 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s21ur_end

1710 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1711 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1712 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21urj

1713 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1714 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21ur_end

1715 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1716 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1717 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1718 : 00001000000000000000011011000100; -- 	j p2s21ur_end  # Skip check jump piece since space is empty for move

1719 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1720 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21ur_n1

1721 : 00001000000000000000011010111100; -- 	j p2s21s26_1or3

1722 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1723 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21ur_end

1724 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

1725 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1726 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21ur_end

1727 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1728 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21ur_end

1729 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1730 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

1731 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1732 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1733 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1734 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21dlj

1735 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1736 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21dl_end

1737 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1738 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1739 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1740 : 00001000000000000000011011011010; -- 	j p2s21dl_end  # Skip check jump piece since space is empty for move

1741 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1742 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21dl_n1

1743 : 00001000000000000000011011010010; -- 	j p2s21s17_1or3

1744 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1745 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21dl_end

1746 : 00101010001000111111111111110100; -- 	addi $t0, $s1, -12

1747 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1748 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21dl_end

1749 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1750 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21dl_end

1751 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1752 : 00101000110000000000000000001100; -- 	addi $v1, $zero, 12

1753 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1754 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1755 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1756 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s21drj

1757 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1758 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s21dr_end

1759 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1760 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1761 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1762 : 00001000000000000000011011110000; -- 	j p2s21dr_end  # Skip check jump piece since space is empty for move

1763 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1764 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s21dr_n1

1765 : 00001000000000000000011011101000; -- 	j p2s21s18_1or3

1766 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1767 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s21dr_end

1768 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1769 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1770 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s21dr_end

1771 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1772 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s21dr_end

1773 : 00101000100000000000000000010101; -- 	addi $v0, $zero, 21

1774 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1775 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1776 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

1777 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1778 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1779 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s22n2

1780 : 00001000000000000000011011110111; -- 	j p2s22_2or4

1781 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1782 : 00010010010100000000000001011100; -- 	bne $t1, $t0, p2s23

1783 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1784 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s22ul_end

1785 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

1786 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1787 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22ulj

1788 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1789 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22ul_end

1790 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1791 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

1792 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1793 : 00001000000000000000011100001111; -- 	j p2s22ul_end  # Skip check jump piece since space is empty for move

1794 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1795 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22ul_n1

1796 : 00001000000000000000011100000111; -- 	j p2s22s26_1or3

1797 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1798 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22ul_end

1799 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

1800 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1801 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22ul_end

1802 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1803 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22ul_end

1804 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1805 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

1806 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1807 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1808 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s22ur_end

1809 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

1810 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1811 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22urj

1812 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1813 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22ur_end

1814 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1815 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

1816 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1817 : 00001000000000000000011100100111; -- 	j p2s22ur_end  # Skip check jump piece since space is empty for move

1818 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1819 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22ur_n1

1820 : 00001000000000000000011100011111; -- 	j p2s22s27_1or3

1821 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1822 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22ur_end

1823 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

1824 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1825 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22ur_end

1826 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1827 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22ur_end

1828 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1829 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

1830 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1831 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

1832 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1833 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22dlj

1834 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1835 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22dl_end

1836 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1837 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

1838 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1839 : 00001000000000000000011100111101; -- 	j p2s22dl_end  # Skip check jump piece since space is empty for move

1840 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1841 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22dl_n1

1842 : 00001000000000000000011100110101; -- 	j p2s22s18_1or3

1843 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1844 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22dl_end

1845 : 00101010001000111111111111110011; -- 	addi $t0, $s1, -13

1846 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1847 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22dl_end

1848 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1849 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22dl_end

1850 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1851 : 00101000110000000000000000001101; -- 	addi $v1, $zero, 13

1852 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1853 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1854 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1855 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s22drj

1856 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1857 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s22dr_end

1858 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1859 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1860 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1861 : 00001000000000000000011101010011; -- 	j p2s22dr_end  # Skip check jump piece since space is empty for move

1862 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1863 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s22dr_n1

1864 : 00001000000000000000011101001011; -- 	j p2s22s19_1or3

1865 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1866 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s22dr_end

1867 : 00101010001000111111111111110001; -- 	addi $t0, $s1, -15

1868 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1869 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s22dr_end

1870 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1871 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s22dr_end

1872 : 00101000100000000000000000010110; -- 	addi $v0, $zero, 22

1873 : 00101000110000000000000000001111; -- 	addi $v1, $zero, 15

1874 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1875 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

1876 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1877 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1878 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s23n2

1879 : 00001000000000000000011101011010; -- 	j p2s23_2or4

1880 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1881 : 00010010010100000000000000101110; -- 	bne $t1, $t0, p2s24

1882 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1883 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s23ul_end

1884 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

1885 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1886 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s23ulj

1887 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1888 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s23ul_end

1889 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1890 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

1891 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1892 : 00001000000000000000011101110010; -- 	j p2s23ul_end  # Skip check jump piece since space is empty for move

1893 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1894 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s23ul_n1

1895 : 00001000000000000000011101101010; -- 	j p2s23s27_1or3

1896 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1897 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s23ul_end

1898 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

1899 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1900 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s23ul_end

1901 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

1902 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s23ul_end

1903 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1904 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

1905 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1906 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

1907 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1908 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s23dlj

1909 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1910 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s23dl_end

1911 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1912 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

1913 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1914 : 00001000000000000000011110001000; -- 	j p2s23dl_end  # Skip check jump piece since space is empty for move

1915 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1916 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s23dl_n1

1917 : 00001000000000000000011110000000; -- 	j p2s23s19_1or3

1918 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1919 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s23dl_end

1920 : 00101010001000111111111111110010; -- 	addi $t0, $s1, -14

1921 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1922 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s23dl_end

1923 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1924 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s23dl_end

1925 : 00101000100000000000000000010111; -- 	addi $v0, $zero, 23

1926 : 00101000110000000000000000001110; -- 	addi $v1, $zero, 14

1927 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1928 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

1929 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1930 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1931 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s24n2

1932 : 00001000000000000000011110001111; -- 	j p2s24_2or4

1933 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1934 : 00010010010100000000000000100001; -- 	bne $t1, $t0, p2s25

1935 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1936 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s24ur_end

1937 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

1938 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1939 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s24urj

1940 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1941 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s24ur_end

1942 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

1943 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

1944 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1945 : 00001000000000000000011110011010; -- 	j p2s24ur_end  # Skip check jump piece since space is empty for move

1946 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1947 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1948 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s24drj

1949 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

1950 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s24dr_end

1951 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

1952 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

1953 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1954 : 00001000000000000000011110110000; -- 	j p2s24dr_end  # Skip check jump piece since space is empty for move

1955 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

1956 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s24dr_n1

1957 : 00001000000000000000011110101000; -- 	j p2s24s20_1or3

1958 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

1959 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s24dr_end

1960 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

1961 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

1962 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s24dr_end

1963 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

1964 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s24dr_end

1965 : 00101000100000000000000000011000; -- 	addi $v0, $zero, 24

1966 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

1967 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1968 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

1969 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

1970 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

1971 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s25n2

1972 : 00001000000000000000011110110111; -- 	j p2s25_2or4

1973 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1974 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s26

1975 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1976 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s25ul_end

1977 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

1978 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1979 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25ulj

1980 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1981 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s25ul_end

1982 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

1983 : 00101000110000000000000000011100; -- 	addi $v1, $zero, 28

1984 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1985 : 00001000000000000000011111000010; -- 	j p2s25ul_end  # Skip check jump piece since space is empty for move

1986 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

1987 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s25ur_end

1988 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

1989 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1990 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25urj

1991 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

1992 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s25ur_end

1993 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

1994 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

1995 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

1996 : 00001000000000000000011111001101; -- 	j p2s25ur_end  # Skip check jump piece since space is empty for move

1997 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

1998 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

1999 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25dlj

2000 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2001 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s25dl_end

2002 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2003 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2004 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2005 : 00001000000000000000011111100011; -- 	j p2s25dl_end  # Skip check jump piece since space is empty for move

2006 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2007 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s25dl_n1

2008 : 00001000000000000000011111011011; -- 	j p2s25s20_1or3

2009 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2010 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s25dl_end

2011 : 00101010001000111111111111110000; -- 	addi $t0, $s1, -16

2012 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2013 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s25dl_end

2014 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2015 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s25dl_end

2016 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2017 : 00101000110000000000000000010000; -- 	addi $v1, $zero, 16

2018 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2019 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2020 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2021 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s25drj

2022 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2023 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s25dr_end

2024 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2025 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2026 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2027 : 00001000000000000000011111111001; -- 	j p2s25dr_end  # Skip check jump piece since space is empty for move

2028 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2029 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s25dr_n1

2030 : 00001000000000000000011111110001; -- 	j p2s25s21_1or3

2031 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2032 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s25dr_end

2033 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2034 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2035 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s25dr_end

2036 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2037 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s25dr_end

2038 : 00101000100000000000000000011001; -- 	addi $v0, $zero, 25

2039 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2040 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2041 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2042 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2043 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2044 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s26n2

2045 : 00001000000000000000100000000000; -- 	j p2s26_2or4

2046 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2047 : 00010010010100000000000001000010; -- 	bne $t1, $t0, p2s27

2048 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2049 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s26ul_end

2050 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

2051 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2052 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26ulj

2053 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2054 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s26ul_end

2055 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2056 : 00101000110000000000000000011101; -- 	addi $v1, $zero, 29

2057 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2058 : 00001000000000000000100000001011; -- 	j p2s26ul_end  # Skip check jump piece since space is empty for move

2059 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2060 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s26ur_end

2061 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

2062 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2063 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26urj

2064 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2065 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s26ur_end

2066 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2067 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

2068 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2069 : 00001000000000000000100000010110; -- 	j p2s26ur_end  # Skip check jump piece since space is empty for move

2070 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2071 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2072 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26dlj

2073 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2074 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s26dl_end

2075 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2076 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2077 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2078 : 00001000000000000000100000101100; -- 	j p2s26dl_end  # Skip check jump piece since space is empty for move

2079 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2080 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s26dl_n1

2081 : 00001000000000000000100000100100; -- 	j p2s26s21_1or3

2082 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2083 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s26dl_end

2084 : 00101010001000111111111111101111; -- 	addi $t0, $s1, -17

2085 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2086 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s26dl_end

2087 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2088 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s26dl_end

2089 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2090 : 00101000110000000000000000010001; -- 	addi $v1, $zero, 17

2091 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2092 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2093 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2094 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s26drj

2095 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2096 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s26dr_end

2097 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2098 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2099 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2100 : 00001000000000000000100001000010; -- 	j p2s26dr_end  # Skip check jump piece since space is empty for move

2101 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2102 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s26dr_n1

2103 : 00001000000000000000100000111010; -- 	j p2s26s22_1or3

2104 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2105 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s26dr_end

2106 : 00101010001000111111111111101101; -- 	addi $t0, $s1, -19

2107 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2108 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s26dr_end

2109 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2110 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s26dr_end

2111 : 00101000100000000000000000011010; -- 	addi $v0, $zero, 26

2112 : 00101000110000000000000000010011; -- 	addi $v1, $zero, 19

2113 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2114 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2115 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2116 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2117 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s27n2

2118 : 00001000000000000000100001001001; -- 	j p2s27_2or4

2119 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2120 : 00010010010100000000000000110101; -- 	bne $t1, $t0, p2s28

2121 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2122 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s27ul_end

2123 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

2124 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2125 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27ulj

2126 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2127 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27ul_end

2128 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2129 : 00101000110000000000000000011110; -- 	addi $v1, $zero, 30

2130 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2131 : 00001000000000000000100001010100; -- 	j p2s27ul_end  # Skip check jump piece since space is empty for move

2132 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2133 : 00010010010100000000000000001001; -- 	bne $t1, $t0, p2s27ur_end

2134 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

2135 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2136 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27urj

2137 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2138 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27ur_end

2139 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2140 : 00101000110000000000000000011111; -- 	addi $v1, $zero, 31

2141 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2142 : 00001000000000000000100001011111; -- 	j p2s27ur_end  # Skip check jump piece since space is empty for move

2143 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2144 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2145 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27dlj

2146 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2147 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s27dl_end

2148 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2149 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2150 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2151 : 00001000000000000000100001110101; -- 	j p2s27dl_end  # Skip check jump piece since space is empty for move

2152 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2153 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s27dl_n1

2154 : 00001000000000000000100001101101; -- 	j p2s27s22_1or3

2155 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2156 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s27dl_end

2157 : 00101010001000111111111111101110; -- 	addi $t0, $s1, -18

2158 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2159 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s27dl_end

2160 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2161 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s27dl_end

2162 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2163 : 00101000110000000000000000010010; -- 	addi $v1, $zero, 18

2164 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2165 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

2166 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2167 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s27drj

2168 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2169 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s27dr_end

2170 : 00101000100000000000000000011011; -- 	addi $v0, $zero, 27

2171 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

2172 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2173 : 00001000000000000000100001111110; -- 	j p2s27dr_end  # Skip check jump piece since space is empty for move

2174 : 00101010001000111111111111100100; -- 	addi $t0, $s1, -28

2175 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2176 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2177 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s28n2

2178 : 00001000000000000000100010000101; -- 	j p2s28_2or4

2179 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2180 : 00010010010100000000000000011111; -- 	bne $t1, $t0, p2s29

2181 : 00101010001000111111111111101000; -- 	addi $t0, $s1, -24

2182 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2183 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s28dlj

2184 : 00101010000000011111111111111101; -- 	addi $t0, $zero, -3

2185 : 00110110010100000000000000000100; -- 	blt $t9, $t0, p2s28dl_end

2186 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

2187 : 00101000110000000000000000011000; -- 	addi $v1, $zero, 24

2188 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2189 : 00001000000000000000100010001110; -- 	j p2s28dl_end  # Skip check jump piece since space is empty for move

2190 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

2191 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2192 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s28drj

2193 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2194 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s28dr_end

2195 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

2196 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

2197 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2198 : 00001000000000000000100010100100; -- 	j p2s28dr_end  # Skip check jump piece since space is empty for move

2199 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2200 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s28dr_n1

2201 : 00001000000000000000100010011100; -- 	j p2s28s25_1or3

2202 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2203 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s28dr_end

2204 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2205 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2206 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s28dr_end

2207 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2208 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s28dr_end

2209 : 00101000100000000000000000011100; -- 	addi $v0, $zero, 28

2210 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2211 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2212 : 00101010001000111111111111100011; -- 	addi $t0, $s1, -29

2213 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2214 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2215 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s29n2

2216 : 00001000000000000000100010101011; -- 	j p2s29_2or4

2217 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2218 : 00010010010100000000000000101100; -- 	bne $t1, $t0, p2s30

2219 : 00101010001000111111111111100111; -- 	addi $t0, $s1, -25

2220 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2221 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s29dlj

2222 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2223 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s29dl_end

2224 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2225 : 00101000110000000000000000011001; -- 	addi $v1, $zero, 25

2226 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2227 : 00001000000000000000100011000001; -- 	j p2s29dl_end  # Skip check jump piece since space is empty for move

2228 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2229 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s29dl_n1

2230 : 00001000000000000000100010111001; -- 	j p2s29s25_1or3

2231 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2232 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s29dl_end

2233 : 00101010001000111111111111101100; -- 	addi $t0, $s1, -20

2234 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2235 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s29dl_end

2236 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2237 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s29dl_end

2238 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2239 : 00101000110000000000000000010100; -- 	addi $v1, $zero, 20

2240 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2241 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2242 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2243 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s29drj

2244 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2245 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s29dr_end

2246 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2247 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

2248 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2249 : 00001000000000000000100011010111; -- 	j p2s29dr_end  # Skip check jump piece since space is empty for move

2250 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2251 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s29dr_n1

2252 : 00001000000000000000100011001111; -- 	j p2s29s26_1or3

2253 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2254 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s29dr_end

2255 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2256 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2257 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s29dr_end

2258 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2259 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s29dr_end

2260 : 00101000100000000000000000011101; -- 	addi $v0, $zero, 29

2261 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2262 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2263 : 00101010001000111111111111100010; -- 	addi $t0, $s1, -30

2264 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2265 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2266 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s30n2

2267 : 00001000000000000000100011011110; -- 	j p2s30_2or4

2268 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2269 : 00010010010100000000000000101100; -- 	bne $t1, $t0, p2s31

2270 : 00101010001000111111111111100110; -- 	addi $t0, $s1, -26

2271 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2272 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s30dlj

2273 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2274 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s30dl_end

2275 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2276 : 00101000110000000000000000011010; -- 	addi $v1, $zero, 26

2277 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2278 : 00001000000000000000100011110100; -- 	j p2s30dl_end  # Skip check jump piece since space is empty for move

2279 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2280 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s30dl_n1

2281 : 00001000000000000000100011101100; -- 	j p2s30s26_1or3

2282 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2283 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s30dl_end

2284 : 00101010001000111111111111101011; -- 	addi $t0, $s1, -21

2285 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2286 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s30dl_end

2287 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2288 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s30dl_end

2289 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2290 : 00101000110000000000000000010101; -- 	addi $v1, $zero, 21

2291 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2292 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2293 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2294 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s30drj

2295 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2296 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s30dr_end

2297 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2298 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

2299 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2300 : 00001000000000000000100100001010; -- 	j p2s30dr_end  # Skip check jump piece since space is empty for move

2301 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2302 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s30dr_n1

2303 : 00001000000000000000100100000010; -- 	j p2s30s27_1or3

2304 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2305 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s30dr_end

2306 : 00101010001000111111111111101001; -- 	addi $t0, $s1, -23

2307 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2308 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s30dr_end

2309 : 00101010000000011111111111111100; -- 	addi $t0, $zero, -4

2310 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s30dr_end

2311 : 00101000100000000000000000011110; -- 	addi $v0, $zero, 30

2312 : 00101000110000000000000000010111; -- 	addi $v1, $zero, 23

2313 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2314 : 00101010001000111111111111100001; -- 	addi $t0, $s1, -31

2315 : 01000010010100000000000000000000; -- 	lw $t1, 0($t0)

2316 : 00101010000000000000000000000010; -- 	addi $t0, $zero, 2

2317 : 00010010010100000000000000000001; -- 	bne $t1, $t0, p2s31n2

2318 : 00001000000000000000100100010001; -- 	j p2s31_2or4

2319 : 00101010000000000000000000000100; -- 	addi $t0, $zero, 4

2320 : 00010010010100000000000000010110; -- 	bne $t1, $t0, p2s32

2321 : 00101010001000111111111111100101; -- 	addi $t0, $s1, -27

2322 : 01000010100100000000000000000000; -- 	lw $t2, 0($t0)

2323 : 00010010100000000000000000000110; -- 	bne $t2, $zero, p2s31dlj

2324 : 00101010000000011111111111111111; -- 	addi $t0, $zero, -1

2325 : 00110110010100000000000000010001; -- 	blt $t9, $t0, p2s31dl_end

2326 : 00101000100000000000000000011111; -- 	addi $v0, $zero, 31

2327 : 00101000110000000000000000011011; -- 	addi $v1, $zero, 27

2328 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2329 : 00001000000000000000100100100111; -- 	j p2s31dl_end  # Skip check jump piece since space is empty for move

2330 : 00101010000000000000000000000001; -- 	addi $t0, $zero, 1

2331 : 00010010100100000000000000000001; -- 	bne $t2, $t0, p2s31dl_n1

2332 : 00001000000000000000100100011111; -- 	j p2s31s27_1or3

2333 : 00101010000000000000000000000011; -- 	addi $t0, $zero, 3

2334 : 00010010100100000000000000001000; -- 	bne $t2, $t0, p2s31dl_end

2335 : 00101010001000111111111111101010; -- 	addi $t0, $s1, -22

2336 : 01000010110100000000000000000000; -- 	lw $t3, 0($t0)

2337 : 00010010110000000000000000000101; -- 	bne $t3, $zero, p2s31dl_end

2338 : 00101010000000011111111111111110; -- 	addi $t0, $zero, -2

2339 : 00110110010100000000000000000011; -- 	blt $t9, $t0, p2s31dl_end

2340 : 00101000100000000000000000011111; -- 	addi $v0, $zero, 31

2341 : 00101000110000000000000000010110; -- 	addi $v1, $zero, 22

2342 : 00000110010000001000000000000000; -- 	add $t9, $zero, $t0

2343 : 01000111111110100000000000000000; -- 	lw $ra, 0($sp)			# $ra = [$sp+0]

2344 : 00000111011110110010000000000000; -- 	add $sp, $sp, $s2		# Move stack pointer back to original location

2345 : 00100111110000000000000000000000; -- 	jr $ra					# Return

[2346..4095] : 00000000000000000000000000000000;
END;
